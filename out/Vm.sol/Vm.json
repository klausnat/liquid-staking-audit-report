{"abi":[{"type":"function","name":"accessList","inputs":[{"name":"access","type":"tuple[]","internalType":"struct VmSafe.AccessListItem[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"storageKeys","type":"bytes32[]","internalType":"bytes32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialReverts","type":"tuple[]","internalType":"struct VmSafe.PotentialRevert[]","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assumeNoRevert","inputs":[{"name":"potentialRevert","type":"tuple","internalType":"struct VmSafe.PotentialRevert","components":[{"name":"reverter","type":"address","internalType":"address"},{"name":"partialMatch","type":"bool","internalType":"bool"},{"name":"revertData","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"attachBlob","inputs":[{"name":"blob","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"attachDelegation","inputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"bound","inputs":[{"name":"current","type":"uint256","internalType":"uint256"},{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"bound","inputs":[{"name":"current","type":"int256","internalType":"int256"},{"name":"min","type":"int256","internalType":"int256"},{"name":"max","type":"int256","internalType":"int256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cloneAccount","inputs":[{"name":"source","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"contains","inputs":[{"name":"subject","type":"string","internalType":"string"},{"name":"search","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"cool","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coolSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"copyStorage","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteStateSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eip712HashStruct","inputs":[{"name":"bindingsPath","type":"string","internalType":"string"},{"name":"typeName","type":"string","internalType":"string"},{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashStruct","inputs":[{"name":"typeNameOrDefinition","type":"string","internalType":"string"},{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashType","inputs":[{"name":"bindingsPath","type":"string","internalType":"string"},{"name":"typeName","type":"string","internalType":"string"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashType","inputs":[{"name":"typeNameOrDefinition","type":"string","internalType":"string"}],"outputs":[{"name":"typeHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"eip712HashTypedData","inputs":[{"name":"jsonData","type":"string","internalType":"string"}],"outputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCreate2","inputs":[{"name":"bytecode","type":"bytes","internalType":"bytes"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectPartialRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"},{"name":"reverter","type":"address","internalType":"address"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"reverter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"foundryVersionAtLeast","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"foundryVersionCmp","inputs":[{"name":"version","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByCode","inputs":[{"name":"code","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getArtifactPathByDeployedCode","inputs":[{"name":"deployedCode","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBroadcast","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple","internalType":"struct VmSafe.BroadcastTxSummary","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getBroadcasts","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct VmSafe.BroadcastTxSummary[]","components":[{"name":"txHash","type":"bytes32","internalType":"bytes32"},{"name":"txType","type":"uint8","internalType":"enum VmSafe.BroadcastTxType"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"success","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainAlias","type":"string","internalType":"string"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getChain","inputs":[{"name":"chainId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"chain","type":"tuple","internalType":"struct VmSafe.Chain","components":[{"name":"name","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"chainAlias","type":"string","internalType":"string"},{"name":"rpcUrl","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"blockChainId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployment","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeployments","inputs":[{"name":"contractName","type":"string","internalType":"string"},{"name":"chainId","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"deployedAddresses","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getEvmVersion","inputs":[],"outputs":[{"name":"evm","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"getFoundryVersion","inputs":[],"outputs":[{"name":"version","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getRawBlockHeader","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"rlpHeader","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getStateDiff","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStateDiffJson","inputs":[],"outputs":[{"name":"diff","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getStorageAccesses","inputs":[],"outputs":[{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getStorageSlots","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"variableName","type":"string","internalType":"string"}],"outputs":[{"name":"slots","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[],"outputs":[{"name":"wallets","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"interceptInitcode","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes4","internalType":"bytes4"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCalls","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockFunction","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"noAccessList","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlType","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlTypeArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"pauseTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"publicKeyP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"randomBool","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"randomBytes","inputs":[{"name":"len","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"randomBytes4","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"randomBytes8","inputs":[],"outputs":[{"name":"","type":"bytes8","internalType":"bytes8"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomInt","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"bits","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKeys","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"language","type":"string","internalType":"string"},{"name":"count","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"keyAddrs","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolveEnv","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeTracing","inputs":[],"outputs":[],"stateMutability":"view"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToState","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToStateAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"overwrite","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setArbitraryStorage","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEvmVersion","inputs":[{"name":"evm","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSeed","inputs":[{"name":"seed","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"shuffle","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signAndAttachDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"signCompact","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signCompact","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"vs","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"crossChain","type":"bool","internalType":"bool"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signDelegation","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"nonce","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"signedDelegation","type":"tuple","internalType":"struct VmSafe.SignedDelegation","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint64","internalType":"uint64"},{"name":"implementation","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signWithNonceUnsafe","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"},{"name":"reason","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotGasLastCall","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotState","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshotValue","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sort","inputs":[{"name":"array","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startDebugTraceRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"},{"name":"delegateCall","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnDebugTraceRecording","inputs":[],"outputs":[{"name":"step","type":"tuple[]","internalType":"struct VmSafe.DebugStep[]","components":[{"name":"stack","type":"uint256[]","internalType":"uint256[]"},{"name":"memoryInput","type":"bytes","internalType":"bytes"},{"name":"opcode","type":"uint8","internalType":"uint8"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isOutOfGas","type":"bool","internalType":"bool"},{"name":"contractAddr","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"oldNonce","type":"uint64","internalType":"uint64"},{"name":"newNonce","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopRecord","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"group","type":"string","internalType":"string"},{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"stopSnapshotGas","inputs":[],"outputs":[{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"warmSlot","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accessList((address,bytes32[])[])":"743e4cb7","accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","assumeNoRevert((address,bool,bytes))":"d8591eeb","assumeNoRevert((address,bool,bytes)[])":"8a4592cc","assumeNoRevert()":"285b366a","attachBlob(bytes)":"10cb385c","attachDelegation((uint8,bytes32,bytes32,uint64,address))":"14ae3519","attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)":"f4460d34","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","bound(int256,int256,int256)":"8f48fc07","bound(uint256,uint256,uint256)":"5a6c1eed","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","cloneAccount(address,address)":"533d61c9","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","contains(string,string)":"3fb18aec","cool(address)":"40ff9f21","coolSlot(address,bytes32)":"8c78e654","copyFile(string,string)":"a54a87d8","copyStorage(address,address)":"203dac0d","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deleteStateSnapshot(uint256)":"08d6b37a","deleteStateSnapshots()":"e0933c74","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deployCode(string,bytes,bytes32)":"016155bf","deployCode(string,bytes,uint256)":"ff5d64e4","deployCode(string,bytes,uint256,bytes32)":"3aa773ea","deployCode(string,bytes32)":"17ab1d79","deployCode(string,uint256)":"0af6a701","deployCode(string,uint256,bytes32)":"002cb687","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","eip712HashStruct(string,bytes)":"aedeaebc","eip712HashStruct(string,string,bytes)":"6d06c57c","eip712HashType(string)":"6792e9e2","eip712HashType(string,string)":"18fb6406","eip712HashTypedData(string)":"ea25e615","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectCreate(bytes,address)":"73cdce36","expectCreate2(bytes,address)":"ea54a472","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(address,uint64)":"b43aece3","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmit(bool,bool,bool,bool,address,uint64)":"c339d02c","expectEmit(bool,bool,bool,bool,uint64)":"5e1d1c33","expectEmit(uint64)":"4c74a335","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectPartialRevert(bytes4)":"11fb5b9c","expectPartialRevert(bytes4,address)":"51aa008a","expectRevert()":"f4844814","expectRevert(address)":"d814f38a","expectRevert(address,uint64)":"1ff5f952","expectRevert(bytes)":"f28dceb3","expectRevert(bytes,address)":"61ebcf12","expectRevert(bytes,address,uint64)":"d345fb1f","expectRevert(bytes,uint64)":"4994c273","expectRevert(bytes4)":"c31eb0e0","expectRevert(bytes4,address)":"260bc5de","expectRevert(bytes4,address,uint64)":"b0762d73","expectRevert(bytes4,uint64)":"e45ca72d","expectRevert(uint64)":"4ee38244","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","foundryVersionAtLeast(string)":"6248be1f","foundryVersionCmp(string)":"ca7b0a09","fsMetadata(string)":"af368a08","getArtifactPathByCode(bytes)":"eb74848c","getArtifactPathByDeployedCode(bytes)":"6d853ba5","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getBroadcast(string,uint64,uint8)":"3dc90cb3","getBroadcasts(string,uint64)":"f2fa4a26","getBroadcasts(string,uint64,uint8)":"f7afe919","getChain(string)":"4cc1c2bb","getChain(uint256)":"b6791ad4","getChainId()":"3408e470","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getDeployment(string)":"a8091d97","getDeployment(string,uint64)":"0debd5d6","getDeployments(string,uint64)":"74e133dd","getEvmVersion()":"aa2bb222","getFoundryVersion()":"ea991bb5","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRawBlockHeader(uint256)":"2c667606","getRecordedLogs()":"191553a4","getStateDiff()":"80df01cc","getStateDiffJson()":"f54fe009","getStorageAccesses()":"2899b1d0","getStorageSlots(address,string)":"efa136d9","getWallets()":"db7a4605","indexOf(string,string)":"8a0807b7","interceptInitcode()":"838653c7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,bytes4,bytes)":"08e0c537","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCall(address,uint256,bytes4,bytes)":"e7b36a3d","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,bytes4,bytes)":"2dfba5df","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","mockCallRevert(address,uint256,bytes4,bytes)":"596c8f04","mockCalls(address,bytes,bytes[])":"5c5c3de9","mockCalls(address,uint256,bytes,bytes[])":"08bcbae1","mockFunction(address,address,bytes)":"adf84d21","noAccessList()":"238ad778","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlType(string,string)":"47fa5e11","parseTomlType(string,string,string)":"f9fa5cdb","parseTomlTypeArray(string,string,string)":"49be3743","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","pauseTracing()":"c94d1f90","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prank(address,address,bool)":"7d73d042","prank(address,bool)":"a7f8bf5c","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","publicKeyP256(uint256)":"c453949e","randomAddress()":"d5bee9f5","randomBool()":"cdc126bd","randomBytes(uint256)":"6c5d32a9","randomBytes4()":"9b7cd579","randomBytes8()":"0497b0a5","randomInt()":"111f1202","randomInt(uint256)":"12845966","randomUint()":"25124730","randomUint(uint256)":"cf81e69c","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","rememberKeys(string,string,string,uint32)":"f8d58eaf","rememberKeys(string,string,uint32)":"97cb9189","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetGasMetering()":"be367dd3","resetNonce(address)":"1c72346d","resolveEnv(string)":"ddd2128d","resumeGasMetering()":"2bcd50e0","resumeTracing()":"72a09ccb","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revertToState(uint256)":"c2527405","revertToStateAndDelete(uint256)":"3a1985dc","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setArbitraryStorage(address)":"e1631837","setArbitraryStorage(address,bool)":"d3ec2a0b","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setEvmVersion(string)":"43179f5a","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","setSeed(uint256)":"c32a50f9","shuffle(uint256[])":"54f1469c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signAndAttachDelegation(address,uint256)":"c7fa7288","signAndAttachDelegation(address,uint256,bool)":"d936e146","signAndAttachDelegation(address,uint256,uint64)":"cde3e5be","signCompact((address,uint256,uint256,uint256),bytes32)":"3d0e292f","signCompact(address,bytes32)":"8e2f97bf","signCompact(bytes32)":"a282dc4b","signCompact(uint256,bytes32)":"cc2a781f","signDelegation(address,uint256)":"5b593c7b","signDelegation(address,uint256,bool)":"cdd7563d","signDelegation(address,uint256,uint64)":"ceba2ec3","signP256(uint256,bytes32)":"83211b40","signWithNonceUnsafe(uint256,bytes32,uint256)":"2012783a","skip(bool)":"dd82d13e","skip(bool,string)":"c42a80a7","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","snapshotGasLastCall(string)":"dd9fca12","snapshotGasLastCall(string,string)":"200c6772","snapshotState()":"9cd23835","snapshotValue(string,string,uint256)":"6d2b27d8","snapshotValue(string,uint256)":"51db805a","sort(uint256[])":"9ec8b026","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startDebugTraceRecording()":"419c8832","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startPrank(address,address,bool)":"4eb859b5","startPrank(address,bool)":"1cc0b435","startSnapshotGas(string)":"3cad9d7b","startSnapshotGas(string,string)":"6cd0cc53","startStateDiffRecording()":"cf22e3c9","stopAndReturnDebugTraceRecording()":"ced398a2","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","stopRecord()":"996be76d","stopSnapshotGas()":"f6402eda","stopSnapshotGas(string)":"773b2805","stopSnapshotGas(string,string)":"0c9db707","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warmSlot(address,bytes32)":"b23184cf","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"storageKeys\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct VmSafe.AccessListItem[]\",\"name\":\"access\",\"type\":\"tuple[]\"}],\"name\":\"accessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert[]\",\"name\":\"potentialReverts\",\"type\":\"tuple[]\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"partialMatch\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.PotentialRevert\",\"name\":\"potentialRevert\",\"type\":\"tuple\"}],\"name\":\"assumeNoRevert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"blob\",\"type\":\"bytes\"}],\"name\":\"attachBlob\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"attachDelegation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"min\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"max\",\"type\":\"int256\"}],\"name\":\"bound\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cloneAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"subject\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"search\",\"type\":\"string\"}],\"name\":\"contains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"cool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"coolSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"copyStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteStateSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteStateSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"name\":\"eip712HashStruct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bindingsPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeName\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeNameOrDefinition\",\"type\":\"string\"}],\"name\":\"eip712HashType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"jsonData\",\"type\":\"string\"}],\"name\":\"eip712HashTypedData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"expectCreate2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectPartialRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reverter\",\"type\":\"address\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionAtLeast\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"name\":\"foundryVersionCmp\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"code\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"}],\"name\":\"getArtifactPathByDeployedCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcast\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"}],\"name\":\"getBroadcasts\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"internalType\":\"enum VmSafe.BroadcastTxType\",\"name\":\"txType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.BroadcastTxSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getChain\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"chainAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rpcUrl\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Chain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockChainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getDeployment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"chainId\",\"type\":\"uint64\"}],\"name\":\"getDeployments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"deployedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEvmVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"evm\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFoundryVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getRawBlockHeader\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rlpHeader\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiff\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateDiffJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"diff\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageAccesses\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"variableName\",\"type\":\"string\"}],\"name\":\"getStorageSlots\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"slots\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interceptInitcode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"data\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"name\":\"mockCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mockFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noAccessList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseTomlTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"publicKeyP256\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"name\":\"randomBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes4\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomBytes8\",\"outputs\":[{\"internalType\":\"bytes8\",\"name\":\"\",\"type\":\"bytes8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bits\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"rememberKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"keyAddrs\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"resolveEnv\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeTracing\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToStateAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"overwrite\",\"type\":\"bool\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"setArbitraryStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"evm\",\"type\":\"string\"}],\"name\":\"setEvmVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"setSeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"shuffle\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signAndAttachDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signCompact\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"crossChain\",\"type\":\"bool\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"signDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.SignedDelegation\",\"name\":\"signedDelegation\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"signWithNonceUnsafe\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"snapshotGasLastCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"snapshotValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"array\",\"type\":\"uint256[]\"}],\"name\":\"sort\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDebugTraceRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"startSnapshotGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnDebugTraceRecording\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"memoryInput\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"opcode\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isOutOfGas\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.DebugStep[]\",\"name\":\"step\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"oldNonce\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"group\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSnapshotGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"warmSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accessList((address,bytes32[])[])\":{\"notice\":\"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions.\"},\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"assumeNoRevert((address,bool,bytes))\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters.\"},\"assumeNoRevert((address,bool,bytes)[])\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters.\"},\"assumeNoRevert()\":{\"notice\":\"Discard this run's fuzz inputs and generate new ones if next call reverted.\"},\"attachBlob(bytes)\":{\"notice\":\"Attach an EIP-4844 blob to the next call\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address))\":{\"notice\":\"Designate the next call as an EIP-7702 transaction\"},\"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)\":{\"notice\":\"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"bound(int256,int256,int256)\":{\"notice\":\"Returns an int256 value bounded in given range and different from the current one.\"},\"bound(uint256,uint256,uint256)\":{\"notice\":\"Returns an uint256 value bounded in given range and different from the current one.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"cloneAccount(address,address)\":{\"notice\":\"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"contains(string,string)\":{\"notice\":\"Returns true if `search` is found in `subject`, false otherwise.\"},\"cool(address)\":{\"notice\":\"Marks the slots of an account and the account address as cold.\"},\"coolSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as cold, simulating no prior read.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"copyStorage(address,address)\":{\"notice\":\"Utility cheatcode to copy storage of `from` contract to another `to` contract.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions.\"},\"deleteSnapshots()\":{\"notice\":\"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions.\"},\"deleteStateSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteStateSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments.\"},\"deployCode(string,bytes,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`.\"},\"deployCode(string,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,uint256)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deployCode(string,uint256,bytes32)\":{\"notice\":\"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"eip712HashStruct(string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \\\"PermitSingle\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashStruct(string,string,bytes)\":{\"notice\":\"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"PermitSingle\\\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed.\"},\"eip712HashType(string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \\\"Transaction\\\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \\\"Foo(Bar bar) Bar(uint256 baz)\\\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces.\"},\"eip712HashType(string,string)\":{\"notice\":\"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \\\"Transaction\\\").\"},\"eip712HashTypedData(string)\":{\"notice\":\"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCreate(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode\"},\"expectCreate2(bytes,address)\":{\"notice\":\"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with all topic and data checks enabled.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool,address,uint64)\":{\"notice\":\"Expect a given number of logs from a specific emitter with the provided topics.\"},\"expectEmit(bool,bool,bool,bool,uint64)\":{\"notice\":\"Expect a given number of logs with the provided topics.\"},\"expectEmit(uint64)\":{\"notice\":\"Expect a given number of logs with all topic and data checks enabled.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectPartialRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectPartialRevert(bytes4,address)\":{\"notice\":\"Expects an error on next call to reverter address, that starts with the revert data.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(address)\":{\"notice\":\"Expects an error with any revert data on next call to reverter address.\"},\"expectRevert(address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes,address)\":{\"notice\":\"Expects an error from reverter address on next call, that exactly matches the revert data.\"},\"expectRevert(bytes,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data.\"},\"expectRevert(bytes,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4,address)\":{\"notice\":\"Expects an error from reverter address on next call, with any revert data.\"},\"expectRevert(bytes4,address,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data.\"},\"expectRevert(bytes4,uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls that match the revert data.\"},\"expectRevert(uint64)\":{\"notice\":\"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"foundryVersionAtLeast(string)\":{\"notice\":\"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`.\"},\"foundryVersionCmp(string)\":{\"notice\":\"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\\\"1.0.0\\\") >= 0) { ... }`\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getArtifactPathByCode(bytes)\":{\"notice\":\"Gets the artifact path from code (aka. creation code).\"},\"getArtifactPathByDeployedCode(bytes)\":{\"notice\":\"Gets the artifact path from deployed code (aka. runtime code).\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBroadcast(string,uint64,uint8)\":{\"notice\":\"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`.\"},\"getBroadcasts(string,uint64)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getBroadcasts(string,uint64,uint8)\":{\"notice\":\"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber.\"},\"getChain(string)\":{\"notice\":\"Returns a Chain struct for specific alias\"},\"getChain(uint256)\":{\"notice\":\"Returns a Chain struct for specific chainId\"},\"getChainId()\":{\"notice\":\"Gets the current `block.chainid` of the currently selected environment. You should use this instead of `block.chainid` if you use `vm.selectFork` or `vm.createSelectFork`, as `block.chainid` could be assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployment(string)\":{\"notice\":\"Returns the most recent deployment for the current `chainId`.\"},\"getDeployment(string,uint64)\":{\"notice\":\"Returns the most recent deployment for the given contract on `chainId`\"},\"getDeployments(string,uint64)\":{\"notice\":\"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last.\"},\"getEvmVersion()\":{\"notice\":\"Returns the test or script execution evm version. **Note:** The execution evm version is not the same as the compilation one.\"},\"getFoundryVersion()\":{\"notice\":\"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get the nonce of a `Wallet`.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRawBlockHeader(uint256)\":{\"notice\":\"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"getStateDiff()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session.\"},\"getStateDiffJson()\":{\"notice\":\"Returns state diffs from current `vm.startStateDiffRecording` session, in json format.\"},\"getStorageAccesses()\":{\"notice\":\"Returns an array of `StorageAccess` from current `vm.stateStateDiffRecording` session\"},\"getStorageSlots(address,string)\":{\"notice\":\"Returns an array of storage slots occupied by the specified variable.\"},\"getWallets()\":{\"notice\":\"Returns addresses of available unlocked wallets in the script environment.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"interceptInitcode()\":{\"notice\":\"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call from the callee perspective.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory EVM state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCall(address,uint256,bytes4,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"mockCallRevert(address,uint256,bytes4,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`.\"},\"mockCalls(address,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address, returning specified data for each call.\"},\"mockCalls(address,uint256,bytes,bytes[])\":{\"notice\":\"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call.\"},\"mockFunction(address,address,bytes)\":{\"notice\":\"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted.\"},\"noAccessList()\":{\"notice\":\"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlType(string,string)\":{\"notice\":\"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlType(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseTomlTypeArray(string,string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"pauseTracing()\":{\"notice\":\"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prank(address,bool)\":{\"notice\":\"Sets the *next* delegate call's `msg.sender` to be the input address.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"publicKeyP256(uint256)\":{\"notice\":\"Derives secp256r1 public key from the provided `privateKey`.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomBool()\":{\"notice\":\"Returns a random `bool`.\"},\"randomBytes(uint256)\":{\"notice\":\"Returns a random byte array value of the given length.\"},\"randomBytes4()\":{\"notice\":\"Returns a random fixed-size byte array of length 4.\"},\"randomBytes8()\":{\"notice\":\"Returns a random fixed-size byte array of length 8.\"},\"randomInt()\":{\"notice\":\"Returns a random `int256` value.\"},\"randomInt(uint256)\":{\"notice\":\"Returns a random `int256` value of given bits.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256)\":{\"notice\":\"Returns a random `uint256` value of given bits.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uint256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"rememberKeys(string,string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"rememberKeys(string,string,uint32)\":{\"notice\":\"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetGasMetering()\":{\"notice\":\"Reset gas metering (i.e. gas usage is set to gas limit).\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resolveEnv(string)\":{\"notice\":\"Resolves the env variable placeholders of a given input string.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"resumeTracing()\":{\"notice\":\"Unpauses collection of call traces.\"},\"revertTo(uint256)\":{\"notice\":\"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions.\"},\"revertToState(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`.\"},\"revertToStateAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setArbitraryStorage(address)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address.\"},\"setArbitraryStorage(address,bool)\":{\"notice\":\"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setEvmVersion(string)\":{\"notice\":\"Set the exact test or script execution evm version, e.g. `berlin`, `cancun`. **Note:** The execution evm version is not the same as the compilation one.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"setSeed(uint256)\":{\"notice\":\"Set RNG seed.\"},\"shuffle(uint256[])\":{\"notice\":\"Randomly shuffles an array.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signAndAttachDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction\"},\"signAndAttachDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity.\"},\"signAndAttachDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce\"},\"signCompact((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signCompact(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address.\"},\"signCompact(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"signCompact(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes.\"},\"signDelegation(address,uint256)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation\"},\"signDelegation(address,uint256,bool)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity.\"},\"signDelegation(address,uint256,uint64)\":{\"notice\":\"Sign an EIP-7702 authorization for delegation for specific nonce\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"signWithNonceUnsafe(uint256,bytes32,uint256)\":{\"notice\":\"Signs `digest` with `privateKey` on the secp256k1 curve, using the given `nonce` as the raw ephemeral k value in ECDSA (instead of deriving it deterministically).\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top level of a test.\"},\"skip(bool,string)\":{\"notice\":\"Marks a test as skipped with a reason. Must be called at the top level of a test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions.\"},\"snapshotGasLastCall(string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name from the callee perspective.\"},\"snapshotGasLastCall(string,string)\":{\"notice\":\"Snapshot capture the gas usage of the last call by name in a group from the callee perspective.\"},\"snapshotState()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`.\"},\"snapshotValue(string,string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name in a group.\"},\"snapshotValue(string,uint256)\":{\"notice\":\"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name.\"},\"sort(uint256[])\":{\"notice\":\"Sorts an array in ascending order.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startDebugTraceRecording()\":{\"notice\":\"Records the debug trace during the run.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startPrank(address,bool)\":{\"notice\":\"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startSnapshotGas(string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name.\"},\"startSnapshotGas(string,string)\":{\"notice\":\"Start a snapshot capture of the current gas usage by name in a group.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnDebugTraceRecording()\":{\"notice\":\"Stop debug trace recording and returns the recorded debug trace.\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"stopRecord()\":{\"notice\":\"Stops recording storage reads and writes.\"},\"stopSnapshotGas()\":{\"notice\":\"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start.\"},\"stopSnapshotGas(string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name.\"},\"stopSnapshotGas(string,string)\":{\"notice\":\"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warmSlot(address,bytes32)\":{\"notice\":\"Utility cheatcode to mark specific storage slot as warm, simulating a prior read.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9b4df44a3b748593a58be7ba64fa5f420e5dcd7927bfa5173186228bfe61782f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b89fcf92ee1d14237cfb0dd949341053389d5b6a043ad77349b65bef80b1d59f\",\"dweb:/ipfs/QmPkia3aNHrqvE4tqxG2AyrdB4W91jTAvcbchgs2wAo6NL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct VmSafe.AccessListItem[]","name":"access","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"storageKeys","type":"bytes32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"accessList"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"view","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert[]","name":"potentialReverts","type":"tuple[]","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"struct VmSafe.PotentialRevert","name":"potentialRevert","type":"tuple","components":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"bool","name":"partialMatch","type":"bool"},{"internalType":"bytes","name":"revertData","type":"bytes"}]}],"stateMutability":"pure","type":"function","name":"assumeNoRevert"},{"inputs":[{"internalType":"bytes","name":"blob","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"attachBlob"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"attachDelegation"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"uint256","name":"current","type":"uint256"},{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"view","type":"function","name":"bound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"int256","name":"current","type":"int256"},{"internalType":"int256","name":"min","type":"int256"},{"internalType":"int256","name":"max","type":"int256"}],"stateMutability":"view","type":"function","name":"bound","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cloneAccount"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"subject","type":"string"},{"internalType":"string","name":"search","type":"string"}],"stateMutability":"pure","type":"function","name":"contains","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"cool"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"coolSlot"},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"copyStorage"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteStateSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"bindingsPath","type":"string"},{"internalType":"string","name":"typeName","type":"string"},{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}],"stateMutability":"pure","type":"function","name":"eip712HashStruct","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"typeNameOrDefinition","type":"string"},{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}],"stateMutability":"pure","type":"function","name":"eip712HashStruct","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"bindingsPath","type":"string"},{"internalType":"string","name":"typeName","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashType","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"typeNameOrDefinition","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashType","outputs":[{"internalType":"bytes32","name":"typeHash","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"jsonData","type":"string"}],"stateMutability":"pure","type":"function","name":"eip712HashTypedData","outputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate"},{"inputs":[{"internalType":"bytes","name":"bytecode","type":"bytes"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectCreate2"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectPartialRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"},{"internalType":"address","name":"reverter","type":"address"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"address","name":"reverter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionAtLeast","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"version","type":"string"}],"stateMutability":"view","type":"function","name":"foundryVersionCmp","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes","name":"code","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"deployedCode","type":"bytes"}],"stateMutability":"view","type":"function","name":"getArtifactPathByDeployedCode","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcast","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"}],"stateMutability":"view","type":"function","name":"getBroadcasts","outputs":[{"internalType":"struct VmSafe.BroadcastTxSummary[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"txHash","type":"bytes32"},{"internalType":"enum VmSafe.BroadcastTxType","name":"txType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bool","name":"success","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"chainAlias","type":"string"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[{"internalType":"uint256","name":"chainId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getChain","outputs":[{"internalType":"struct VmSafe.Chain","name":"chain","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"string","name":"chainAlias","type":"string"},{"internalType":"string","name":"rpcUrl","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"blockChainId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployment","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"contractName","type":"string"},{"internalType":"uint64","name":"chainId","type":"uint64"}],"stateMutability":"view","type":"function","name":"getDeployments","outputs":[{"internalType":"address[]","name":"deployedAddresses","type":"address[]"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getEvmVersion","outputs":[{"internalType":"string","name":"evm","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFoundryVersion","outputs":[{"internalType":"string","name":"version","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"view","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRawBlockHeader","outputs":[{"internalType":"bytes","name":"rlpHeader","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiff","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStateDiffJson","outputs":[{"internalType":"string","name":"diff","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStorageAccesses","outputs":[{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"string","name":"variableName","type":"string"}],"stateMutability":"view","type":"function","name":"getStorageSlots","outputs":[{"internalType":"uint256[]","name":"slots","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"wallets","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"interceptInitcode"},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes4","name":"data","type":"bytes4"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"mockCalls"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockFunction"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"noAccessList"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"pauseTracing"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"publicKeyP256","outputs":[{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"len","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes4","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomBytes8","outputs":[{"internalType":"bytes8","name":"","type":"bytes8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"bits","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"view","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"string","name":"language","type":"string"},{"internalType":"uint32","name":"count","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"rememberKeys","outputs":[{"internalType":"address[]","name":"keyAddrs","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resetGasMetering"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"resolveEnv","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"resumeTracing"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToState","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToStateAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"overwrite","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setArbitraryStorage"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"string","name":"evm","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEvmVersion"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"uint256","name":"seed","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setSeed"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"shuffle","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"signAndAttachDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signCompact","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"vs","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bool","name":"crossChain","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"signDelegation","outputs":[{"internalType":"struct VmSafe.SignedDelegation","name":"signedDelegation","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"internalType":"address","name":"implementation","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"signWithNonceUnsafe","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"snapshotGasLastCall","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshotState","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"snapshotValue"},{"inputs":[{"internalType":"uint256[]","name":"array","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"sort","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startDebugTraceRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"},{"internalType":"bool","name":"delegateCall","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"startSnapshotGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnDebugTraceRecording","outputs":[{"internalType":"struct VmSafe.DebugStep[]","name":"step","type":"tuple[]","components":[{"internalType":"uint256[]","name":"stack","type":"uint256[]"},{"internalType":"bytes","name":"memoryInput","type":"bytes"},{"internalType":"uint8","name":"opcode","type":"uint8"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isOutOfGas","type":"bool"},{"internalType":"address","name":"contractAddr","type":"address"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"uint64","name":"oldNonce","type":"uint64"},{"internalType":"uint64","name":"newNonce","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopRecord"},{"inputs":[{"internalType":"string","name":"group","type":"string"},{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopSnapshotGas","outputs":[{"internalType":"uint256","name":"gasUsed","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"view","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"warmSlot"},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accessList((address,bytes32[])[])":{"notice":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"assumeNoRevert((address,bool,bytes))":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"assumeNoRevert((address,bool,bytes)[])":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"assumeNoRevert()":{"notice":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"attachBlob(bytes)":{"notice":"Attach an EIP-4844 blob to the next call"},"attachDelegation((uint8,bytes32,bytes32,uint64,address))":{"notice":"Designate the next call as an EIP-7702 transaction"},"attachDelegation((uint8,bytes32,bytes32,uint64,address),bool)":{"notice":"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"bound(int256,int256,int256)":{"notice":"Returns an int256 value bounded in given range and different from the current one."},"bound(uint256,uint256,uint256)":{"notice":"Returns an uint256 value bounded in given range and different from the current one."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"cloneAccount(address,address)":{"notice":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"contains(string,string)":{"notice":"Returns true if `search` is found in `subject`, false otherwise."},"cool(address)":{"notice":"Marks the slots of an account and the account address as cold."},"coolSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"copyStorage(address,address)":{"notice":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"deleteSnapshots()":{"notice":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"deleteStateSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteStateSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments."},"deployCode(string,bytes,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts abi-encoded constructor arguments and `msg.value`."},"deployCode(string,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,uint256)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deployCode(string,uint256,bytes32)":{"notice":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionally accepts `msg.value`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"eip712HashStruct(string,bytes)":{"notice":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Supports 2 different inputs: 1. Name of the type (i.e. \"PermitSingle\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\"). * Note: the cheatcode will use the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces."},"eip712HashStruct(string,string,bytes)":{"notice":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \"PermitSingle\"). * `abiEncodedData`: ABI-encoded data for the struct that is being hashed."},"eip712HashType(string)":{"notice":"Generates the hash of the canonical EIP-712 type representation. Supports 2 different inputs: 1. Name of the type (i.e. \"Transaction\"): * requires previous binding generation with `forge bind-json`. * bindings will be retrieved from the path configured in `foundry.toml`. 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\"). * Note: the cheatcode will output the canonical type even if the input is malformated with the wrong order of elements or with extra whitespaces."},"eip712HashType(string,string)":{"notice":"Generates the hash of the canonical EIP-712 type representation. Requires previous binding generation with `forge bind-json`. Params: * `bindingsPath`: path where the output of `forge bind-json` is stored. * `typeName`: Name of the type (i.e. \"Transaction\")."},"eip712HashTypedData(string)":{"notice":"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCreate(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"expectCreate2(bytes,address)":{"notice":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool,address,uint64)":{"notice":"Expect a given number of logs from a specific emitter with the provided topics."},"expectEmit(bool,bool,bool,bool,uint64)":{"notice":"Expect a given number of logs with the provided topics."},"expectEmit(uint64)":{"notice":"Expect a given number of logs with all topic and data checks enabled."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectPartialRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectPartialRevert(bytes4,address)":{"notice":"Expects an error on next call to reverter address, that starts with the revert data."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(address)":{"notice":"Expects an error with any revert data on next call to reverter address."},"expectRevert(address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes,address)":{"notice":"Expects an error from reverter address on next call, that exactly matches the revert data."},"expectRevert(bytes,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"expectRevert(bytes,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4,address)":{"notice":"Expects an error from reverter address on next call, with any revert data."},"expectRevert(bytes4,address,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"expectRevert(bytes4,uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"expectRevert(uint64)":{"notice":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"foundryVersionAtLeast(string)":{"notice":"Returns true if the current Foundry version is greater than or equal to the given version. The given version string must be in the format `major.minor.patch`. This is equivalent to `foundryVersionCmp(version) >= 0`."},"foundryVersionCmp(string)":{"notice":"Compares the current Foundry version with the given version string. The given version string must be in the format `major.minor.patch`. Returns: -1 if current Foundry version is less than the given version 0 if current Foundry version equals the given version 1 if current Foundry version is greater than the given version This result can then be used with a comparison operator against `0`. For example, to check if the current Foundry version is greater than or equal to `1.0.0`: `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getArtifactPathByCode(bytes)":{"notice":"Gets the artifact path from code (aka. creation code)."},"getArtifactPathByDeployedCode(bytes)":{"notice":"Gets the artifact path from deployed code (aka. runtime code)."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBroadcast(string,uint64,uint8)":{"notice":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`. For example: The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`. The most recent call can be fetched by passing `txType` as `CALL`."},"getBroadcasts(string,uint64)":{"notice":"Returns all broadcasts for the given contract on `chainId`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getBroadcasts(string,uint64,uint8)":{"notice":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`. Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"getChain(string)":{"notice":"Returns a Chain struct for specific alias"},"getChain(uint256)":{"notice":"Returns a Chain struct for specific chainId"},"getChainId()":{"notice":"Gets the current `block.chainid` of the currently selected environment. You should use this instead of `block.chainid` if you use `vm.selectFork` or `vm.createSelectFork`, as `block.chainid` could be assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployment(string)":{"notice":"Returns the most recent deployment for the current `chainId`."},"getDeployment(string,uint64)":{"notice":"Returns the most recent deployment for the given contract on `chainId`"},"getDeployments(string,uint64)":{"notice":"Returns all deployments for the given contract on `chainId` Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber. The most recent deployment is the first element, and the oldest is the last."},"getEvmVersion()":{"notice":"Returns the test or script execution evm version. **Note:** The execution evm version is not the same as the compilation one."},"getFoundryVersion()":{"notice":"Returns the Foundry version. Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile> Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug Note: Build timestamps may vary slightly across platforms due to separate CI jobs. For reliable version comparisons, use UNIX format (e.g., >= 1700000000) to compare timestamps while ignoring minor time differences."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get the nonce of a `Wallet`."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRawBlockHeader(uint256)":{"notice":"Gets the RLP encoded block header for a given block number. Returns the block header in the same format as `cast block <block_number> --raw`."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"getStateDiff()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session."},"getStateDiffJson()":{"notice":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"getStorageAccesses()":{"notice":"Returns an array of `StorageAccess` from current `vm.stateStateDiffRecording` session"},"getStorageSlots(address,string)":{"notice":"Returns an array of storage slots occupied by the specified variable."},"getWallets()":{"notice":"Returns addresses of available unlocked wallets in the script environment."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"interceptInitcode()":{"notice":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer. This allows type-safe access to the initcode payload that would be used for contract creation. Example usage: vm.interceptInitcode(); bytes memory initcode; try new MyContract(param1, param2) { assert(false); } catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call from the callee perspective."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,bytes4,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCall(address,uint256,bytes4,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,bytes4,bytes)":{"notice":"Reverts a call to an address with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"mockCallRevert(address,uint256,bytes4,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data. Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"mockCalls(address,bytes,bytes[])":{"notice":"Mocks multiple calls to an address, returning specified data for each call."},"mockCalls(address,uint256,bytes,bytes[])":{"notice":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"mockFunction(address,address,bytes)":{"notice":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls `target` with the same calldata. This functionality is similar to a delegate call made to `target` contract from `callee`. Can be used to substitute a call to a function with another implementation that captures the primary logic of the original function but is easier to reason about. If calldata is not a strict match then partial match by selector is attempted."},"noAccessList()":{"notice":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlType(string,string)":{"notice":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"parseTomlType(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"parseTomlTypeArray(string,string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"pauseTracing()":{"notice":"Pauses collection of call traces. Useful in cases when you want to skip tracing of complex calls which are not useful for debugging."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prank(address,bool)":{"notice":"Sets the *next* delegate call's `msg.sender` to be the input address."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"publicKeyP256(uint256)":{"notice":"Derives secp256r1 public key from the provided `privateKey`."},"randomAddress()":{"notice":"Returns a random `address`."},"randomBool()":{"notice":"Returns a random `bool`."},"randomBytes(uint256)":{"notice":"Returns a random byte array value of the given length."},"randomBytes4()":{"notice":"Returns a random fixed-size byte array of length 4."},"randomBytes8()":{"notice":"Returns a random fixed-size byte array of length 8."},"randomInt()":{"notice":"Returns a random `int256` value."},"randomInt(uint256)":{"notice":"Returns a random `int256` value of given bits."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256)":{"notice":"Returns a random `uint256` value of given bits."},"randomUint(uint256,uint256)":{"notice":"Returns random uint256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes. Use `accesses` to get the recorded data. Subsequent calls to `record` will clear the previous data."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"rememberKeys(string,string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"rememberKeys(string,string,uint32)":{"notice":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`. The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetGasMetering()":{"notice":"Reset gas metering (i.e. gas usage is set to gas limit)."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resolveEnv(string)":{"notice":"Resolves the env variable placeholders of a given input string."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"resumeTracing()":{"notice":"Unpauses collection of call traces."},"revertTo(uint256)":{"notice":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"revertToAndDelete(uint256)":{"notice":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"revertToState(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"revertToStateAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setArbitraryStorage(address)":{"notice":"Utility cheatcode to set arbitrary storage for given target address."},"setArbitraryStorage(address,bool)":{"notice":"Utility cheatcode to set arbitrary storage for given target address and overwrite any storage slots that have been previously set."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setEvmVersion(string)":{"notice":"Set the exact test or script execution evm version, e.g. `berlin`, `cancun`. **Note:** The execution evm version is not the same as the compilation one."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"setSeed(uint256)":{"notice":"Set RNG seed."},"shuffle(uint256[])":{"notice":"Randomly shuffles an array."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signAndAttachDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"signAndAttachDelegation(address,uint256,bool)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"signAndAttachDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"signCompact((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signCompact(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. Raises error if none of the signers passed into the script have provided address."},"signCompact(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"signCompact(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve. Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the signature's `s` value, and the recovery id `v` in a single bytes32. This format reduces the signature size from 65 to 64 bytes."},"signDelegation(address,uint256)":{"notice":"Sign an EIP-7702 authorization for delegation"},"signDelegation(address,uint256,bool)":{"notice":"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity."},"signDelegation(address,uint256,uint64)":{"notice":"Sign an EIP-7702 authorization for delegation for specific nonce"},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"signWithNonceUnsafe(uint256,bytes32,uint256)":{"notice":"Signs `digest` with `privateKey` on the secp256k1 curve, using the given `nonce` as the raw ephemeral k value in ECDSA (instead of deriving it deterministically)."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top level of a test."},"skip(bool,string)":{"notice":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"snapshotGasLastCall(string)":{"notice":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"snapshotGasLastCall(string,string)":{"notice":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"snapshotState()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertToState`."},"snapshotValue(string,string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name in a group."},"snapshotValue(string,uint256)":{"notice":"Snapshot capture an arbitrary numerical value by name. The group name is derived from the contract name."},"sort(uint256[])":{"notice":"Sorts an array in ascending order."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startDebugTraceRecording()":{"notice":"Records the debug trace during the run."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startPrank(address,bool)":{"notice":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"startSnapshotGas(string)":{"notice":"Start a snapshot capture of the current gas usage by name. The group name is derived from the contract name."},"startSnapshotGas(string,string)":{"notice":"Start a snapshot capture of the current gas usage by name in a group."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnDebugTraceRecording()":{"notice":"Stop debug trace recording and returns the recorded debug trace."},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"stopRecord()":{"notice":"Stops recording storage reads and writes."},"stopSnapshotGas()":{"notice":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"stopSnapshotGas(string)":{"notice":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start. The group name is derived from the contract name."},"stopSnapshotGas(string,string)":{"notice":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warmSlot(address,bytes32)":{"notice":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing. This cheatcode will create new keys if they didn't previously exist."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/kontrol-cheatcodes/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"prague","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x9b4df44a3b748593a58be7ba64fa5f420e5dcd7927bfa5173186228bfe61782f","urls":["bzz-raw://b89fcf92ee1d14237cfb0dd949341053389d5b6a043ad77349b65bef80b1d59f","dweb:/ipfs/QmPkia3aNHrqvE4tqxG2AyrdB4W91jTAvcbchgs2wAo6NL"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":18463,"exportedSymbols":{"Vm":[18462],"VmSafe":[17391]},"nodeType":"SourceUnit","src":"117:131664:15","nodes":[{"id":13259,"nodeType":"PragmaDirective","src":"117:31:15","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":13260,"nodeType":"PragmaDirective","src":"149:33:15","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":17391,"nodeType":"ContractDefinition","src":"409:104606:15","nodes":[{"id":13268,"nodeType":"EnumDefinition","src":"529:533:15","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":13262,"nodeType":"StructuredDocumentation","src":"432:92:15","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":13263,"name":"None","nameLocation":"610:4:15","nodeType":"EnumValue","src":"610:4:15"},{"id":13264,"name":"Broadcast","nameLocation":"714:9:15","nodeType":"EnumValue","src":"714:9:15"},{"id":13265,"name":"RecurrentBroadcast","nameLocation":"829:18:15","nodeType":"EnumValue","src":"829:18:15"},{"id":13266,"name":"Prank","nameLocation":"939:5:15","nodeType":"EnumValue","src":"939:5:15"},{"id":13267,"name":"RecurrentPrank","nameLocation":"1042:14:15","nodeType":"EnumValue","src":"1042:14:15"}],"name":"CallerMode","nameLocation":"534:10:15"},{"id":13281,"nodeType":"EnumDefinition","src":"1118:791:15","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":13269,"nodeType":"StructuredDocumentation","src":"1068:45:15","text":"The kind of account access that occurred."},"members":[{"id":13270,"name":"Call","nameLocation":"1186:4:15","nodeType":"EnumValue","src":"1186:4:15"},{"id":13271,"name":"DelegateCall","nameLocation":"1252:12:15","nodeType":"EnumValue","src":"1252:12:15"},{"id":13272,"name":"CallCode","nameLocation":"1322:8:15","nodeType":"EnumValue","src":"1322:8:15"},{"id":13273,"name":"StaticCall","nameLocation":"1390:10:15","nodeType":"EnumValue","src":"1390:10:15"},{"id":13274,"name":"Create","nameLocation":"1446:6:15","nodeType":"EnumValue","src":"1446:6:15"},{"id":13275,"name":"SelfDestruct","nameLocation":"1505:12:15","nodeType":"EnumValue","src":"1505:12:15"},{"id":13276,"name":"Resume","nameLocation":"1644:6:15","nodeType":"EnumValue","src":"1644:6:15"},{"id":13277,"name":"Balance","nameLocation":"1703:7:15","nodeType":"EnumValue","src":"1703:7:15"},{"id":13278,"name":"Extcodesize","nameLocation":"1764:11:15","nodeType":"EnumValue","src":"1764:11:15"},{"id":13279,"name":"Extcodehash","nameLocation":"1829:11:15","nodeType":"EnumValue","src":"1829:11:15"},{"id":13280,"name":"Extcodecopy","nameLocation":"1892:11:15","nodeType":"EnumValue","src":"1892:11:15"}],"name":"AccountAccessKind","nameLocation":"1123:17:15"},{"id":13292,"nodeType":"EnumDefinition","src":"1949:683:15","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":13282,"nodeType":"StructuredDocumentation","src":"1915:29:15","text":"Forge execution contexts."},"members":[{"id":13283,"name":"TestGroup","nameLocation":"2047:9:15","nodeType":"EnumValue","src":"2047:9:15"},{"id":13284,"name":"Test","nameLocation":"2109:4:15","nodeType":"EnumValue","src":"2109:4:15"},{"id":13285,"name":"Coverage","nameLocation":"2170:8:15","nodeType":"EnumValue","src":"2170:8:15"},{"id":13286,"name":"Snapshot","nameLocation":"2235:8:15","nodeType":"EnumValue","src":"2235:8:15"},{"id":13287,"name":"ScriptGroup","nameLocation":"2327:11:15","nodeType":"EnumValue","src":"2327:11:15"},{"id":13288,"name":"ScriptDryRun","nameLocation":"2393:12:15","nodeType":"EnumValue","src":"2393:12:15"},{"id":13289,"name":"ScriptBroadcast","nameLocation":"2472:15:15","nodeType":"EnumValue","src":"2472:15:15"},{"id":13290,"name":"ScriptResume","nameLocation":"2551:12:15","nodeType":"EnumValue","src":"2551:12:15"},{"id":13291,"name":"Unknown","nameLocation":"2619:7:15","nodeType":"EnumValue","src":"2619:7:15"}],"name":"ForgeContext","nameLocation":"1954:12:15"},{"id":13297,"nodeType":"EnumDefinition","src":"2696:208:15","nodes":[],"canonicalName":"VmSafe.BroadcastTxType","documentation":{"id":13293,"nodeType":"StructuredDocumentation","src":"2638:53:15","text":"The transaction type (`txType`) of the broadcast."},"members":[{"id":13294,"name":"Call","nameLocation":"2770:4:15","nodeType":"EnumValue","src":"2770:4:15"},{"id":13295,"name":"Create","nameLocation":"2829:6:15","nodeType":"EnumValue","src":"2829:6:15"},{"id":13296,"name":"Create2","nameLocation":"2891:7:15","nodeType":"EnumValue","src":"2891:7:15"}],"name":"BroadcastTxType","nameLocation":"2701:15:15"},{"id":13306,"nodeType":"StructDefinition","src":"2966:237:15","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":13298,"nodeType":"StructuredDocumentation","src":"2910:51:15","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":13301,"mutability":"mutable","name":"topics","nameLocation":"3064:6:15","nodeType":"VariableDeclaration","scope":13306,"src":"3054:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3054:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13300,"nodeType":"ArrayTypeName","src":"3054:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13303,"mutability":"mutable","name":"data","nameLocation":"3122:4:15","nodeType":"VariableDeclaration","scope":13306,"src":"3116:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13302,"name":"bytes","nodeType":"ElementaryTypeName","src":"3116:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13305,"mutability":"mutable","name":"emitter","nameLocation":"3189:7:15","nodeType":"VariableDeclaration","scope":13306,"src":"3181:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13304,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2973:3:15","scope":17391,"visibility":"public"},{"id":13312,"nodeType":"StructDefinition","src":"3272:119:15","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":13307,"nodeType":"StructuredDocumentation","src":"3209:58:15","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":13309,"mutability":"mutable","name":"key","nameLocation":"3337:3:15","nodeType":"VariableDeclaration","scope":13312,"src":"3330:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13308,"name":"string","nodeType":"ElementaryTypeName","src":"3330:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13311,"mutability":"mutable","name":"url","nameLocation":"3381:3:15","nodeType":"VariableDeclaration","scope":13312,"src":"3374:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13310,"name":"string","nodeType":"ElementaryTypeName","src":"3374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3279:3:15","scope":17391,"visibility":"public"},{"id":13333,"nodeType":"StructDefinition","src":"3451:615:15","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":13313,"nodeType":"StructuredDocumentation","src":"3397:49:15","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":13315,"mutability":"mutable","name":"emitter","nameLocation":"3532:7:15","nodeType":"VariableDeclaration","scope":13333,"src":"3524:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13314,"name":"address","nodeType":"ElementaryTypeName","src":"3524:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13318,"mutability":"mutable","name":"topics","nameLocation":"3626:6:15","nodeType":"VariableDeclaration","scope":13333,"src":"3616:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3616:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13317,"nodeType":"ArrayTypeName","src":"3616:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13320,"mutability":"mutable","name":"data","nameLocation":"3684:4:15","nodeType":"VariableDeclaration","scope":13333,"src":"3678:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13319,"name":"bytes","nodeType":"ElementaryTypeName","src":"3678:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13322,"mutability":"mutable","name":"blockHash","nameLocation":"3733:9:15","nodeType":"VariableDeclaration","scope":13333,"src":"3725:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3725:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13324,"mutability":"mutable","name":"blockNumber","nameLocation":"3788:11:15","nodeType":"VariableDeclaration","scope":13333,"src":"3781:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13323,"name":"uint64","nodeType":"ElementaryTypeName","src":"3781:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13326,"mutability":"mutable","name":"transactionHash","nameLocation":"3850:15:15","nodeType":"VariableDeclaration","scope":13333,"src":"3842:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3842:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13328,"mutability":"mutable","name":"transactionIndex","nameLocation":"3929:16:15","nodeType":"VariableDeclaration","scope":13333,"src":"3922:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13327,"name":"uint64","nodeType":"ElementaryTypeName","src":"3922:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13330,"mutability":"mutable","name":"logIndex","nameLocation":"3989:8:15","nodeType":"VariableDeclaration","scope":13333,"src":"3981:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13332,"mutability":"mutable","name":"removed","nameLocation":"4052:7:15","nodeType":"VariableDeclaration","scope":13333,"src":"4047:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13331,"name":"bool","nodeType":"ElementaryTypeName","src":"4047:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3458:10:15","scope":17391,"visibility":"public"},{"id":13345,"nodeType":"StructDefinition","src":"4142:334:15","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":13334,"nodeType":"StructuredDocumentation","src":"4072:65:15","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":13336,"mutability":"mutable","name":"errorMessage","nameLocation":"4213:12:15","nodeType":"VariableDeclaration","scope":13345,"src":"4206:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13335,"name":"string","nodeType":"ElementaryTypeName","src":"4206:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13338,"mutability":"mutable","name":"path","nameLocation":"4276:4:15","nodeType":"VariableDeclaration","scope":13345,"src":"4269:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13337,"name":"string","nodeType":"ElementaryTypeName","src":"4269:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13340,"mutability":"mutable","name":"depth","nameLocation":"4332:5:15","nodeType":"VariableDeclaration","scope":13345,"src":"4325:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13339,"name":"uint64","nodeType":"ElementaryTypeName","src":"4325:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13342,"mutability":"mutable","name":"isDir","nameLocation":"4397:5:15","nodeType":"VariableDeclaration","scope":13345,"src":"4392:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13341,"name":"bool","nodeType":"ElementaryTypeName","src":"4392:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13344,"mutability":"mutable","name":"isSymlink","nameLocation":"4460:9:15","nodeType":"VariableDeclaration","scope":13345,"src":"4455:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13343,"name":"bool","nodeType":"ElementaryTypeName","src":"4455:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"4149:8:15","scope":17391,"visibility":"public"},{"id":13361,"nodeType":"StructDefinition","src":"4706:599:15","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":13346,"nodeType":"StructuredDocumentation","src":"4482:219:15","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":13348,"mutability":"mutable","name":"isDir","nameLocation":"4792:5:15","nodeType":"VariableDeclaration","scope":13361,"src":"4787:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13347,"name":"bool","nodeType":"ElementaryTypeName","src":"4787:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13350,"mutability":"mutable","name":"isSymlink","nameLocation":"4863:9:15","nodeType":"VariableDeclaration","scope":13361,"src":"4858:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13349,"name":"bool","nodeType":"ElementaryTypeName","src":"4858:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13352,"mutability":"mutable","name":"length","nameLocation":"4955:6:15","nodeType":"VariableDeclaration","scope":13361,"src":"4947:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13351,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13354,"mutability":"mutable","name":"readOnly","nameLocation":"5046:8:15","nodeType":"VariableDeclaration","scope":13361,"src":"5041:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13353,"name":"bool","nodeType":"ElementaryTypeName","src":"5041:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13356,"mutability":"mutable","name":"modified","nameLocation":"5135:8:15","nodeType":"VariableDeclaration","scope":13361,"src":"5127:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13355,"name":"uint256","nodeType":"ElementaryTypeName","src":"5127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13358,"mutability":"mutable","name":"accessed","nameLocation":"5211:8:15","nodeType":"VariableDeclaration","scope":13361,"src":"5203:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13357,"name":"uint256","nodeType":"ElementaryTypeName","src":"5203:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13360,"mutability":"mutable","name":"created","nameLocation":"5291:7:15","nodeType":"VariableDeclaration","scope":13361,"src":"5283:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13359,"name":"uint256","nodeType":"ElementaryTypeName","src":"5283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4713:10:15","scope":17391,"visibility":"public"},{"id":13371,"nodeType":"StructDefinition","src":"5359:277:15","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":13362,"nodeType":"StructuredDocumentation","src":"5311:43:15","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":13364,"mutability":"mutable","name":"addr","nameLocation":"5424:4:15","nodeType":"VariableDeclaration","scope":13371,"src":"5416:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13363,"name":"address","nodeType":"ElementaryTypeName","src":"5416:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13366,"mutability":"mutable","name":"publicKeyX","nameLocation":"5486:10:15","nodeType":"VariableDeclaration","scope":13371,"src":"5478:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5478:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13368,"mutability":"mutable","name":"publicKeyY","nameLocation":"5554:10:15","nodeType":"VariableDeclaration","scope":13371,"src":"5546:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13367,"name":"uint256","nodeType":"ElementaryTypeName","src":"5546:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13370,"mutability":"mutable","name":"privateKey","nameLocation":"5619:10:15","nodeType":"VariableDeclaration","scope":13371,"src":"5611:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5366:6:15","scope":17391,"visibility":"public"},{"id":13379,"nodeType":"StructDefinition","src":"5681:213:15","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":13372,"nodeType":"StructuredDocumentation","src":"5642:34:15","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":13374,"mutability":"mutable","name":"exitCode","nameLocation":"5752:8:15","nodeType":"VariableDeclaration","scope":13379,"src":"5746:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":13373,"name":"int32","nodeType":"ElementaryTypeName","src":"5746:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":13376,"mutability":"mutable","name":"stdout","nameLocation":"5829:6:15","nodeType":"VariableDeclaration","scope":13379,"src":"5823:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13375,"name":"bytes","nodeType":"ElementaryTypeName","src":"5823:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13378,"mutability":"mutable","name":"stderr","nameLocation":"5881:6:15","nodeType":"VariableDeclaration","scope":13379,"src":"5875:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13377,"name":"bytes","nodeType":"ElementaryTypeName","src":"5875:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5688:9:15","scope":17391,"visibility":"public"},{"id":13385,"nodeType":"StructDefinition","src":"5943:184:15","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":13380,"nodeType":"StructuredDocumentation","src":"5900:38:15","text":"Information on the chain and fork."},"members":[{"constant":false,"id":13382,"mutability":"mutable","name":"forkId","nameLocation":"6044:6:15","nodeType":"VariableDeclaration","scope":13385,"src":"6036:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13384,"mutability":"mutable","name":"chainId","nameLocation":"6113:7:15","nodeType":"VariableDeclaration","scope":13385,"src":"6105:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13383,"name":"uint256","nodeType":"ElementaryTypeName","src":"6105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5950:9:15","scope":17391,"visibility":"public"},{"id":13395,"nodeType":"StructDefinition","src":"6173:302:15","nodes":[],"canonicalName":"VmSafe.Chain","documentation":{"id":13386,"nodeType":"StructuredDocumentation","src":"6133:35:15","text":"Information about a blockchain."},"members":[{"constant":false,"id":13388,"mutability":"mutable","name":"name","nameLocation":"6230:4:15","nodeType":"VariableDeclaration","scope":13395,"src":"6223:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13387,"name":"string","nodeType":"ElementaryTypeName","src":"6223:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13390,"mutability":"mutable","name":"chainId","nameLocation":"6285:7:15","nodeType":"VariableDeclaration","scope":13395,"src":"6277:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13389,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13392,"mutability":"mutable","name":"chainAlias","nameLocation":"6385:10:15","nodeType":"VariableDeclaration","scope":13395,"src":"6378:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13391,"name":"string","nodeType":"ElementaryTypeName","src":"6378:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13394,"mutability":"mutable","name":"rpcUrl","nameLocation":"6462:6:15","nodeType":"VariableDeclaration","scope":13395,"src":"6455:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":13393,"name":"string","nodeType":"ElementaryTypeName","src":"6455:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Chain","nameLocation":"6180:5:15","scope":17391,"visibility":"public"},{"id":13431,"nodeType":"StructDefinition","src":"6536:1992:15","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":13396,"nodeType":"StructuredDocumentation","src":"6481:50:15","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":13399,"mutability":"mutable","name":"chainInfo","nameLocation":"6628:9:15","nodeType":"VariableDeclaration","scope":13431,"src":"6618:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13385_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":13398,"nodeType":"UserDefinedTypeName","pathNode":{"id":13397,"name":"ChainInfo","nameLocations":["6618:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13385,"src":"6618:9:15"},"referencedDeclaration":13385,"src":"6618:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13385_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":13402,"mutability":"mutable","name":"kind","nameLocation":"7091:4:15","nodeType":"VariableDeclaration","scope":13431,"src":"7073:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$13281","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":13401,"nodeType":"UserDefinedTypeName","pathNode":{"id":13400,"name":"AccountAccessKind","nameLocations":["7073:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":13281,"src":"7073:17:15"},"referencedDeclaration":13281,"src":"7073:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$13281","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":13404,"mutability":"mutable","name":"account","nameLocation":"7268:7:15","nodeType":"VariableDeclaration","scope":13431,"src":"7260:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13403,"name":"address","nodeType":"ElementaryTypeName","src":"7260:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13406,"mutability":"mutable","name":"accessor","nameLocation":"7331:8:15","nodeType":"VariableDeclaration","scope":13431,"src":"7323:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13405,"name":"address","nodeType":"ElementaryTypeName","src":"7323:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13408,"mutability":"mutable","name":"initialized","nameLocation":"7542:11:15","nodeType":"VariableDeclaration","scope":13431,"src":"7537:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13407,"name":"bool","nodeType":"ElementaryTypeName","src":"7537:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13410,"mutability":"mutable","name":"oldBalance","nameLocation":"7628:10:15","nodeType":"VariableDeclaration","scope":13431,"src":"7620:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13409,"name":"uint256","nodeType":"ElementaryTypeName","src":"7620:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13412,"mutability":"mutable","name":"newBalance","nameLocation":"7803:10:15","nodeType":"VariableDeclaration","scope":13431,"src":"7795:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13414,"mutability":"mutable","name":"deployedCode","nameLocation":"7880:12:15","nodeType":"VariableDeclaration","scope":13431,"src":"7874:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13413,"name":"bytes","nodeType":"ElementaryTypeName","src":"7874:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13416,"mutability":"mutable","name":"value","nameLocation":"7964:5:15","nodeType":"VariableDeclaration","scope":13431,"src":"7956:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13415,"name":"uint256","nodeType":"ElementaryTypeName","src":"7956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13418,"mutability":"mutable","name":"data","nameLocation":"8038:4:15","nodeType":"VariableDeclaration","scope":13431,"src":"8032:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13417,"name":"bytes","nodeType":"ElementaryTypeName","src":"8032:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13420,"mutability":"mutable","name":"reverted","nameLocation":"8133:8:15","nodeType":"VariableDeclaration","scope":13431,"src":"8128:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13419,"name":"bool","nodeType":"ElementaryTypeName","src":"8128:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13424,"mutability":"mutable","name":"storageAccesses","nameLocation":"8255:15:15","nodeType":"VariableDeclaration","scope":13431,"src":"8239:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13445_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":13422,"nodeType":"UserDefinedTypeName","pathNode":{"id":13421,"name":"StorageAccess","nameLocations":["8239:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13445,"src":"8239:13:15"},"referencedDeclaration":13445,"src":"8239:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$13445_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":13423,"nodeType":"ArrayTypeName","src":"8239:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13445_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":13426,"mutability":"mutable","name":"depth","nameLocation":"8361:5:15","nodeType":"VariableDeclaration","scope":13431,"src":"8354:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13425,"name":"uint64","nodeType":"ElementaryTypeName","src":"8354:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13428,"mutability":"mutable","name":"oldNonce","nameLocation":"8438:8:15","nodeType":"VariableDeclaration","scope":13431,"src":"8431:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13427,"name":"uint64","nodeType":"ElementaryTypeName","src":"8431:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13430,"mutability":"mutable","name":"newNonce","nameLocation":"8513:8:15","nodeType":"VariableDeclaration","scope":13431,"src":"8506:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13429,"name":"uint64","nodeType":"ElementaryTypeName","src":"8506:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"6543:13:15","scope":17391,"visibility":"public"},{"id":13445,"nodeType":"StructDefinition","src":"8590:425:15","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":13432,"nodeType":"StructuredDocumentation","src":"8534:51:15","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":13434,"mutability":"mutable","name":"account","nameLocation":"8680:7:15","nodeType":"VariableDeclaration","scope":13445,"src":"8672:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13433,"name":"address","nodeType":"ElementaryTypeName","src":"8672:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13436,"mutability":"mutable","name":"slot","nameLocation":"8744:4:15","nodeType":"VariableDeclaration","scope":13445,"src":"8736:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8736:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13438,"mutability":"mutable","name":"isWrite","nameLocation":"8801:7:15","nodeType":"VariableDeclaration","scope":13445,"src":"8796:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13437,"name":"bool","nodeType":"ElementaryTypeName","src":"8796:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13440,"mutability":"mutable","name":"previousValue","nameLocation":"8869:13:15","nodeType":"VariableDeclaration","scope":13445,"src":"8861:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8861:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13442,"mutability":"mutable","name":"newValue","nameLocation":"8938:8:15","nodeType":"VariableDeclaration","scope":13445,"src":"8930:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8930:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13444,"mutability":"mutable","name":"reverted","nameLocation":"9000:8:15","nodeType":"VariableDeclaration","scope":13445,"src":"8995:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13443,"name":"bool","nodeType":"ElementaryTypeName","src":"8995:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"8597:13:15","scope":17391,"visibility":"public"},{"id":13457,"nodeType":"StructDefinition","src":"9066:458:15","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":13446,"nodeType":"StructuredDocumentation","src":"9021:40:15","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":13448,"mutability":"mutable","name":"gasLimit","nameLocation":"9132:8:15","nodeType":"VariableDeclaration","scope":13457,"src":"9125:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13447,"name":"uint64","nodeType":"ElementaryTypeName","src":"9125:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13450,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"9188:12:15","nodeType":"VariableDeclaration","scope":13457,"src":"9181:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13449,"name":"uint64","nodeType":"ElementaryTypeName","src":"9181:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13452,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"9369:13:15","nodeType":"VariableDeclaration","scope":13457,"src":"9362:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13451,"name":"uint64","nodeType":"ElementaryTypeName","src":"9362:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13454,"mutability":"mutable","name":"gasRefunded","nameLocation":"9437:11:15","nodeType":"VariableDeclaration","scope":13457,"src":"9431:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":13453,"name":"int64","nodeType":"ElementaryTypeName","src":"9431:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":13456,"mutability":"mutable","name":"gasRemaining","nameLocation":"9505:12:15","nodeType":"VariableDeclaration","scope":13457,"src":"9498:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13455,"name":"uint64","nodeType":"ElementaryTypeName","src":"9498:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"9073:3:15","scope":17391,"visibility":"public"},{"id":13472,"nodeType":"StructDefinition","src":"9587:848:15","nodes":[],"canonicalName":"VmSafe.DebugStep","documentation":{"id":13458,"nodeType":"StructuredDocumentation","src":"9530:52:15","text":"The result of the `stopDebugTraceRecording` call"},"members":[{"constant":false,"id":13461,"mutability":"mutable","name":"stack","nameLocation":"9816:5:15","nodeType":"VariableDeclaration","scope":13472,"src":"9806:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13459,"name":"uint256","nodeType":"ElementaryTypeName","src":"9806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13460,"nodeType":"ArrayTypeName","src":"9806:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13463,"mutability":"mutable","name":"memoryInput","nameLocation":"10120:11:15","nodeType":"VariableDeclaration","scope":13472,"src":"10114:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13462,"name":"bytes","nodeType":"ElementaryTypeName","src":"10114:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13465,"mutability":"mutable","name":"opcode","nameLocation":"10188:6:15","nodeType":"VariableDeclaration","scope":13472,"src":"10182:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13464,"name":"uint8","nodeType":"ElementaryTypeName","src":"10182:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13467,"mutability":"mutable","name":"depth","nameLocation":"10250:5:15","nodeType":"VariableDeclaration","scope":13472,"src":"10243:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13466,"name":"uint64","nodeType":"ElementaryTypeName","src":"10243:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13469,"mutability":"mutable","name":"isOutOfGas","nameLocation":"10328:10:15","nodeType":"VariableDeclaration","scope":13472,"src":"10323:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13468,"name":"bool","nodeType":"ElementaryTypeName","src":"10323:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13471,"mutability":"mutable","name":"contractAddr","nameLocation":"10416:12:15","nodeType":"VariableDeclaration","scope":13472,"src":"10408:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13470,"name":"address","nodeType":"ElementaryTypeName","src":"10408:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"DebugStep","nameLocation":"9594:9:15","scope":17391,"visibility":"public"},{"id":13485,"nodeType":"StructDefinition","src":"10495:600:15","nodes":[],"canonicalName":"VmSafe.BroadcastTxSummary","documentation":{"id":13473,"nodeType":"StructuredDocumentation","src":"10441:49:15","text":"Represents a transaction's broadcast details."},"members":[{"constant":false,"id":13475,"mutability":"mutable","name":"txHash","nameLocation":"10599:6:15","nodeType":"VariableDeclaration","scope":13485,"src":"10591:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10591:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13478,"mutability":"mutable","name":"txType","nameLocation":"10704:6:15","nodeType":"VariableDeclaration","scope":13485,"src":"10688:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13297","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":13477,"nodeType":"UserDefinedTypeName","pathNode":{"id":13476,"name":"BroadcastTxType","nameLocations":["10688:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13297,"src":"10688:15:15"},"referencedDeclaration":13297,"src":"10688:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13297","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"},{"constant":false,"id":13480,"mutability":"mutable","name":"contractAddress","nameLocation":"10890:15:15","nodeType":"VariableDeclaration","scope":13485,"src":"10882:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13479,"name":"address","nodeType":"ElementaryTypeName","src":"10882:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13482,"mutability":"mutable","name":"blockNumber","nameLocation":"10977:11:15","nodeType":"VariableDeclaration","scope":13485,"src":"10970:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13481,"name":"uint64","nodeType":"ElementaryTypeName","src":"10970:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13484,"mutability":"mutable","name":"success","nameLocation":"11081:7:15","nodeType":"VariableDeclaration","scope":13485,"src":"11076:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13483,"name":"bool","nodeType":"ElementaryTypeName","src":"11076:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BroadcastTxSummary","nameLocation":"10502:18:15","scope":17391,"visibility":"public"},{"id":13497,"nodeType":"StructDefinition","src":"11206:605:15","nodes":[],"canonicalName":"VmSafe.SignedDelegation","documentation":{"id":13486,"nodeType":"StructuredDocumentation","src":"11101:100:15","text":"Holds a signed EIP-7702 authorization for an authority account to delegate to an implementation."},"members":[{"constant":false,"id":13488,"mutability":"mutable","name":"v","nameLocation":"11317:1:15","nodeType":"VariableDeclaration","scope":13497,"src":"11311:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13487,"name":"uint8","nodeType":"ElementaryTypeName","src":"11311:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13490,"mutability":"mutable","name":"r","nameLocation":"11380:1:15","nodeType":"VariableDeclaration","scope":13497,"src":"11372:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11372:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13492,"mutability":"mutable","name":"s","nameLocation":"11444:1:15","nodeType":"VariableDeclaration","scope":13497,"src":"11436:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11436:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13494,"mutability":"mutable","name":"nonce","nameLocation":"11616:5:15","nodeType":"VariableDeclaration","scope":13497,"src":"11609:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13493,"name":"uint64","nodeType":"ElementaryTypeName","src":"11609:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13496,"mutability":"mutable","name":"implementation","nameLocation":"11790:14:15","nodeType":"VariableDeclaration","scope":13497,"src":"11782:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13495,"name":"address","nodeType":"ElementaryTypeName","src":"11782:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SignedDelegation","nameLocation":"11213:16:15","scope":17391,"visibility":"public"},{"id":13505,"nodeType":"StructDefinition","src":"12060:373:15","nodes":[],"canonicalName":"VmSafe.PotentialRevert","documentation":{"id":13498,"nodeType":"StructuredDocumentation","src":"11817:238:15","text":"Represents a \"potential\" revert reason from a single subsequent call when using `vm.assumeNoReverts`.\n Reverts that match will result in a FOUNDRY::ASSUME rejection, whereas unmatched reverts will be surfaced\n as normal."},"members":[{"constant":false,"id":13500,"mutability":"mutable","name":"reverter","nameLocation":"12196:8:15","nodeType":"VariableDeclaration","scope":13505,"src":"12188:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13499,"name":"address","nodeType":"ElementaryTypeName","src":"12188:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13502,"mutability":"mutable","name":"partialMatch","nameLocation":"12332:12:15","nodeType":"VariableDeclaration","scope":13505,"src":"12327:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13501,"name":"bool","nodeType":"ElementaryTypeName","src":"12327:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13504,"mutability":"mutable","name":"revertData","nameLocation":"12416:10:15","nodeType":"VariableDeclaration","scope":13505,"src":"12410:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13503,"name":"bytes","nodeType":"ElementaryTypeName","src":"12410:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PotentialRevert","nameLocation":"12067:15:15","scope":17391,"visibility":"public"},{"id":13512,"nodeType":"StructDefinition","src":"12477:191:15","nodes":[],"canonicalName":"VmSafe.AccessListItem","documentation":{"id":13506,"nodeType":"StructuredDocumentation","src":"12439:33:15","text":"An EIP-2930 access list item."},"members":[{"constant":false,"id":13508,"mutability":"mutable","name":"target","nameLocation":"12568:6:15","nodeType":"VariableDeclaration","scope":13512,"src":"12560:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13507,"name":"address","nodeType":"ElementaryTypeName","src":"12560:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13511,"mutability":"mutable","name":"storageKeys","nameLocation":"12650:11:15","nodeType":"VariableDeclaration","scope":13512,"src":"12640:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12640:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13510,"nodeType":"ArrayTypeName","src":"12640:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"AccessListItem","nameLocation":"12484:14:15","scope":17391,"visibility":"public"},{"id":13521,"nodeType":"FunctionDefinition","src":"12811:91:15","nodes":[],"documentation":{"id":13513,"nodeType":"StructuredDocumentation","src":"12707:99:15","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12820:12:15","parameters":{"id":13516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13515,"mutability":"mutable","name":"walletLabel","nameLocation":"12849:11:15","nodeType":"VariableDeclaration","scope":13521,"src":"12833:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13514,"name":"string","nodeType":"ElementaryTypeName","src":"12833:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12832:29:15"},"returnParameters":{"id":13520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13519,"mutability":"mutable","name":"wallet","nameLocation":"12894:6:15","nodeType":"VariableDeclaration","scope":13521,"src":"12880:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13518,"nodeType":"UserDefinedTypeName","pathNode":{"id":13517,"name":"Wallet","nameLocations":["12880:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13371,"src":"12880:6:15"},"referencedDeclaration":13371,"src":"12880:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"12879:22:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13530,"nodeType":"FunctionDefinition","src":"12980:82:15","nodes":[],"documentation":{"id":13522,"nodeType":"StructuredDocumentation","src":"12908:67:15","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"12989:12:15","parameters":{"id":13525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13524,"mutability":"mutable","name":"privateKey","nameLocation":"13010:10:15","nodeType":"VariableDeclaration","scope":13530,"src":"13002:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13523,"name":"uint256","nodeType":"ElementaryTypeName","src":"13002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13001:20:15"},"returnParameters":{"id":13529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13528,"mutability":"mutable","name":"wallet","nameLocation":"13054:6:15","nodeType":"VariableDeclaration","scope":13530,"src":"13040:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13527,"nodeType":"UserDefinedTypeName","pathNode":{"id":13526,"name":"Wallet","nameLocations":["13040:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13371,"src":"13040:6:15"},"referencedDeclaration":13371,"src":"13040:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"13039:22:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13541,"nodeType":"FunctionDefinition","src":"13176:111:15","nodes":[],"documentation":{"id":13531,"nodeType":"StructuredDocumentation","src":"13068:103:15","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"13185:12:15","parameters":{"id":13536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13533,"mutability":"mutable","name":"privateKey","nameLocation":"13206:10:15","nodeType":"VariableDeclaration","scope":13541,"src":"13198:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13532,"name":"uint256","nodeType":"ElementaryTypeName","src":"13198:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13535,"mutability":"mutable","name":"walletLabel","nameLocation":"13234:11:15","nodeType":"VariableDeclaration","scope":13541,"src":"13218:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13534,"name":"string","nodeType":"ElementaryTypeName","src":"13218:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13197:49:15"},"returnParameters":{"id":13540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13539,"mutability":"mutable","name":"wallet","nameLocation":"13279:6:15","nodeType":"VariableDeclaration","scope":13541,"src":"13265:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13538,"nodeType":"UserDefinedTypeName","pathNode":{"id":13537,"name":"Wallet","nameLocations":["13265:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13371,"src":"13265:6:15"},"referencedDeclaration":13371,"src":"13265:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"13264:22:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13551,"nodeType":"FunctionDefinition","src":"13435:102:15","nodes":[],"documentation":{"id":13542,"nodeType":"StructuredDocumentation","src":"13293:137:15","text":"Derive a private key from a provided mnemonic string (or mnemonic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13444:9:15","parameters":{"id":13547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13544,"mutability":"mutable","name":"mnemonic","nameLocation":"13470:8:15","nodeType":"VariableDeclaration","scope":13551,"src":"13454:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13543,"name":"string","nodeType":"ElementaryTypeName","src":"13454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13546,"mutability":"mutable","name":"index","nameLocation":"13487:5:15","nodeType":"VariableDeclaration","scope":13551,"src":"13480:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13545,"name":"uint32","nodeType":"ElementaryTypeName","src":"13480:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13453:40:15"},"returnParameters":{"id":13550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13549,"mutability":"mutable","name":"privateKey","nameLocation":"13525:10:15","nodeType":"VariableDeclaration","scope":13551,"src":"13517:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13548,"name":"uint256","nodeType":"ElementaryTypeName","src":"13517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13516:20:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13563,"nodeType":"FunctionDefinition","src":"13666:158:15","nodes":[],"documentation":{"id":13552,"nodeType":"StructuredDocumentation","src":"13543:118:15","text":"Derive a private key from a provided mnemonic string (or mnemonic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"13675:9:15","parameters":{"id":13559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13554,"mutability":"mutable","name":"mnemonic","nameLocation":"13701:8:15","nodeType":"VariableDeclaration","scope":13563,"src":"13685:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13553,"name":"string","nodeType":"ElementaryTypeName","src":"13685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13556,"mutability":"mutable","name":"derivationPath","nameLocation":"13727:14:15","nodeType":"VariableDeclaration","scope":13563,"src":"13711:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13555,"name":"string","nodeType":"ElementaryTypeName","src":"13711:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13558,"mutability":"mutable","name":"index","nameLocation":"13750:5:15","nodeType":"VariableDeclaration","scope":13563,"src":"13743:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13557,"name":"uint32","nodeType":"ElementaryTypeName","src":"13743:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13684:72:15"},"returnParameters":{"id":13562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13561,"mutability":"mutable","name":"privateKey","nameLocation":"13812:10:15","nodeType":"VariableDeclaration","scope":13563,"src":"13804:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13560,"name":"uint256","nodeType":"ElementaryTypeName","src":"13804:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13803:20:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13575,"nodeType":"FunctionDefinition","src":"13998:152:15","nodes":[],"documentation":{"id":13564,"nodeType":"StructuredDocumentation","src":"13830:163:15","text":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"14007:9:15","parameters":{"id":13571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13566,"mutability":"mutable","name":"mnemonic","nameLocation":"14033:8:15","nodeType":"VariableDeclaration","scope":13575,"src":"14017:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13565,"name":"string","nodeType":"ElementaryTypeName","src":"14017:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13568,"mutability":"mutable","name":"index","nameLocation":"14050:5:15","nodeType":"VariableDeclaration","scope":13575,"src":"14043:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13567,"name":"uint32","nodeType":"ElementaryTypeName","src":"14043:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13570,"mutability":"mutable","name":"language","nameLocation":"14073:8:15","nodeType":"VariableDeclaration","scope":13575,"src":"14057:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13569,"name":"string","nodeType":"ElementaryTypeName","src":"14057:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14016:66:15"},"returnParameters":{"id":13574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13573,"mutability":"mutable","name":"privateKey","nameLocation":"14138:10:15","nodeType":"VariableDeclaration","scope":13575,"src":"14130:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13572,"name":"uint256","nodeType":"ElementaryTypeName","src":"14130:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14129:20:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13589,"nodeType":"FunctionDefinition","src":"14305:184:15","nodes":[],"documentation":{"id":13576,"nodeType":"StructuredDocumentation","src":"14156:144:15","text":"Derive a private key from a provided mnemonic string (or mnemonic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"14314:9:15","parameters":{"id":13585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13578,"mutability":"mutable","name":"mnemonic","nameLocation":"14340:8:15","nodeType":"VariableDeclaration","scope":13589,"src":"14324:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13577,"name":"string","nodeType":"ElementaryTypeName","src":"14324:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13580,"mutability":"mutable","name":"derivationPath","nameLocation":"14366:14:15","nodeType":"VariableDeclaration","scope":13589,"src":"14350:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13579,"name":"string","nodeType":"ElementaryTypeName","src":"14350:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13582,"mutability":"mutable","name":"index","nameLocation":"14389:5:15","nodeType":"VariableDeclaration","scope":13589,"src":"14382:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13581,"name":"uint32","nodeType":"ElementaryTypeName","src":"14382:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":13584,"mutability":"mutable","name":"language","nameLocation":"14412:8:15","nodeType":"VariableDeclaration","scope":13589,"src":"14396:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13583,"name":"string","nodeType":"ElementaryTypeName","src":"14396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14323:98:15"},"returnParameters":{"id":13588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13587,"mutability":"mutable","name":"privateKey","nameLocation":"14477:10:15","nodeType":"VariableDeclaration","scope":13589,"src":"14469:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13586,"name":"uint256","nodeType":"ElementaryTypeName","src":"14469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14468:20:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13599,"nodeType":"FunctionDefinition","src":"14564:106:15","nodes":[],"documentation":{"id":13590,"nodeType":"StructuredDocumentation","src":"14495:64:15","text":"Derives secp256r1 public key from the provided `privateKey`."},"functionSelector":"c453949e","implemented":false,"kind":"function","modifiers":[],"name":"publicKeyP256","nameLocation":"14573:13:15","parameters":{"id":13593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13592,"mutability":"mutable","name":"privateKey","nameLocation":"14595:10:15","nodeType":"VariableDeclaration","scope":13599,"src":"14587:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13591,"name":"uint256","nodeType":"ElementaryTypeName","src":"14587:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14586:20:15"},"returnParameters":{"id":13598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13595,"mutability":"mutable","name":"publicKeyX","nameLocation":"14638:10:15","nodeType":"VariableDeclaration","scope":13599,"src":"14630:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13594,"name":"uint256","nodeType":"ElementaryTypeName","src":"14630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13597,"mutability":"mutable","name":"publicKeyY","nameLocation":"14658:10:15","nodeType":"VariableDeclaration","scope":13599,"src":"14650:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13596,"name":"uint256","nodeType":"ElementaryTypeName","src":"14650:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14629:40:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13607,"nodeType":"FunctionDefinition","src":"14754:76:15","nodes":[],"documentation":{"id":13600,"nodeType":"StructuredDocumentation","src":"14676:73:15","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"14763:11:15","parameters":{"id":13603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13602,"mutability":"mutable","name":"privateKey","nameLocation":"14783:10:15","nodeType":"VariableDeclaration","scope":13607,"src":"14775:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13601,"name":"uint256","nodeType":"ElementaryTypeName","src":"14775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14774:20:15"},"returnParameters":{"id":13606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13605,"mutability":"mutable","name":"keyAddr","nameLocation":"14821:7:15","nodeType":"VariableDeclaration","scope":13607,"src":"14813:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13604,"name":"address","nodeType":"ElementaryTypeName","src":"14813:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14812:17:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13620,"nodeType":"FunctionDefinition","src":"15063:155:15","nodes":[],"documentation":{"id":13608,"nodeType":"StructuredDocumentation","src":"14836:222:15","text":"Derive a set number of wallets from a mnemonic at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"97cb9189","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"15072:12:15","parameters":{"id":13615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13610,"mutability":"mutable","name":"mnemonic","nameLocation":"15101:8:15","nodeType":"VariableDeclaration","scope":13620,"src":"15085:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13609,"name":"string","nodeType":"ElementaryTypeName","src":"15085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13612,"mutability":"mutable","name":"derivationPath","nameLocation":"15127:14:15","nodeType":"VariableDeclaration","scope":13620,"src":"15111:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13611,"name":"string","nodeType":"ElementaryTypeName","src":"15111:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13614,"mutability":"mutable","name":"count","nameLocation":"15150:5:15","nodeType":"VariableDeclaration","scope":13620,"src":"15143:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13613,"name":"uint32","nodeType":"ElementaryTypeName","src":"15143:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15084:72:15"},"returnParameters":{"id":13619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13618,"mutability":"mutable","name":"keyAddrs","nameLocation":"15208:8:15","nodeType":"VariableDeclaration","scope":13620,"src":"15191:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13616,"name":"address","nodeType":"ElementaryTypeName","src":"15191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13617,"nodeType":"ArrayTypeName","src":"15191:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15190:27:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13635,"nodeType":"FunctionDefinition","src":"15477:203:15","nodes":[],"documentation":{"id":13621,"nodeType":"StructuredDocumentation","src":"15224:248:15","text":"Derive a set number of wallets from a mnemonic in the specified language at the derivation path `m/44'/60'/0'/0/{0..count}`.\n The respective private keys are saved to the local forge wallet for later use and their addresses are returned."},"functionSelector":"f8d58eaf","implemented":false,"kind":"function","modifiers":[],"name":"rememberKeys","nameLocation":"15486:12:15","parameters":{"id":13630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13623,"mutability":"mutable","name":"mnemonic","nameLocation":"15524:8:15","nodeType":"VariableDeclaration","scope":13635,"src":"15508:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13622,"name":"string","nodeType":"ElementaryTypeName","src":"15508:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13625,"mutability":"mutable","name":"derivationPath","nameLocation":"15558:14:15","nodeType":"VariableDeclaration","scope":13635,"src":"15542:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13624,"name":"string","nodeType":"ElementaryTypeName","src":"15542:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13627,"mutability":"mutable","name":"language","nameLocation":"15598:8:15","nodeType":"VariableDeclaration","scope":13635,"src":"15582:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13626,"name":"string","nodeType":"ElementaryTypeName","src":"15582:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13629,"mutability":"mutable","name":"count","nameLocation":"15623:5:15","nodeType":"VariableDeclaration","scope":13635,"src":"15616:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13628,"name":"uint32","nodeType":"ElementaryTypeName","src":"15616:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15498:136:15"},"returnParameters":{"id":13634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13633,"mutability":"mutable","name":"keyAddrs","nameLocation":"15670:8:15","nodeType":"VariableDeclaration","scope":13635,"src":"15653:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13631,"name":"address","nodeType":"ElementaryTypeName","src":"15653:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13632,"nodeType":"ArrayTypeName","src":"15653:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15652:27:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13648,"nodeType":"FunctionDefinition","src":"15959:102:15","nodes":[],"documentation":{"id":13636,"nodeType":"StructuredDocumentation","src":"15686:268:15","text":"Signs data with a `Wallet`.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"3d0e292f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"15968:11:15","parameters":{"id":13642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13639,"mutability":"mutable","name":"wallet","nameLocation":"15996:6:15","nodeType":"VariableDeclaration","scope":13648,"src":"15980:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13638,"nodeType":"UserDefinedTypeName","pathNode":{"id":13637,"name":"Wallet","nameLocations":["15980:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13371,"src":"15980:6:15"},"referencedDeclaration":13371,"src":"15980:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":13641,"mutability":"mutable","name":"digest","nameLocation":"16012:6:15","nodeType":"VariableDeclaration","scope":13648,"src":"16004:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16004:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15979:40:15"},"returnParameters":{"id":13647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13644,"mutability":"mutable","name":"r","nameLocation":"16046:1:15","nodeType":"VariableDeclaration","scope":13648,"src":"16038:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16038:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13646,"mutability":"mutable","name":"vs","nameLocation":"16057:2:15","nodeType":"VariableDeclaration","scope":13648,"src":"16049:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16049:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16037:23:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13660,"nodeType":"FunctionDefinition","src":"16372:103:15","nodes":[],"documentation":{"id":13649,"nodeType":"StructuredDocumentation","src":"16067:300:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes."},"functionSelector":"cc2a781f","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"16381:11:15","parameters":{"id":13654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13651,"mutability":"mutable","name":"privateKey","nameLocation":"16401:10:15","nodeType":"VariableDeclaration","scope":13660,"src":"16393:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13650,"name":"uint256","nodeType":"ElementaryTypeName","src":"16393:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13653,"mutability":"mutable","name":"digest","nameLocation":"16421:6:15","nodeType":"VariableDeclaration","scope":13660,"src":"16413:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16413:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16392:36:15"},"returnParameters":{"id":13659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13656,"mutability":"mutable","name":"r","nameLocation":"16460:1:15","nodeType":"VariableDeclaration","scope":13660,"src":"16452:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16452:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13658,"mutability":"mutable","name":"vs","nameLocation":"16471:2:15","nodeType":"VariableDeclaration","scope":13660,"src":"16463:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16463:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16451:23:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13670,"nodeType":"FunctionDefinition","src":"17151:83:15","nodes":[],"documentation":{"id":13661,"nodeType":"StructuredDocumentation","src":"16481:665:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"a282dc4b","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17160:11:15","parameters":{"id":13664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13663,"mutability":"mutable","name":"digest","nameLocation":"17180:6:15","nodeType":"VariableDeclaration","scope":13670,"src":"17172:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17172:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17171:16:15"},"returnParameters":{"id":13669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13666,"mutability":"mutable","name":"r","nameLocation":"17219:1:15","nodeType":"VariableDeclaration","scope":13670,"src":"17211:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17211:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13668,"mutability":"mutable","name":"vs","nameLocation":"17230:2:15","nodeType":"VariableDeclaration","scope":13670,"src":"17222:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17222:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17210:23:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13682,"nodeType":"FunctionDefinition","src":"17648:99:15","nodes":[],"documentation":{"id":13671,"nodeType":"StructuredDocumentation","src":"17240:403:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Returns a compact signature (`r`, `vs`) as per EIP-2098, where `vs` encodes both the\n signature's `s` value, and the recovery id `v` in a single bytes32.\n This format reduces the signature size from 65 to 64 bytes.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8e2f97bf","implemented":false,"kind":"function","modifiers":[],"name":"signCompact","nameLocation":"17657:11:15","parameters":{"id":13676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13673,"mutability":"mutable","name":"signer","nameLocation":"17677:6:15","nodeType":"VariableDeclaration","scope":13682,"src":"17669:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13672,"name":"address","nodeType":"ElementaryTypeName","src":"17669:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13675,"mutability":"mutable","name":"digest","nameLocation":"17693:6:15","nodeType":"VariableDeclaration","scope":13682,"src":"17685:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17685:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17668:32:15"},"returnParameters":{"id":13681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13678,"mutability":"mutable","name":"r","nameLocation":"17732:1:15","nodeType":"VariableDeclaration","scope":13682,"src":"17724:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17724:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13680,"mutability":"mutable","name":"vs","nameLocation":"17743:2:15","nodeType":"VariableDeclaration","scope":13682,"src":"17735:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17735:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17723:23:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13694,"nodeType":"FunctionDefinition","src":"17821:99:15","nodes":[],"documentation":{"id":13683,"nodeType":"StructuredDocumentation","src":"17753:63:15","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"17830:8:15","parameters":{"id":13688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13685,"mutability":"mutable","name":"privateKey","nameLocation":"17847:10:15","nodeType":"VariableDeclaration","scope":13694,"src":"17839:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13684,"name":"uint256","nodeType":"ElementaryTypeName","src":"17839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13687,"mutability":"mutable","name":"digest","nameLocation":"17867:6:15","nodeType":"VariableDeclaration","scope":13694,"src":"17859:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17859:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17838:36:15"},"returnParameters":{"id":13693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13690,"mutability":"mutable","name":"r","nameLocation":"17906:1:15","nodeType":"VariableDeclaration","scope":13694,"src":"17898:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17898:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13692,"mutability":"mutable","name":"s","nameLocation":"17917:1:15","nodeType":"VariableDeclaration","scope":13694,"src":"17909:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17909:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17897:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13710,"nodeType":"FunctionDefinition","src":"18105:158:15","nodes":[],"documentation":{"id":13695,"nodeType":"StructuredDocumentation","src":"17926:174:15","text":"Signs `digest` with `privateKey` on the secp256k1 curve, using the given `nonce`\n as the raw ephemeral k value in ECDSA (instead of deriving it deterministically)."},"functionSelector":"2012783a","implemented":false,"kind":"function","modifiers":[],"name":"signWithNonceUnsafe","nameLocation":"18114:19:15","parameters":{"id":13702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13697,"mutability":"mutable","name":"privateKey","nameLocation":"18142:10:15","nodeType":"VariableDeclaration","scope":13710,"src":"18134:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13696,"name":"uint256","nodeType":"ElementaryTypeName","src":"18134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13699,"mutability":"mutable","name":"digest","nameLocation":"18162:6:15","nodeType":"VariableDeclaration","scope":13710,"src":"18154:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18154:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13701,"mutability":"mutable","name":"nonce","nameLocation":"18178:5:15","nodeType":"VariableDeclaration","scope":13710,"src":"18170:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13700,"name":"uint256","nodeType":"ElementaryTypeName","src":"18170:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18133:51:15"},"returnParameters":{"id":13709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13704,"mutability":"mutable","name":"v","nameLocation":"18238:1:15","nodeType":"VariableDeclaration","scope":13710,"src":"18232:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13703,"name":"uint8","nodeType":"ElementaryTypeName","src":"18232:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13706,"mutability":"mutable","name":"r","nameLocation":"18249:1:15","nodeType":"VariableDeclaration","scope":13710,"src":"18241:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18241:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13708,"mutability":"mutable","name":"s","nameLocation":"18260:1:15","nodeType":"VariableDeclaration","scope":13710,"src":"18252:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18252:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18231:31:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13725,"nodeType":"FunctionDefinition","src":"18305:103:15","nodes":[],"documentation":{"id":13711,"nodeType":"StructuredDocumentation","src":"18269:31:15","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18314:4:15","parameters":{"id":13717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13714,"mutability":"mutable","name":"wallet","nameLocation":"18335:6:15","nodeType":"VariableDeclaration","scope":13725,"src":"18319:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":13713,"nodeType":"UserDefinedTypeName","pathNode":{"id":13712,"name":"Wallet","nameLocations":["18319:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13371,"src":"18319:6:15"},"referencedDeclaration":13371,"src":"18319:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":13716,"mutability":"mutable","name":"digest","nameLocation":"18351:6:15","nodeType":"VariableDeclaration","scope":13725,"src":"18343:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18343:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18318:40:15"},"returnParameters":{"id":13724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13719,"mutability":"mutable","name":"v","nameLocation":"18383:1:15","nodeType":"VariableDeclaration","scope":13725,"src":"18377:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13718,"name":"uint8","nodeType":"ElementaryTypeName","src":"18377:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13721,"mutability":"mutable","name":"r","nameLocation":"18394:1:15","nodeType":"VariableDeclaration","scope":13725,"src":"18386:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18386:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13723,"mutability":"mutable","name":"s","nameLocation":"18405:1:15","nodeType":"VariableDeclaration","scope":13725,"src":"18397:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18397:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18376:31:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13739,"nodeType":"FunctionDefinition","src":"18482:104:15","nodes":[],"documentation":{"id":13726,"nodeType":"StructuredDocumentation","src":"18414:63:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"18491:4:15","parameters":{"id":13731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13728,"mutability":"mutable","name":"privateKey","nameLocation":"18504:10:15","nodeType":"VariableDeclaration","scope":13739,"src":"18496:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13727,"name":"uint256","nodeType":"ElementaryTypeName","src":"18496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13730,"mutability":"mutable","name":"digest","nameLocation":"18524:6:15","nodeType":"VariableDeclaration","scope":13739,"src":"18516:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18516:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18495:36:15"},"returnParameters":{"id":13738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13733,"mutability":"mutable","name":"v","nameLocation":"18561:1:15","nodeType":"VariableDeclaration","scope":13739,"src":"18555:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13732,"name":"uint8","nodeType":"ElementaryTypeName","src":"18555:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13735,"mutability":"mutable","name":"r","nameLocation":"18572:1:15","nodeType":"VariableDeclaration","scope":13739,"src":"18564:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18564:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13737,"mutability":"mutable","name":"s","nameLocation":"18583:1:15","nodeType":"VariableDeclaration","scope":13739,"src":"18575:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18575:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18554:31:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13751,"nodeType":"FunctionDefinition","src":"19025:84:15","nodes":[],"documentation":{"id":13740,"nodeType":"StructuredDocumentation","src":"18592:428:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"19034:4:15","parameters":{"id":13743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13742,"mutability":"mutable","name":"digest","nameLocation":"19047:6:15","nodeType":"VariableDeclaration","scope":13751,"src":"19039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19039:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19038:16:15"},"returnParameters":{"id":13750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13745,"mutability":"mutable","name":"v","nameLocation":"19084:1:15","nodeType":"VariableDeclaration","scope":13751,"src":"19078:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13744,"name":"uint8","nodeType":"ElementaryTypeName","src":"19078:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13747,"mutability":"mutable","name":"r","nameLocation":"19095:1:15","nodeType":"VariableDeclaration","scope":13751,"src":"19087:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19087:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13749,"mutability":"mutable","name":"s","nameLocation":"19106:1:15","nodeType":"VariableDeclaration","scope":13751,"src":"19098:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19098:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19077:31:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13765,"nodeType":"FunctionDefinition","src":"19286:100:15","nodes":[],"documentation":{"id":13752,"nodeType":"StructuredDocumentation","src":"19115:166:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"19295:4:15","parameters":{"id":13757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13754,"mutability":"mutable","name":"signer","nameLocation":"19308:6:15","nodeType":"VariableDeclaration","scope":13765,"src":"19300:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13753,"name":"address","nodeType":"ElementaryTypeName","src":"19300:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13756,"mutability":"mutable","name":"digest","nameLocation":"19324:6:15","nodeType":"VariableDeclaration","scope":13765,"src":"19316:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19316:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19299:32:15"},"returnParameters":{"id":13764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13759,"mutability":"mutable","name":"v","nameLocation":"19361:1:15","nodeType":"VariableDeclaration","scope":13765,"src":"19355:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13758,"name":"uint8","nodeType":"ElementaryTypeName","src":"19355:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13761,"mutability":"mutable","name":"r","nameLocation":"19372:1:15","nodeType":"VariableDeclaration","scope":13765,"src":"19364:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19364:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13763,"mutability":"mutable","name":"s","nameLocation":"19383:1:15","nodeType":"VariableDeclaration","scope":13765,"src":"19375:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19375:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19354:31:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13773,"nodeType":"FunctionDefinition","src":"19573:80:15","nodes":[],"documentation":{"id":13766,"nodeType":"StructuredDocumentation","src":"19430:138:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19582:10:15","parameters":{"id":13769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13768,"mutability":"mutable","name":"name","nameLocation":"19609:4:15","nodeType":"VariableDeclaration","scope":13773,"src":"19593:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13767,"name":"string","nodeType":"ElementaryTypeName","src":"19593:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19592:22:15"},"returnParameters":{"id":13772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13771,"mutability":"mutable","name":"value","nameLocation":"19646:5:15","nodeType":"VariableDeclaration","scope":13773,"src":"19638:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13770,"name":"address","nodeType":"ElementaryTypeName","src":"19638:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19637:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13784,"nodeType":"FunctionDefinition","src":"19836:112:15","nodes":[],"documentation":{"id":13774,"nodeType":"StructuredDocumentation","src":"19659:172:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"19845:10:15","parameters":{"id":13779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13776,"mutability":"mutable","name":"name","nameLocation":"19872:4:15","nodeType":"VariableDeclaration","scope":13784,"src":"19856:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13775,"name":"string","nodeType":"ElementaryTypeName","src":"19856:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13778,"mutability":"mutable","name":"delim","nameLocation":"19894:5:15","nodeType":"VariableDeclaration","scope":13784,"src":"19878:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13777,"name":"string","nodeType":"ElementaryTypeName","src":"19878:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19855:45:15"},"returnParameters":{"id":13783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13782,"mutability":"mutable","name":"value","nameLocation":"19941:5:15","nodeType":"VariableDeclaration","scope":13784,"src":"19924:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13780,"name":"address","nodeType":"ElementaryTypeName","src":"19924:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13781,"nodeType":"ArrayTypeName","src":"19924:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"19923:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13792,"nodeType":"FunctionDefinition","src":"20094:74:15","nodes":[],"documentation":{"id":13785,"nodeType":"StructuredDocumentation","src":"19954:135:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"20103:7:15","parameters":{"id":13788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13787,"mutability":"mutable","name":"name","nameLocation":"20127:4:15","nodeType":"VariableDeclaration","scope":13792,"src":"20111:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13786,"name":"string","nodeType":"ElementaryTypeName","src":"20111:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20110:22:15"},"returnParameters":{"id":13791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13790,"mutability":"mutable","name":"value","nameLocation":"20161:5:15","nodeType":"VariableDeclaration","scope":13792,"src":"20156:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13789,"name":"bool","nodeType":"ElementaryTypeName","src":"20156:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20155:12:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13803,"nodeType":"FunctionDefinition","src":"20348:106:15","nodes":[],"documentation":{"id":13793,"nodeType":"StructuredDocumentation","src":"20174:169:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"20357:7:15","parameters":{"id":13798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13795,"mutability":"mutable","name":"name","nameLocation":"20381:4:15","nodeType":"VariableDeclaration","scope":13803,"src":"20365:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13794,"name":"string","nodeType":"ElementaryTypeName","src":"20365:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13797,"mutability":"mutable","name":"delim","nameLocation":"20403:5:15","nodeType":"VariableDeclaration","scope":13803,"src":"20387:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13796,"name":"string","nodeType":"ElementaryTypeName","src":"20387:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20364:45:15"},"returnParameters":{"id":13802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13801,"mutability":"mutable","name":"value","nameLocation":"20447:5:15","nodeType":"VariableDeclaration","scope":13803,"src":"20433:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13799,"name":"bool","nodeType":"ElementaryTypeName","src":"20433:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13800,"nodeType":"ArrayTypeName","src":"20433:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"20432:21:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13811,"nodeType":"FunctionDefinition","src":"20603:80:15","nodes":[],"documentation":{"id":13804,"nodeType":"StructuredDocumentation","src":"20460:138:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20612:10:15","parameters":{"id":13807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13806,"mutability":"mutable","name":"name","nameLocation":"20639:4:15","nodeType":"VariableDeclaration","scope":13811,"src":"20623:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13805,"name":"string","nodeType":"ElementaryTypeName","src":"20623:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20622:22:15"},"returnParameters":{"id":13810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13809,"mutability":"mutable","name":"value","nameLocation":"20676:5:15","nodeType":"VariableDeclaration","scope":13811,"src":"20668:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20668:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20667:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13822,"nodeType":"FunctionDefinition","src":"20866:112:15","nodes":[],"documentation":{"id":13812,"nodeType":"StructuredDocumentation","src":"20689:172:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"20875:10:15","parameters":{"id":13817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13814,"mutability":"mutable","name":"name","nameLocation":"20902:4:15","nodeType":"VariableDeclaration","scope":13822,"src":"20886:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13813,"name":"string","nodeType":"ElementaryTypeName","src":"20886:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13816,"mutability":"mutable","name":"delim","nameLocation":"20924:5:15","nodeType":"VariableDeclaration","scope":13822,"src":"20908:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13815,"name":"string","nodeType":"ElementaryTypeName","src":"20908:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20885:45:15"},"returnParameters":{"id":13821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13820,"mutability":"mutable","name":"value","nameLocation":"20971:5:15","nodeType":"VariableDeclaration","scope":13822,"src":"20954:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20954:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13819,"nodeType":"ArrayTypeName","src":"20954:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"20953:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13830,"nodeType":"FunctionDefinition","src":"21125:83:15","nodes":[],"documentation":{"id":13823,"nodeType":"StructuredDocumentation","src":"20984:136:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"21134:8:15","parameters":{"id":13826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13825,"mutability":"mutable","name":"name","nameLocation":"21159:4:15","nodeType":"VariableDeclaration","scope":13830,"src":"21143:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13824,"name":"string","nodeType":"ElementaryTypeName","src":"21143:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21142:22:15"},"returnParameters":{"id":13829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13828,"mutability":"mutable","name":"value","nameLocation":"21201:5:15","nodeType":"VariableDeclaration","scope":13830,"src":"21188:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13827,"name":"bytes","nodeType":"ElementaryTypeName","src":"21188:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21187:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13841,"nodeType":"FunctionDefinition","src":"21389:108:15","nodes":[],"documentation":{"id":13831,"nodeType":"StructuredDocumentation","src":"21214:170:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"21398:8:15","parameters":{"id":13836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13833,"mutability":"mutable","name":"name","nameLocation":"21423:4:15","nodeType":"VariableDeclaration","scope":13841,"src":"21407:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13832,"name":"string","nodeType":"ElementaryTypeName","src":"21407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13835,"mutability":"mutable","name":"delim","nameLocation":"21445:5:15","nodeType":"VariableDeclaration","scope":13841,"src":"21429:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13834,"name":"string","nodeType":"ElementaryTypeName","src":"21429:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21406:45:15"},"returnParameters":{"id":13840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13839,"mutability":"mutable","name":"value","nameLocation":"21490:5:15","nodeType":"VariableDeclaration","scope":13841,"src":"21475:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13837,"name":"bytes","nodeType":"ElementaryTypeName","src":"21475:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13838,"nodeType":"ArrayTypeName","src":"21475:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"21474:22:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13849,"nodeType":"FunctionDefinition","src":"21599:77:15","nodes":[],"documentation":{"id":13842,"nodeType":"StructuredDocumentation","src":"21503:91:15","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"21608:9:15","parameters":{"id":13845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13844,"mutability":"mutable","name":"name","nameLocation":"21634:4:15","nodeType":"VariableDeclaration","scope":13849,"src":"21618:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13843,"name":"string","nodeType":"ElementaryTypeName","src":"21618:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21617:22:15"},"returnParameters":{"id":13848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13847,"mutability":"mutable","name":"result","nameLocation":"21668:6:15","nodeType":"VariableDeclaration","scope":13849,"src":"21663:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13846,"name":"bool","nodeType":"ElementaryTypeName","src":"21663:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21662:13:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13857,"nodeType":"FunctionDefinition","src":"21824:75:15","nodes":[],"documentation":{"id":13850,"nodeType":"StructuredDocumentation","src":"21682:137:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"21833:6:15","parameters":{"id":13853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13852,"mutability":"mutable","name":"name","nameLocation":"21856:4:15","nodeType":"VariableDeclaration","scope":13857,"src":"21840:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13851,"name":"string","nodeType":"ElementaryTypeName","src":"21840:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21839:22:15"},"returnParameters":{"id":13856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13855,"mutability":"mutable","name":"value","nameLocation":"21892:5:15","nodeType":"VariableDeclaration","scope":13857,"src":"21885:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13854,"name":"int256","nodeType":"ElementaryTypeName","src":"21885:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21884:14:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13868,"nodeType":"FunctionDefinition","src":"22081:107:15","nodes":[],"documentation":{"id":13858,"nodeType":"StructuredDocumentation","src":"21905:171:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"22090:6:15","parameters":{"id":13863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13860,"mutability":"mutable","name":"name","nameLocation":"22113:4:15","nodeType":"VariableDeclaration","scope":13868,"src":"22097:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13859,"name":"string","nodeType":"ElementaryTypeName","src":"22097:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13862,"mutability":"mutable","name":"delim","nameLocation":"22135:5:15","nodeType":"VariableDeclaration","scope":13868,"src":"22119:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13861,"name":"string","nodeType":"ElementaryTypeName","src":"22119:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22096:45:15"},"returnParameters":{"id":13867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13866,"mutability":"mutable","name":"value","nameLocation":"22181:5:15","nodeType":"VariableDeclaration","scope":13868,"src":"22165:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13864,"name":"int256","nodeType":"ElementaryTypeName","src":"22165:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13865,"nodeType":"ArrayTypeName","src":"22165:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"22164:23:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13878,"nodeType":"FunctionDefinition","src":"22379:91:15","nodes":[],"documentation":{"id":13869,"nodeType":"StructuredDocumentation","src":"22194:180:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22388:5:15","parameters":{"id":13874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13871,"mutability":"mutable","name":"name","nameLocation":"22410:4:15","nodeType":"VariableDeclaration","scope":13878,"src":"22394:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13870,"name":"string","nodeType":"ElementaryTypeName","src":"22394:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13873,"mutability":"mutable","name":"defaultValue","nameLocation":"22421:12:15","nodeType":"VariableDeclaration","scope":13878,"src":"22416:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13872,"name":"bool","nodeType":"ElementaryTypeName","src":"22416:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22393:41:15"},"returnParameters":{"id":13877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13876,"mutability":"mutable","name":"value","nameLocation":"22463:5:15","nodeType":"VariableDeclaration","scope":13878,"src":"22458:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13875,"name":"bool","nodeType":"ElementaryTypeName","src":"22458:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22457:12:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13888,"nodeType":"FunctionDefinition","src":"22664:97:15","nodes":[],"documentation":{"id":13879,"nodeType":"StructuredDocumentation","src":"22476:183:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22673:5:15","parameters":{"id":13884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13881,"mutability":"mutable","name":"name","nameLocation":"22695:4:15","nodeType":"VariableDeclaration","scope":13888,"src":"22679:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13880,"name":"string","nodeType":"ElementaryTypeName","src":"22679:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13883,"mutability":"mutable","name":"defaultValue","nameLocation":"22709:12:15","nodeType":"VariableDeclaration","scope":13888,"src":"22701:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13882,"name":"uint256","nodeType":"ElementaryTypeName","src":"22701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22678:44:15"},"returnParameters":{"id":13887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13886,"mutability":"mutable","name":"value","nameLocation":"22754:5:15","nodeType":"VariableDeclaration","scope":13888,"src":"22746:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13885,"name":"uint256","nodeType":"ElementaryTypeName","src":"22746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22745:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13902,"nodeType":"FunctionDefinition","src":"22989:164:15","nodes":[],"documentation":{"id":13889,"nodeType":"StructuredDocumentation","src":"22767:217:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"22998:5:15","parameters":{"id":13897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13891,"mutability":"mutable","name":"name","nameLocation":"23020:4:15","nodeType":"VariableDeclaration","scope":13902,"src":"23004:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13890,"name":"string","nodeType":"ElementaryTypeName","src":"23004:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13893,"mutability":"mutable","name":"delim","nameLocation":"23042:5:15","nodeType":"VariableDeclaration","scope":13902,"src":"23026:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13892,"name":"string","nodeType":"ElementaryTypeName","src":"23026:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13896,"mutability":"mutable","name":"defaultValue","nameLocation":"23068:12:15","nodeType":"VariableDeclaration","scope":13902,"src":"23049:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13894,"name":"address","nodeType":"ElementaryTypeName","src":"23049:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13895,"nodeType":"ArrayTypeName","src":"23049:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"23003:78:15"},"returnParameters":{"id":13901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13900,"mutability":"mutable","name":"value","nameLocation":"23146:5:15","nodeType":"VariableDeclaration","scope":13902,"src":"23129:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13898,"name":"address","nodeType":"ElementaryTypeName","src":"23129:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13899,"nodeType":"ArrayTypeName","src":"23129:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"23128:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13916,"nodeType":"FunctionDefinition","src":"23381:164:15","nodes":[],"documentation":{"id":13903,"nodeType":"StructuredDocumentation","src":"23159:217:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23390:5:15","parameters":{"id":13911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13905,"mutability":"mutable","name":"name","nameLocation":"23412:4:15","nodeType":"VariableDeclaration","scope":13916,"src":"23396:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13904,"name":"string","nodeType":"ElementaryTypeName","src":"23396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13907,"mutability":"mutable","name":"delim","nameLocation":"23434:5:15","nodeType":"VariableDeclaration","scope":13916,"src":"23418:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13906,"name":"string","nodeType":"ElementaryTypeName","src":"23418:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13910,"mutability":"mutable","name":"defaultValue","nameLocation":"23460:12:15","nodeType":"VariableDeclaration","scope":13916,"src":"23441:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23441:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13909,"nodeType":"ArrayTypeName","src":"23441:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23395:78:15"},"returnParameters":{"id":13915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13914,"mutability":"mutable","name":"value","nameLocation":"23538:5:15","nodeType":"VariableDeclaration","scope":13916,"src":"23521:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23521:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13913,"nodeType":"ArrayTypeName","src":"23521:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"23520:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13930,"nodeType":"FunctionDefinition","src":"23772:162:15","nodes":[],"documentation":{"id":13917,"nodeType":"StructuredDocumentation","src":"23551:216:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"23781:5:15","parameters":{"id":13925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13919,"mutability":"mutable","name":"name","nameLocation":"23803:4:15","nodeType":"VariableDeclaration","scope":13930,"src":"23787:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13918,"name":"string","nodeType":"ElementaryTypeName","src":"23787:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13921,"mutability":"mutable","name":"delim","nameLocation":"23825:5:15","nodeType":"VariableDeclaration","scope":13930,"src":"23809:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13920,"name":"string","nodeType":"ElementaryTypeName","src":"23809:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13924,"mutability":"mutable","name":"defaultValue","nameLocation":"23850:12:15","nodeType":"VariableDeclaration","scope":13930,"src":"23832:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13922,"name":"string","nodeType":"ElementaryTypeName","src":"23832:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13923,"nodeType":"ArrayTypeName","src":"23832:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23786:77:15"},"returnParameters":{"id":13929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13928,"mutability":"mutable","name":"value","nameLocation":"23927:5:15","nodeType":"VariableDeclaration","scope":13930,"src":"23911:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13926,"name":"string","nodeType":"ElementaryTypeName","src":"23911:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13927,"nodeType":"ArrayTypeName","src":"23911:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"23910:23:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13944,"nodeType":"FunctionDefinition","src":"24160:160:15","nodes":[],"documentation":{"id":13931,"nodeType":"StructuredDocumentation","src":"23940:215:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24169:5:15","parameters":{"id":13939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13933,"mutability":"mutable","name":"name","nameLocation":"24191:4:15","nodeType":"VariableDeclaration","scope":13944,"src":"24175:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13932,"name":"string","nodeType":"ElementaryTypeName","src":"24175:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13935,"mutability":"mutable","name":"delim","nameLocation":"24213:5:15","nodeType":"VariableDeclaration","scope":13944,"src":"24197:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13934,"name":"string","nodeType":"ElementaryTypeName","src":"24197:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13938,"mutability":"mutable","name":"defaultValue","nameLocation":"24237:12:15","nodeType":"VariableDeclaration","scope":13944,"src":"24220:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13936,"name":"bytes","nodeType":"ElementaryTypeName","src":"24220:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13937,"nodeType":"ArrayTypeName","src":"24220:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"24174:76:15"},"returnParameters":{"id":13943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13942,"mutability":"mutable","name":"value","nameLocation":"24313:5:15","nodeType":"VariableDeclaration","scope":13944,"src":"24298:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13940,"name":"bytes","nodeType":"ElementaryTypeName","src":"24298:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13941,"nodeType":"ArrayTypeName","src":"24298:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"24297:22:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13954,"nodeType":"FunctionDefinition","src":"24513:95:15","nodes":[],"documentation":{"id":13945,"nodeType":"StructuredDocumentation","src":"24326:182:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24522:5:15","parameters":{"id":13950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13947,"mutability":"mutable","name":"name","nameLocation":"24544:4:15","nodeType":"VariableDeclaration","scope":13954,"src":"24528:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13946,"name":"string","nodeType":"ElementaryTypeName","src":"24528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13949,"mutability":"mutable","name":"defaultValue","nameLocation":"24557:12:15","nodeType":"VariableDeclaration","scope":13954,"src":"24550:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13948,"name":"int256","nodeType":"ElementaryTypeName","src":"24550:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24527:43:15"},"returnParameters":{"id":13953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13952,"mutability":"mutable","name":"value","nameLocation":"24601:5:15","nodeType":"VariableDeclaration","scope":13954,"src":"24594:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13951,"name":"int256","nodeType":"ElementaryTypeName","src":"24594:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24593:14:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13964,"nodeType":"FunctionDefinition","src":"24802:97:15","nodes":[],"documentation":{"id":13955,"nodeType":"StructuredDocumentation","src":"24614:183:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"24811:5:15","parameters":{"id":13960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13957,"mutability":"mutable","name":"name","nameLocation":"24833:4:15","nodeType":"VariableDeclaration","scope":13964,"src":"24817:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13956,"name":"string","nodeType":"ElementaryTypeName","src":"24817:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13959,"mutability":"mutable","name":"defaultValue","nameLocation":"24847:12:15","nodeType":"VariableDeclaration","scope":13964,"src":"24839:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13958,"name":"address","nodeType":"ElementaryTypeName","src":"24839:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24816:44:15"},"returnParameters":{"id":13963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13962,"mutability":"mutable","name":"value","nameLocation":"24892:5:15","nodeType":"VariableDeclaration","scope":13964,"src":"24884:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13961,"name":"address","nodeType":"ElementaryTypeName","src":"24884:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24883:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13974,"nodeType":"FunctionDefinition","src":"25093:97:15","nodes":[],"documentation":{"id":13965,"nodeType":"StructuredDocumentation","src":"24905:183:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25102:5:15","parameters":{"id":13970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13967,"mutability":"mutable","name":"name","nameLocation":"25124:4:15","nodeType":"VariableDeclaration","scope":13974,"src":"25108:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13966,"name":"string","nodeType":"ElementaryTypeName","src":"25108:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13969,"mutability":"mutable","name":"defaultValue","nameLocation":"25138:12:15","nodeType":"VariableDeclaration","scope":13974,"src":"25130:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25130:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25107:44:15"},"returnParameters":{"id":13973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13972,"mutability":"mutable","name":"value","nameLocation":"25183:5:15","nodeType":"VariableDeclaration","scope":13974,"src":"25175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25175:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"25174:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13984,"nodeType":"FunctionDefinition","src":"25383:111:15","nodes":[],"documentation":{"id":13975,"nodeType":"StructuredDocumentation","src":"25196:182:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25392:5:15","parameters":{"id":13980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13977,"mutability":"mutable","name":"name","nameLocation":"25414:4:15","nodeType":"VariableDeclaration","scope":13984,"src":"25398:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13976,"name":"string","nodeType":"ElementaryTypeName","src":"25398:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13979,"mutability":"mutable","name":"defaultValue","nameLocation":"25436:12:15","nodeType":"VariableDeclaration","scope":13984,"src":"25420:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13978,"name":"string","nodeType":"ElementaryTypeName","src":"25420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25397:52:15"},"returnParameters":{"id":13983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13982,"mutability":"mutable","name":"value","nameLocation":"25487:5:15","nodeType":"VariableDeclaration","scope":13984,"src":"25473:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13981,"name":"string","nodeType":"ElementaryTypeName","src":"25473:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25472:21:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13994,"nodeType":"FunctionDefinition","src":"25686:109:15","nodes":[],"documentation":{"id":13985,"nodeType":"StructuredDocumentation","src":"25500:181:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"25695:5:15","parameters":{"id":13990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13987,"mutability":"mutable","name":"name","nameLocation":"25717:4:15","nodeType":"VariableDeclaration","scope":13994,"src":"25701:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13986,"name":"string","nodeType":"ElementaryTypeName","src":"25701:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13989,"mutability":"mutable","name":"defaultValue","nameLocation":"25738:12:15","nodeType":"VariableDeclaration","scope":13994,"src":"25723:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13988,"name":"bytes","nodeType":"ElementaryTypeName","src":"25723:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25700:51:15"},"returnParameters":{"id":13993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13992,"mutability":"mutable","name":"value","nameLocation":"25788:5:15","nodeType":"VariableDeclaration","scope":13994,"src":"25775:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13991,"name":"bytes","nodeType":"ElementaryTypeName","src":"25775:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25774:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14008,"nodeType":"FunctionDefinition","src":"26020:158:15","nodes":[],"documentation":{"id":13995,"nodeType":"StructuredDocumentation","src":"25801:214:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26029:5:15","parameters":{"id":14003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13997,"mutability":"mutable","name":"name","nameLocation":"26051:4:15","nodeType":"VariableDeclaration","scope":14008,"src":"26035:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13996,"name":"string","nodeType":"ElementaryTypeName","src":"26035:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13999,"mutability":"mutable","name":"delim","nameLocation":"26073:5:15","nodeType":"VariableDeclaration","scope":14008,"src":"26057:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13998,"name":"string","nodeType":"ElementaryTypeName","src":"26057:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14002,"mutability":"mutable","name":"defaultValue","nameLocation":"26096:12:15","nodeType":"VariableDeclaration","scope":14008,"src":"26080:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14000,"name":"bool","nodeType":"ElementaryTypeName","src":"26080:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14001,"nodeType":"ArrayTypeName","src":"26080:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"26034:75:15"},"returnParameters":{"id":14007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14006,"mutability":"mutable","name":"value","nameLocation":"26171:5:15","nodeType":"VariableDeclaration","scope":14008,"src":"26157:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14004,"name":"bool","nodeType":"ElementaryTypeName","src":"26157:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14005,"nodeType":"ArrayTypeName","src":"26157:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"26156:21:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14022,"nodeType":"FunctionDefinition","src":"26406:164:15","nodes":[],"documentation":{"id":14009,"nodeType":"StructuredDocumentation","src":"26184:217:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26415:5:15","parameters":{"id":14017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14011,"mutability":"mutable","name":"name","nameLocation":"26437:4:15","nodeType":"VariableDeclaration","scope":14022,"src":"26421:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14010,"name":"string","nodeType":"ElementaryTypeName","src":"26421:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14013,"mutability":"mutable","name":"delim","nameLocation":"26459:5:15","nodeType":"VariableDeclaration","scope":14022,"src":"26443:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14012,"name":"string","nodeType":"ElementaryTypeName","src":"26443:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14016,"mutability":"mutable","name":"defaultValue","nameLocation":"26485:12:15","nodeType":"VariableDeclaration","scope":14022,"src":"26466:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14014,"name":"uint256","nodeType":"ElementaryTypeName","src":"26466:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14015,"nodeType":"ArrayTypeName","src":"26466:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26420:78:15"},"returnParameters":{"id":14021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14020,"mutability":"mutable","name":"value","nameLocation":"26563:5:15","nodeType":"VariableDeclaration","scope":14022,"src":"26546:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14018,"name":"uint256","nodeType":"ElementaryTypeName","src":"26546:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14019,"nodeType":"ArrayTypeName","src":"26546:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"26545:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14036,"nodeType":"FunctionDefinition","src":"26797:162:15","nodes":[],"documentation":{"id":14023,"nodeType":"StructuredDocumentation","src":"26576:216:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"26806:5:15","parameters":{"id":14031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14025,"mutability":"mutable","name":"name","nameLocation":"26828:4:15","nodeType":"VariableDeclaration","scope":14036,"src":"26812:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14024,"name":"string","nodeType":"ElementaryTypeName","src":"26812:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14027,"mutability":"mutable","name":"delim","nameLocation":"26850:5:15","nodeType":"VariableDeclaration","scope":14036,"src":"26834:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14026,"name":"string","nodeType":"ElementaryTypeName","src":"26834:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14030,"mutability":"mutable","name":"defaultValue","nameLocation":"26875:12:15","nodeType":"VariableDeclaration","scope":14036,"src":"26857:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14028,"name":"int256","nodeType":"ElementaryTypeName","src":"26857:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14029,"nodeType":"ArrayTypeName","src":"26857:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26811:77:15"},"returnParameters":{"id":14035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14034,"mutability":"mutable","name":"value","nameLocation":"26952:5:15","nodeType":"VariableDeclaration","scope":14036,"src":"26936:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14032,"name":"int256","nodeType":"ElementaryTypeName","src":"26936:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14033,"nodeType":"ArrayTypeName","src":"26936:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"26935:23:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14044,"nodeType":"FunctionDefinition","src":"27107:85:15","nodes":[],"documentation":{"id":14037,"nodeType":"StructuredDocumentation","src":"26965:137:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"27116:9:15","parameters":{"id":14040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14039,"mutability":"mutable","name":"name","nameLocation":"27142:4:15","nodeType":"VariableDeclaration","scope":14044,"src":"27126:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14038,"name":"string","nodeType":"ElementaryTypeName","src":"27126:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27125:22:15"},"returnParameters":{"id":14043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14042,"mutability":"mutable","name":"value","nameLocation":"27185:5:15","nodeType":"VariableDeclaration","scope":14044,"src":"27171:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14041,"name":"string","nodeType":"ElementaryTypeName","src":"27171:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27170:21:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14055,"nodeType":"FunctionDefinition","src":"27374:110:15","nodes":[],"documentation":{"id":14045,"nodeType":"StructuredDocumentation","src":"27198:171:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"27383:9:15","parameters":{"id":14050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14047,"mutability":"mutable","name":"name","nameLocation":"27409:4:15","nodeType":"VariableDeclaration","scope":14055,"src":"27393:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14046,"name":"string","nodeType":"ElementaryTypeName","src":"27393:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14049,"mutability":"mutable","name":"delim","nameLocation":"27431:5:15","nodeType":"VariableDeclaration","scope":14055,"src":"27415:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14048,"name":"string","nodeType":"ElementaryTypeName","src":"27415:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27392:45:15"},"returnParameters":{"id":14054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14053,"mutability":"mutable","name":"value","nameLocation":"27477:5:15","nodeType":"VariableDeclaration","scope":14055,"src":"27461:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14051,"name":"string","nodeType":"ElementaryTypeName","src":"27461:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14052,"nodeType":"ArrayTypeName","src":"27461:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"27460:23:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14063,"nodeType":"FunctionDefinition","src":"27633:77:15","nodes":[],"documentation":{"id":14056,"nodeType":"StructuredDocumentation","src":"27490:138:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27642:7:15","parameters":{"id":14059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14058,"mutability":"mutable","name":"name","nameLocation":"27666:4:15","nodeType":"VariableDeclaration","scope":14063,"src":"27650:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14057,"name":"string","nodeType":"ElementaryTypeName","src":"27650:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27649:22:15"},"returnParameters":{"id":14062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14061,"mutability":"mutable","name":"value","nameLocation":"27703:5:15","nodeType":"VariableDeclaration","scope":14063,"src":"27695:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14060,"name":"uint256","nodeType":"ElementaryTypeName","src":"27695:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27694:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14074,"nodeType":"FunctionDefinition","src":"27893:109:15","nodes":[],"documentation":{"id":14064,"nodeType":"StructuredDocumentation","src":"27716:172:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"27902:7:15","parameters":{"id":14069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14066,"mutability":"mutable","name":"name","nameLocation":"27926:4:15","nodeType":"VariableDeclaration","scope":14074,"src":"27910:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14065,"name":"string","nodeType":"ElementaryTypeName","src":"27910:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14068,"mutability":"mutable","name":"delim","nameLocation":"27948:5:15","nodeType":"VariableDeclaration","scope":14074,"src":"27932:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14067,"name":"string","nodeType":"ElementaryTypeName","src":"27932:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27909:45:15"},"returnParameters":{"id":14073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14072,"mutability":"mutable","name":"value","nameLocation":"27995:5:15","nodeType":"VariableDeclaration","scope":14074,"src":"27978:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14070,"name":"uint256","nodeType":"ElementaryTypeName","src":"27978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14071,"nodeType":"ArrayTypeName","src":"27978:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"27977:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14083,"nodeType":"FunctionDefinition","src":"28079:77:15","nodes":[],"documentation":{"id":14075,"nodeType":"StructuredDocumentation","src":"28008:66:15","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"28088:9:15","parameters":{"id":14079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14078,"mutability":"mutable","name":"context","nameLocation":"28111:7:15","nodeType":"VariableDeclaration","scope":14083,"src":"28098:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$13292","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":14077,"nodeType":"UserDefinedTypeName","pathNode":{"id":14076,"name":"ForgeContext","nameLocations":["28098:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":13292,"src":"28098:12:15"},"referencedDeclaration":13292,"src":"28098:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$13292","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"28097:22:15"},"returnParameters":{"id":14082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14081,"mutability":"mutable","name":"result","nameLocation":"28148:6:15","nodeType":"VariableDeclaration","scope":14083,"src":"28143:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14080,"name":"bool","nodeType":"ElementaryTypeName","src":"28143:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28142:13:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14091,"nodeType":"FunctionDefinition","src":"28234:76:15","nodes":[],"documentation":{"id":14084,"nodeType":"StructuredDocumentation","src":"28162:67:15","text":"Resolves the env variable placeholders of a given input string."},"functionSelector":"ddd2128d","implemented":false,"kind":"function","modifiers":[],"name":"resolveEnv","nameLocation":"28243:10:15","parameters":{"id":14087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14086,"mutability":"mutable","name":"input","nameLocation":"28270:5:15","nodeType":"VariableDeclaration","scope":14091,"src":"28254:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14085,"name":"string","nodeType":"ElementaryTypeName","src":"28254:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28253:23:15"},"returnParameters":{"id":14090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14091,"src":"28295:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14088,"name":"string","nodeType":"ElementaryTypeName","src":"28295:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28294:15:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14099,"nodeType":"FunctionDefinition","src":"28352:70:15","nodes":[],"documentation":{"id":14092,"nodeType":"StructuredDocumentation","src":"28316:31:15","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"28361:6:15","parameters":{"id":14097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14094,"mutability":"mutable","name":"name","nameLocation":"28384:4:15","nodeType":"VariableDeclaration","scope":14099,"src":"28368:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14093,"name":"string","nodeType":"ElementaryTypeName","src":"28368:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14096,"mutability":"mutable","name":"value","nameLocation":"28406:5:15","nodeType":"VariableDeclaration","scope":14099,"src":"28390:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14095,"name":"string","nodeType":"ElementaryTypeName","src":"28390:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28367:45:15"},"returnParameters":{"id":14098,"nodeType":"ParameterList","parameters":[],"src":"28421:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14111,"nodeType":"FunctionDefinition","src":"28554:114:15","nodes":[],"documentation":{"id":14100,"nodeType":"StructuredDocumentation","src":"28458:91:15","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"28563:8:15","parameters":{"id":14103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14102,"mutability":"mutable","name":"target","nameLocation":"28580:6:15","nodeType":"VariableDeclaration","scope":14111,"src":"28572:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14101,"name":"address","nodeType":"ElementaryTypeName","src":"28572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28571:16:15"},"returnParameters":{"id":14110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14106,"mutability":"mutable","name":"readSlots","nameLocation":"28628:9:15","nodeType":"VariableDeclaration","scope":14111,"src":"28611:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28611:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14105,"nodeType":"ArrayTypeName","src":"28611:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14109,"mutability":"mutable","name":"writeSlots","nameLocation":"28656:10:15","nodeType":"VariableDeclaration","scope":14111,"src":"28639:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28639:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14108,"nodeType":"ArrayTypeName","src":"28639:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28610:57:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14119,"nodeType":"FunctionDefinition","src":"28724:74:15","nodes":[],"documentation":{"id":14112,"nodeType":"StructuredDocumentation","src":"28674:45:15","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"28733:4:15","parameters":{"id":14115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14114,"mutability":"mutable","name":"privateKey","nameLocation":"28746:10:15","nodeType":"VariableDeclaration","scope":14119,"src":"28738:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14113,"name":"uint256","nodeType":"ElementaryTypeName","src":"28738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28737:20:15"},"returnParameters":{"id":14118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14117,"mutability":"mutable","name":"keyAddr","nameLocation":"28789:7:15","nodeType":"VariableDeclaration","scope":14119,"src":"28781:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14116,"name":"address","nodeType":"ElementaryTypeName","src":"28781:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28780:17:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14136,"nodeType":"FunctionDefinition","src":"28861:173:15","nodes":[],"documentation":{"id":14120,"nodeType":"StructuredDocumentation","src":"28804:52:15","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"28870:11:15","parameters":{"id":14130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14122,"mutability":"mutable","name":"fromBlock","nameLocation":"28890:9:15","nodeType":"VariableDeclaration","scope":14136,"src":"28882:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14121,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14124,"mutability":"mutable","name":"toBlock","nameLocation":"28909:7:15","nodeType":"VariableDeclaration","scope":14136,"src":"28901:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14123,"name":"uint256","nodeType":"ElementaryTypeName","src":"28901:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14126,"mutability":"mutable","name":"target","nameLocation":"28926:6:15","nodeType":"VariableDeclaration","scope":14136,"src":"28918:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14125,"name":"address","nodeType":"ElementaryTypeName","src":"28918:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14129,"mutability":"mutable","name":"topics","nameLocation":"28953:6:15","nodeType":"VariableDeclaration","scope":14136,"src":"28934:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28934:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14128,"nodeType":"ArrayTypeName","src":"28934:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"28881:79:15"},"returnParameters":{"id":14135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14134,"mutability":"mutable","name":"logs","nameLocation":"29028:4:15","nodeType":"VariableDeclaration","scope":14136,"src":"29008:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$13333_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":14132,"nodeType":"UserDefinedTypeName","pathNode":{"id":14131,"name":"EthGetLogs","nameLocations":["29008:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":13333,"src":"29008:10:15"},"referencedDeclaration":13333,"src":"29008:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$13333_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":14133,"nodeType":"ArrayTypeName","src":"29008:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$13333_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"29007:26:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14142,"nodeType":"FunctionDefinition","src":"29371:70:15","nodes":[],"documentation":{"id":14137,"nodeType":"StructuredDocumentation","src":"29040:326:15","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"29380:14:15","parameters":{"id":14138,"nodeType":"ParameterList","parameters":[],"src":"29394:2:15"},"returnParameters":{"id":14141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14140,"mutability":"mutable","name":"blobBaseFee","nameLocation":"29428:11:15","nodeType":"VariableDeclaration","scope":14142,"src":"29420:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14139,"name":"uint256","nodeType":"ElementaryTypeName","src":"29420:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29419:21:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14148,"nodeType":"FunctionDefinition","src":"29756:65:15","nodes":[],"documentation":{"id":14143,"nodeType":"StructuredDocumentation","src":"29447:304:15","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"29765:14:15","parameters":{"id":14144,"nodeType":"ParameterList","parameters":[],"src":"29779:2:15"},"returnParameters":{"id":14147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14146,"mutability":"mutable","name":"height","nameLocation":"29813:6:15","nodeType":"VariableDeclaration","scope":14148,"src":"29805:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14145,"name":"uint256","nodeType":"ElementaryTypeName","src":"29805:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29804:16:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14154,"nodeType":"FunctionDefinition","src":"30145:71:15","nodes":[],"documentation":{"id":14149,"nodeType":"StructuredDocumentation","src":"29827:313:15","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"30154:17:15","parameters":{"id":14150,"nodeType":"ParameterList","parameters":[],"src":"30171:2:15"},"returnParameters":{"id":14153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14152,"mutability":"mutable","name":"timestamp","nameLocation":"30205:9:15","nodeType":"VariableDeclaration","scope":14154,"src":"30197:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14151,"name":"uint256","nodeType":"ElementaryTypeName","src":"30197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30196:19:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14160,"nodeType":"FunctionDefinition","src":"30609:67:15","nodes":[],"documentation":{"id":14155,"nodeType":"StructuredDocumentation","src":"30222:382:15","text":"Gets the current `block.chainid` of the currently selected environment.\n You should use this instead of `block.chainid` if you use `vm.selectFork` or `vm.createSelectFork`, as `block.chainid` could be assumed\n to be constant across a transaction, and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"3408e470","implemented":false,"kind":"function","modifiers":[],"name":"getChainId","nameLocation":"30618:10:15","parameters":{"id":14156,"nodeType":"ParameterList","parameters":[],"src":"30628:2:15"},"returnParameters":{"id":14159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14158,"mutability":"mutable","name":"blockChainId","nameLocation":"30662:12:15","nodeType":"VariableDeclaration","scope":14160,"src":"30654:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14157,"name":"uint256","nodeType":"ElementaryTypeName","src":"30654:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30653:22:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14166,"nodeType":"FunctionDefinition","src":"30824:67:15","nodes":[],"documentation":{"id":14161,"nodeType":"StructuredDocumentation","src":"30682:137:15","text":"Returns the test or script execution evm version.\n **Note:** The execution evm version is not the same as the compilation one."},"functionSelector":"aa2bb222","implemented":false,"kind":"function","modifiers":[],"name":"getEvmVersion","nameLocation":"30833:13:15","parameters":{"id":14162,"nodeType":"ParameterList","parameters":[],"src":"30846:2:15"},"returnParameters":{"id":14165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14164,"mutability":"mutable","name":"evm","nameLocation":"30886:3:15","nodeType":"VariableDeclaration","scope":14166,"src":"30872:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14163,"name":"string","nodeType":"ElementaryTypeName","src":"30872:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30871:19:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14180,"nodeType":"FunctionDefinition","src":"30984:159:15","nodes":[],"documentation":{"id":14167,"nodeType":"StructuredDocumentation","src":"30897:82:15","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"30993:24:15","parameters":{"id":14172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14169,"mutability":"mutable","name":"target","nameLocation":"31026:6:15","nodeType":"VariableDeclaration","scope":14180,"src":"31018:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14168,"name":"address","nodeType":"ElementaryTypeName","src":"31018:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14171,"mutability":"mutable","name":"elementSlot","nameLocation":"31042:11:15","nodeType":"VariableDeclaration","scope":14180,"src":"31034:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31034:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31017:37:15"},"returnParameters":{"id":14179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14174,"mutability":"mutable","name":"found","nameLocation":"31107:5:15","nodeType":"VariableDeclaration","scope":14180,"src":"31102:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14173,"name":"bool","nodeType":"ElementaryTypeName","src":"31102:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14176,"mutability":"mutable","name":"key","nameLocation":"31122:3:15","nodeType":"VariableDeclaration","scope":14180,"src":"31114:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31114:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14178,"mutability":"mutable","name":"parent","nameLocation":"31135:6:15","nodeType":"VariableDeclaration","scope":14180,"src":"31127:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31127:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31101:41:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14190,"nodeType":"FunctionDefinition","src":"31240:102:15","nodes":[],"documentation":{"id":14181,"nodeType":"StructuredDocumentation","src":"31149:86:15","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"31249:16:15","parameters":{"id":14186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14183,"mutability":"mutable","name":"target","nameLocation":"31274:6:15","nodeType":"VariableDeclaration","scope":14190,"src":"31266:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14182,"name":"address","nodeType":"ElementaryTypeName","src":"31266:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14185,"mutability":"mutable","name":"mappingSlot","nameLocation":"31290:11:15","nodeType":"VariableDeclaration","scope":14190,"src":"31282:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31282:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31265:37:15"},"returnParameters":{"id":14189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14188,"mutability":"mutable","name":"length","nameLocation":"31334:6:15","nodeType":"VariableDeclaration","scope":14190,"src":"31326:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14187,"name":"uint256","nodeType":"ElementaryTypeName","src":"31326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31325:16:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14202,"nodeType":"FunctionDefinition","src":"31546:114:15","nodes":[],"documentation":{"id":14191,"nodeType":"StructuredDocumentation","src":"31348:193:15","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"31555:16:15","parameters":{"id":14198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14193,"mutability":"mutable","name":"target","nameLocation":"31580:6:15","nodeType":"VariableDeclaration","scope":14202,"src":"31572:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14192,"name":"address","nodeType":"ElementaryTypeName","src":"31572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14195,"mutability":"mutable","name":"mappingSlot","nameLocation":"31596:11:15","nodeType":"VariableDeclaration","scope":14202,"src":"31588:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31588:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14197,"mutability":"mutable","name":"idx","nameLocation":"31617:3:15","nodeType":"VariableDeclaration","scope":14202,"src":"31609:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14196,"name":"uint256","nodeType":"ElementaryTypeName","src":"31609:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31571:50:15"},"returnParameters":{"id":14201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14200,"mutability":"mutable","name":"value","nameLocation":"31653:5:15","nodeType":"VariableDeclaration","scope":14202,"src":"31645:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31645:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31644:15:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14210,"nodeType":"FunctionDefinition","src":"31704:72:15","nodes":[],"documentation":{"id":14203,"nodeType":"StructuredDocumentation","src":"31666:33:15","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"31713:8:15","parameters":{"id":14206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14205,"mutability":"mutable","name":"account","nameLocation":"31730:7:15","nodeType":"VariableDeclaration","scope":14210,"src":"31722:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14204,"name":"address","nodeType":"ElementaryTypeName","src":"31722:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31721:17:15"},"returnParameters":{"id":14209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14208,"mutability":"mutable","name":"nonce","nameLocation":"31769:5:15","nodeType":"VariableDeclaration","scope":14210,"src":"31762:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14207,"name":"uint64","nodeType":"ElementaryTypeName","src":"31762:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"31761:14:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14219,"nodeType":"FunctionDefinition","src":"31819:79:15","nodes":[],"documentation":{"id":14211,"nodeType":"StructuredDocumentation","src":"31782:32:15","text":"Get the nonce of a `Wallet`."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"31828:8:15","parameters":{"id":14215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14214,"mutability":"mutable","name":"wallet","nameLocation":"31853:6:15","nodeType":"VariableDeclaration","scope":14219,"src":"31837:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":14213,"nodeType":"UserDefinedTypeName","pathNode":{"id":14212,"name":"Wallet","nameLocations":["31837:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13371,"src":"31837:6:15"},"referencedDeclaration":13371,"src":"31837:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13371_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"31836:24:15"},"returnParameters":{"id":14218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14217,"mutability":"mutable","name":"nonce","nameLocation":"31891:5:15","nodeType":"VariableDeclaration","scope":14219,"src":"31884:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14216,"name":"uint64","nodeType":"ElementaryTypeName","src":"31884:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"31883:14:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14227,"nodeType":"FunctionDefinition","src":"32062:95:15","nodes":[],"documentation":{"id":14220,"nodeType":"StructuredDocumentation","src":"31904:153:15","text":"Gets the RLP encoded block header for a given block number.\n Returns the block header in the same format as `cast block <block_number> --raw`."},"functionSelector":"2c667606","implemented":false,"kind":"function","modifiers":[],"name":"getRawBlockHeader","nameLocation":"32071:17:15","parameters":{"id":14223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14222,"mutability":"mutable","name":"blockNumber","nameLocation":"32097:11:15","nodeType":"VariableDeclaration","scope":14227,"src":"32089:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14221,"name":"uint256","nodeType":"ElementaryTypeName","src":"32089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32088:21:15"},"returnParameters":{"id":14226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14225,"mutability":"mutable","name":"rlpHeader","nameLocation":"32146:9:15","nodeType":"VariableDeclaration","scope":14227,"src":"32133:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14224,"name":"bytes","nodeType":"ElementaryTypeName","src":"32133:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32132:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14235,"nodeType":"FunctionDefinition","src":"32199:69:15","nodes":[],"documentation":{"id":14228,"nodeType":"StructuredDocumentation","src":"32163:31:15","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"32208:15:15","parameters":{"id":14229,"nodeType":"ParameterList","parameters":[],"src":"32223:2:15"},"returnParameters":{"id":14234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14233,"mutability":"mutable","name":"logs","nameLocation":"32262:4:15","nodeType":"VariableDeclaration","scope":14235,"src":"32249:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$13306_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":14231,"nodeType":"UserDefinedTypeName","pathNode":{"id":14230,"name":"Log","nameLocations":["32249:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13306,"src":"32249:3:15"},"referencedDeclaration":13306,"src":"32249:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$13306_storage_ptr","typeString":"struct VmSafe.Log"}},"id":14232,"nodeType":"ArrayTypeName","src":"32249:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$13306_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"32248:19:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14241,"nodeType":"FunctionDefinition","src":"32353:67:15","nodes":[],"documentation":{"id":14236,"nodeType":"StructuredDocumentation","src":"32274:74:15","text":"Returns state diffs from current `vm.startStateDiffRecording` session."},"functionSelector":"80df01cc","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiff","nameLocation":"32362:12:15","parameters":{"id":14237,"nodeType":"ParameterList","parameters":[],"src":"32374:2:15"},"returnParameters":{"id":14240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14239,"mutability":"mutable","name":"diff","nameLocation":"32414:4:15","nodeType":"VariableDeclaration","scope":14241,"src":"32400:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14238,"name":"string","nodeType":"ElementaryTypeName","src":"32400:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32399:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14247,"nodeType":"FunctionDefinition","src":"32521:71:15","nodes":[],"documentation":{"id":14242,"nodeType":"StructuredDocumentation","src":"32426:90:15","text":"Returns state diffs from current `vm.startStateDiffRecording` session, in json format."},"functionSelector":"f54fe009","implemented":false,"kind":"function","modifiers":[],"name":"getStateDiffJson","nameLocation":"32530:16:15","parameters":{"id":14243,"nodeType":"ParameterList","parameters":[],"src":"32546:2:15"},"returnParameters":{"id":14246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14245,"mutability":"mutable","name":"diff","nameLocation":"32586:4:15","nodeType":"VariableDeclaration","scope":14247,"src":"32572:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14244,"name":"string","nodeType":"ElementaryTypeName","src":"32572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32571:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14255,"nodeType":"FunctionDefinition","src":"32692:93:15","nodes":[],"documentation":{"id":14248,"nodeType":"StructuredDocumentation","src":"32598:89:15","text":"Returns an array of `StorageAccess` from current `vm.stateStateDiffRecording` session"},"functionSelector":"2899b1d0","implemented":false,"kind":"function","modifiers":[],"name":"getStorageAccesses","nameLocation":"32701:18:15","parameters":{"id":14249,"nodeType":"ParameterList","parameters":[],"src":"32719:2:15"},"returnParameters":{"id":14254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14253,"mutability":"mutable","name":"storageAccesses","nameLocation":"32768:15:15","nodeType":"VariableDeclaration","scope":14255,"src":"32745:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13445_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":14251,"nodeType":"UserDefinedTypeName","pathNode":{"id":14250,"name":"StorageAccess","nameLocations":["32745:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13445,"src":"32745:13:15"},"referencedDeclaration":13445,"src":"32745:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$13445_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":14252,"nodeType":"ArrayTypeName","src":"32745:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13445_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"}],"src":"32744:40:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14266,"nodeType":"FunctionDefinition","src":"32869:142:15","nodes":[],"documentation":{"id":14256,"nodeType":"StructuredDocumentation","src":"32791:73:15","text":"Returns an array of storage slots occupied by the specified variable."},"functionSelector":"efa136d9","implemented":false,"kind":"function","modifiers":[],"name":"getStorageSlots","nameLocation":"32878:15:15","parameters":{"id":14261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14258,"mutability":"mutable","name":"target","nameLocation":"32902:6:15","nodeType":"VariableDeclaration","scope":14266,"src":"32894:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14257,"name":"address","nodeType":"ElementaryTypeName","src":"32894:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14260,"mutability":"mutable","name":"variableName","nameLocation":"32926:12:15","nodeType":"VariableDeclaration","scope":14266,"src":"32910:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14259,"name":"string","nodeType":"ElementaryTypeName","src":"32910:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32893:46:15"},"returnParameters":{"id":14265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14264,"mutability":"mutable","name":"slots","nameLocation":"33004:5:15","nodeType":"VariableDeclaration","scope":14266,"src":"32987:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14262,"name":"uint256","nodeType":"ElementaryTypeName","src":"32987:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14263,"nodeType":"ArrayTypeName","src":"32987:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32986:24:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14273,"nodeType":"FunctionDefinition","src":"33089:62:15","nodes":[],"documentation":{"id":14267,"nodeType":"StructuredDocumentation","src":"33017:67:15","text":"Gets the gas used in the last call from the callee perspective."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"33098:11:15","parameters":{"id":14268,"nodeType":"ParameterList","parameters":[],"src":"33109:2:15"},"returnParameters":{"id":14272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14271,"mutability":"mutable","name":"gas","nameLocation":"33146:3:15","nodeType":"VariableDeclaration","scope":14273,"src":"33135:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13457_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":14270,"nodeType":"UserDefinedTypeName","pathNode":{"id":14269,"name":"Gas","nameLocations":["33135:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13457,"src":"33135:3:15"},"referencedDeclaration":13457,"src":"33135:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13457_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"33134:16:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14283,"nodeType":"FunctionDefinition","src":"33203:81:15","nodes":[],"documentation":{"id":14274,"nodeType":"StructuredDocumentation","src":"33157:41:15","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"33212:4:15","parameters":{"id":14279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14276,"mutability":"mutable","name":"target","nameLocation":"33225:6:15","nodeType":"VariableDeclaration","scope":14283,"src":"33217:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14275,"name":"address","nodeType":"ElementaryTypeName","src":"33217:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14278,"mutability":"mutable","name":"slot","nameLocation":"33241:4:15","nodeType":"VariableDeclaration","scope":14283,"src":"33233:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33233:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"33216:30:15"},"returnParameters":{"id":14282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14281,"mutability":"mutable","name":"data","nameLocation":"33278:4:15","nodeType":"VariableDeclaration","scope":14283,"src":"33270:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"33270:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"33269:14:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14287,"nodeType":"FunctionDefinition","src":"33375:37:15","nodes":[],"documentation":{"id":14284,"nodeType":"StructuredDocumentation","src":"33290:80:15","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"33384:16:15","parameters":{"id":14285,"nodeType":"ParameterList","parameters":[],"src":"33400:2:15"},"returnParameters":{"id":14286,"nodeType":"ParameterList","parameters":[],"src":"33411:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14291,"nodeType":"FunctionDefinition","src":"33572:27:15","nodes":[],"documentation":{"id":14288,"nodeType":"StructuredDocumentation","src":"33418:149:15","text":"Records all storage reads and writes. Use `accesses` to get the recorded data.\n Subsequent calls to `record` will clear the previous data."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"33581:6:15","parameters":{"id":14289,"nodeType":"ParameterList","parameters":[],"src":"33587:2:15"},"returnParameters":{"id":14290,"nodeType":"ParameterList","parameters":[],"src":"33598:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14295,"nodeType":"FunctionDefinition","src":"33646:31:15","nodes":[],"documentation":{"id":14292,"nodeType":"StructuredDocumentation","src":"33605:36:15","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"33655:10:15","parameters":{"id":14293,"nodeType":"ParameterList","parameters":[],"src":"33665:2:15"},"returnParameters":{"id":14294,"nodeType":"ParameterList","parameters":[],"src":"33676:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14299,"nodeType":"FunctionDefinition","src":"33748:37:15","nodes":[],"documentation":{"id":14296,"nodeType":"StructuredDocumentation","src":"33683:60:15","text":"Reset gas metering (i.e. gas usage is set to gas limit)."},"functionSelector":"be367dd3","implemented":false,"kind":"function","modifiers":[],"name":"resetGasMetering","nameLocation":"33757:16:15","parameters":{"id":14297,"nodeType":"ParameterList","parameters":[],"src":"33773:2:15"},"returnParameters":{"id":14298,"nodeType":"ParameterList","parameters":[],"src":"33784:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14303,"nodeType":"FunctionDefinition","src":"33875:38:15","nodes":[],"documentation":{"id":14300,"nodeType":"StructuredDocumentation","src":"33791:79:15","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"33884:17:15","parameters":{"id":14301,"nodeType":"ParameterList","parameters":[],"src":"33901:2:15"},"returnParameters":{"id":14302,"nodeType":"ParameterList","parameters":[],"src":"33912:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14313,"nodeType":"FunctionDefinition","src":"33990:98:15","nodes":[],"documentation":{"id":14304,"nodeType":"StructuredDocumentation","src":"33919:66:15","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"33999:3:15","parameters":{"id":14309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14306,"mutability":"mutable","name":"method","nameLocation":"34019:6:15","nodeType":"VariableDeclaration","scope":14313,"src":"34003:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14305,"name":"string","nodeType":"ElementaryTypeName","src":"34003:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14308,"mutability":"mutable","name":"params","nameLocation":"34043:6:15","nodeType":"VariableDeclaration","scope":14313,"src":"34027:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14307,"name":"string","nodeType":"ElementaryTypeName","src":"34027:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34002:48:15"},"returnParameters":{"id":14312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14311,"mutability":"mutable","name":"data","nameLocation":"34082:4:15","nodeType":"VariableDeclaration","scope":14313,"src":"34069:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14310,"name":"bytes","nodeType":"ElementaryTypeName","src":"34069:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34068:19:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14325,"nodeType":"FunctionDefinition","src":"34163:142:15","nodes":[],"documentation":{"id":14314,"nodeType":"StructuredDocumentation","src":"34094:64:15","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"34172:3:15","parameters":{"id":14321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14316,"mutability":"mutable","name":"urlOrAlias","nameLocation":"34192:10:15","nodeType":"VariableDeclaration","scope":14325,"src":"34176:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14315,"name":"string","nodeType":"ElementaryTypeName","src":"34176:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14318,"mutability":"mutable","name":"method","nameLocation":"34220:6:15","nodeType":"VariableDeclaration","scope":14325,"src":"34204:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14317,"name":"string","nodeType":"ElementaryTypeName","src":"34204:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14320,"mutability":"mutable","name":"params","nameLocation":"34244:6:15","nodeType":"VariableDeclaration","scope":14325,"src":"34228:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14319,"name":"string","nodeType":"ElementaryTypeName","src":"34228:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34175:76:15"},"returnParameters":{"id":14324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14323,"mutability":"mutable","name":"data","nameLocation":"34299:4:15","nodeType":"VariableDeclaration","scope":14325,"src":"34286:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14322,"name":"bytes","nodeType":"ElementaryTypeName","src":"34286:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34285:19:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14331,"nodeType":"FunctionDefinition","src":"34480:53:15","nodes":[],"documentation":{"id":14326,"nodeType":"StructuredDocumentation","src":"34311:164:15","text":"Set the exact test or script execution evm version, e.g. `berlin`, `cancun`.\n **Note:** The execution evm version is not the same as the compilation one."},"functionSelector":"43179f5a","implemented":false,"kind":"function","modifiers":[],"name":"setEvmVersion","nameLocation":"34489:13:15","parameters":{"id":14329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14328,"mutability":"mutable","name":"evm","nameLocation":"34519:3:15","nodeType":"VariableDeclaration","scope":14331,"src":"34503:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14327,"name":"string","nodeType":"ElementaryTypeName","src":"34503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34502:21:15"},"returnParameters":{"id":14330,"nodeType":"ParameterList","parameters":[],"src":"34532:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14335,"nodeType":"FunctionDefinition","src":"34587:45:15","nodes":[],"documentation":{"id":14332,"nodeType":"StructuredDocumentation","src":"34539:43:15","text":"Records the debug trace during the run."},"functionSelector":"419c8832","implemented":false,"kind":"function","modifiers":[],"name":"startDebugTraceRecording","nameLocation":"34596:24:15","parameters":{"id":14333,"nodeType":"ParameterList","parameters":[],"src":"34620:2:15"},"returnParameters":{"id":14334,"nodeType":"ParameterList","parameters":[],"src":"34631:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14339,"nodeType":"FunctionDefinition","src":"34700:42:15","nodes":[],"documentation":{"id":14336,"nodeType":"StructuredDocumentation","src":"34638:57:15","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"34709:21:15","parameters":{"id":14337,"nodeType":"ParameterList","parameters":[],"src":"34730:2:15"},"returnParameters":{"id":14338,"nodeType":"ParameterList","parameters":[],"src":"34741:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14343,"nodeType":"FunctionDefinition","src":"34886:44:15","nodes":[],"documentation":{"id":14340,"nodeType":"StructuredDocumentation","src":"34748:133:15","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"34895:23:15","parameters":{"id":14341,"nodeType":"ParameterList","parameters":[],"src":"34918:2:15"},"returnParameters":{"id":14342,"nodeType":"ParameterList","parameters":[],"src":"34929:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14351,"nodeType":"FunctionDefinition","src":"35009:87:15","nodes":[],"documentation":{"id":14344,"nodeType":"StructuredDocumentation","src":"34936:68:15","text":"Stop debug trace recording and returns the recorded debug trace."},"functionSelector":"ced398a2","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnDebugTraceRecording","nameLocation":"35018:32:15","parameters":{"id":14345,"nodeType":"ParameterList","parameters":[],"src":"35050:2:15"},"returnParameters":{"id":14350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14349,"mutability":"mutable","name":"step","nameLocation":"35090:4:15","nodeType":"VariableDeclaration","scope":14351,"src":"35071:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$13472_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DebugStep[]"},"typeName":{"baseType":{"id":14347,"nodeType":"UserDefinedTypeName","pathNode":{"id":14346,"name":"DebugStep","nameLocations":["35071:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13472,"src":"35071:9:15"},"referencedDeclaration":13472,"src":"35071:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_DebugStep_$13472_storage_ptr","typeString":"struct VmSafe.DebugStep"}},"id":14348,"nodeType":"ArrayTypeName","src":"35071:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DebugStep_$13472_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DebugStep[]"}},"visibility":"internal"}],"src":"35070:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14359,"nodeType":"FunctionDefinition","src":"35204:92:15","nodes":[],"documentation":{"id":14352,"nodeType":"StructuredDocumentation","src":"35102:97:15","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"35213:22:15","parameters":{"id":14353,"nodeType":"ParameterList","parameters":[],"src":"35235:2:15"},"returnParameters":{"id":14358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14357,"mutability":"mutable","name":"accountAccesses","nameLocation":"35279:15:15","nodeType":"VariableDeclaration","scope":14359,"src":"35256:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13431_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":14355,"nodeType":"UserDefinedTypeName","pathNode":{"id":14354,"name":"AccountAccess","nameLocations":["35256:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13431,"src":"35256:13:15"},"referencedDeclaration":13431,"src":"35256:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$13431_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":14356,"nodeType":"ArrayTypeName","src":"35256:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13431_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"35255:40:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14363,"nodeType":"FunctionDefinition","src":"35392:41:15","nodes":[],"documentation":{"id":14360,"nodeType":"StructuredDocumentation","src":"35302:85:15","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"35401:20:15","parameters":{"id":14361,"nodeType":"ParameterList","parameters":[],"src":"35421:2:15"},"returnParameters":{"id":14362,"nodeType":"ParameterList","parameters":[],"src":"35432:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14367,"nodeType":"FunctionDefinition","src":"35489:31:15","nodes":[],"documentation":{"id":14364,"nodeType":"StructuredDocumentation","src":"35439:45:15","text":"Stops recording storage reads and writes."},"functionSelector":"996be76d","implemented":false,"kind":"function","modifiers":[],"name":"stopRecord","nameLocation":"35498:10:15","parameters":{"id":14365,"nodeType":"ParameterList","parameters":[],"src":"35508:2:15"},"returnParameters":{"id":14366,"nodeType":"ParameterList","parameters":[],"src":"35519:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14373,"nodeType":"FunctionDefinition","src":"35719:50:15","nodes":[],"documentation":{"id":14368,"nodeType":"StructuredDocumentation","src":"35563:151:15","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"35728:9:15","parameters":{"id":14371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14370,"mutability":"mutable","name":"path","nameLocation":"35754:4:15","nodeType":"VariableDeclaration","scope":14373,"src":"35738:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14369,"name":"string","nodeType":"ElementaryTypeName","src":"35738:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35737:22:15"},"returnParameters":{"id":14372,"nodeType":"ParameterList","parameters":[],"src":"35768:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14383,"nodeType":"FunctionDefinition","src":"36084:93:15","nodes":[],"documentation":{"id":14374,"nodeType":"StructuredDocumentation","src":"35775:304:15","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"36093:8:15","parameters":{"id":14379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14376,"mutability":"mutable","name":"from","nameLocation":"36118:4:15","nodeType":"VariableDeclaration","scope":14383,"src":"36102:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14375,"name":"string","nodeType":"ElementaryTypeName","src":"36102:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14378,"mutability":"mutable","name":"to","nameLocation":"36140:2:15","nodeType":"VariableDeclaration","scope":14383,"src":"36124:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14377,"name":"string","nodeType":"ElementaryTypeName","src":"36124:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36101:42:15"},"returnParameters":{"id":14382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14381,"mutability":"mutable","name":"copied","nameLocation":"36169:6:15","nodeType":"VariableDeclaration","scope":14383,"src":"36162:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14380,"name":"uint64","nodeType":"ElementaryTypeName","src":"36162:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"36161:15:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14391,"nodeType":"FunctionDefinition","src":"36582:66:15","nodes":[],"documentation":{"id":14384,"nodeType":"StructuredDocumentation","src":"36183:394:15","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"36591:9:15","parameters":{"id":14389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14386,"mutability":"mutable","name":"path","nameLocation":"36617:4:15","nodeType":"VariableDeclaration","scope":14391,"src":"36601:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14385,"name":"string","nodeType":"ElementaryTypeName","src":"36601:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14388,"mutability":"mutable","name":"recursive","nameLocation":"36628:9:15","nodeType":"VariableDeclaration","scope":14391,"src":"36623:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14387,"name":"bool","nodeType":"ElementaryTypeName","src":"36623:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36600:38:15"},"returnParameters":{"id":14390,"nodeType":"ParameterList","parameters":[],"src":"36647:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14399,"nodeType":"FunctionDefinition","src":"36878:93:15","nodes":[],"documentation":{"id":14392,"nodeType":"StructuredDocumentation","src":"36654:219:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"36887:10:15","parameters":{"id":14395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14394,"mutability":"mutable","name":"artifactPath","nameLocation":"36914:12:15","nodeType":"VariableDeclaration","scope":14399,"src":"36898:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14393,"name":"string","nodeType":"ElementaryTypeName","src":"36898:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36897:30:15"},"returnParameters":{"id":14398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14397,"mutability":"mutable","name":"deployedAddress","nameLocation":"36954:15:15","nodeType":"VariableDeclaration","scope":14399,"src":"36946:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14396,"name":"address","nodeType":"ElementaryTypeName","src":"36946:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36945:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14409,"nodeType":"FunctionDefinition","src":"37265:141:15","nodes":[],"documentation":{"id":14400,"nodeType":"StructuredDocumentation","src":"36977:283:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37274:10:15","parameters":{"id":14405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14402,"mutability":"mutable","name":"artifactPath","nameLocation":"37301:12:15","nodeType":"VariableDeclaration","scope":14409,"src":"37285:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14401,"name":"string","nodeType":"ElementaryTypeName","src":"37285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14404,"mutability":"mutable","name":"constructorArgs","nameLocation":"37330:15:15","nodeType":"VariableDeclaration","scope":14409,"src":"37315:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14403,"name":"bytes","nodeType":"ElementaryTypeName","src":"37315:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37284:62:15"},"returnParameters":{"id":14408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14407,"mutability":"mutable","name":"deployedAddress","nameLocation":"37389:15:15","nodeType":"VariableDeclaration","scope":14409,"src":"37381:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14406,"name":"address","nodeType":"ElementaryTypeName","src":"37381:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37380:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14419,"nodeType":"FunctionDefinition","src":"37678:108:15","nodes":[],"documentation":{"id":14410,"nodeType":"StructuredDocumentation","src":"37412:261:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"0af6a701","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"37687:10:15","parameters":{"id":14415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14412,"mutability":"mutable","name":"artifactPath","nameLocation":"37714:12:15","nodeType":"VariableDeclaration","scope":14419,"src":"37698:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14411,"name":"string","nodeType":"ElementaryTypeName","src":"37698:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14414,"mutability":"mutable","name":"value","nameLocation":"37736:5:15","nodeType":"VariableDeclaration","scope":14419,"src":"37728:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14413,"name":"uint256","nodeType":"ElementaryTypeName","src":"37728:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37697:45:15"},"returnParameters":{"id":14418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14417,"mutability":"mutable","name":"deployedAddress","nameLocation":"37769:15:15","nodeType":"VariableDeclaration","scope":14419,"src":"37761:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14416,"name":"address","nodeType":"ElementaryTypeName","src":"37761:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37760:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14431,"nodeType":"FunctionDefinition","src":"38096:156:15","nodes":[],"documentation":{"id":14420,"nodeType":"StructuredDocumentation","src":"37792:299:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"ff5d64e4","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"38105:10:15","parameters":{"id":14427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14422,"mutability":"mutable","name":"artifactPath","nameLocation":"38132:12:15","nodeType":"VariableDeclaration","scope":14431,"src":"38116:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14421,"name":"string","nodeType":"ElementaryTypeName","src":"38116:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14424,"mutability":"mutable","name":"constructorArgs","nameLocation":"38161:15:15","nodeType":"VariableDeclaration","scope":14431,"src":"38146:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14423,"name":"bytes","nodeType":"ElementaryTypeName","src":"38146:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14426,"mutability":"mutable","name":"value","nameLocation":"38186:5:15","nodeType":"VariableDeclaration","scope":14431,"src":"38178:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14425,"name":"uint256","nodeType":"ElementaryTypeName","src":"38178:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38115:77:15"},"returnParameters":{"id":14430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14429,"mutability":"mutable","name":"deployedAddress","nameLocation":"38235:15:15","nodeType":"VariableDeclaration","scope":14431,"src":"38227:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14428,"name":"address","nodeType":"ElementaryTypeName","src":"38227:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38226:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14441,"nodeType":"FunctionDefinition","src":"38506:107:15","nodes":[],"documentation":{"id":14432,"nodeType":"StructuredDocumentation","src":"38258:243:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"17ab1d79","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"38515:10:15","parameters":{"id":14437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14434,"mutability":"mutable","name":"artifactPath","nameLocation":"38542:12:15","nodeType":"VariableDeclaration","scope":14441,"src":"38526:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14433,"name":"string","nodeType":"ElementaryTypeName","src":"38526:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14436,"mutability":"mutable","name":"salt","nameLocation":"38564:4:15","nodeType":"VariableDeclaration","scope":14441,"src":"38556:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"38556:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"38525:44:15"},"returnParameters":{"id":14440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14439,"mutability":"mutable","name":"deployedAddress","nameLocation":"38596:15:15","nodeType":"VariableDeclaration","scope":14441,"src":"38588:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14438,"name":"address","nodeType":"ElementaryTypeName","src":"38588:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38587:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14453,"nodeType":"FunctionDefinition","src":"38931:155:15","nodes":[],"documentation":{"id":14442,"nodeType":"StructuredDocumentation","src":"38619:307:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments."},"functionSelector":"016155bf","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"38940:10:15","parameters":{"id":14449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14444,"mutability":"mutable","name":"artifactPath","nameLocation":"38967:12:15","nodeType":"VariableDeclaration","scope":14453,"src":"38951:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14443,"name":"string","nodeType":"ElementaryTypeName","src":"38951:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14446,"mutability":"mutable","name":"constructorArgs","nameLocation":"38996:15:15","nodeType":"VariableDeclaration","scope":14453,"src":"38981:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14445,"name":"bytes","nodeType":"ElementaryTypeName","src":"38981:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14448,"mutability":"mutable","name":"salt","nameLocation":"39021:4:15","nodeType":"VariableDeclaration","scope":14453,"src":"39013:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39013:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"38950:76:15"},"returnParameters":{"id":14452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14451,"mutability":"mutable","name":"deployedAddress","nameLocation":"39069:15:15","nodeType":"VariableDeclaration","scope":14453,"src":"39061:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14450,"name":"address","nodeType":"ElementaryTypeName","src":"39061:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39060:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14465,"nodeType":"FunctionDefinition","src":"39382:138:15","nodes":[],"documentation":{"id":14454,"nodeType":"StructuredDocumentation","src":"39092:285:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts `msg.value`."},"functionSelector":"002cb687","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"39391:10:15","parameters":{"id":14461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14456,"mutability":"mutable","name":"artifactPath","nameLocation":"39418:12:15","nodeType":"VariableDeclaration","scope":14465,"src":"39402:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14455,"name":"string","nodeType":"ElementaryTypeName","src":"39402:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14458,"mutability":"mutable","name":"value","nameLocation":"39440:5:15","nodeType":"VariableDeclaration","scope":14465,"src":"39432:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14457,"name":"uint256","nodeType":"ElementaryTypeName","src":"39432:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14460,"mutability":"mutable","name":"salt","nameLocation":"39455:4:15","nodeType":"VariableDeclaration","scope":14465,"src":"39447:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39447:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39401:59:15"},"returnParameters":{"id":14464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14463,"mutability":"mutable","name":"deployedAddress","nameLocation":"39503:15:15","nodeType":"VariableDeclaration","scope":14465,"src":"39495:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14462,"name":"address","nodeType":"ElementaryTypeName","src":"39495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39494:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14479,"nodeType":"FunctionDefinition","src":"39854:170:15","nodes":[],"documentation":{"id":14466,"nodeType":"StructuredDocumentation","src":"39526:323:15","text":"Deploys a contract from an artifact file, using the CREATE2 salt. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionally accepts abi-encoded constructor arguments and `msg.value`."},"functionSelector":"3aa773ea","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"39863:10:15","parameters":{"id":14475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14468,"mutability":"mutable","name":"artifactPath","nameLocation":"39890:12:15","nodeType":"VariableDeclaration","scope":14479,"src":"39874:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14467,"name":"string","nodeType":"ElementaryTypeName","src":"39874:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14470,"mutability":"mutable","name":"constructorArgs","nameLocation":"39919:15:15","nodeType":"VariableDeclaration","scope":14479,"src":"39904:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14469,"name":"bytes","nodeType":"ElementaryTypeName","src":"39904:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14472,"mutability":"mutable","name":"value","nameLocation":"39944:5:15","nodeType":"VariableDeclaration","scope":14479,"src":"39936:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14471,"name":"uint256","nodeType":"ElementaryTypeName","src":"39936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14474,"mutability":"mutable","name":"salt","nameLocation":"39959:4:15","nodeType":"VariableDeclaration","scope":14479,"src":"39951:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39951:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39873:91:15"},"returnParameters":{"id":14478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14477,"mutability":"mutable","name":"deployedAddress","nameLocation":"40007:15:15","nodeType":"VariableDeclaration","scope":14479,"src":"39999:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14476,"name":"address","nodeType":"ElementaryTypeName","src":"39999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39998:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14487,"nodeType":"FunctionDefinition","src":"40119:74:15","nodes":[],"documentation":{"id":14480,"nodeType":"StructuredDocumentation","src":"40030:84:15","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"40128:6:15","parameters":{"id":14483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14482,"mutability":"mutable","name":"path","nameLocation":"40151:4:15","nodeType":"VariableDeclaration","scope":14487,"src":"40135:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14481,"name":"string","nodeType":"ElementaryTypeName","src":"40135:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40134:22:15"},"returnParameters":{"id":14486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14485,"mutability":"mutable","name":"result","nameLocation":"40185:6:15","nodeType":"VariableDeclaration","scope":14487,"src":"40180:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14484,"name":"bool","nodeType":"ElementaryTypeName","src":"40180:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"40179:13:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14496,"nodeType":"FunctionDefinition","src":"40258:84:15","nodes":[],"documentation":{"id":14488,"nodeType":"StructuredDocumentation","src":"40199:54:15","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"40267:3:15","parameters":{"id":14492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14491,"mutability":"mutable","name":"commandInput","nameLocation":"40289:12:15","nodeType":"VariableDeclaration","scope":14496,"src":"40271:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14489,"name":"string","nodeType":"ElementaryTypeName","src":"40271:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14490,"nodeType":"ArrayTypeName","src":"40271:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40270:32:15"},"returnParameters":{"id":14495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14494,"mutability":"mutable","name":"result","nameLocation":"40334:6:15","nodeType":"VariableDeclaration","scope":14496,"src":"40321:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14493,"name":"bytes","nodeType":"ElementaryTypeName","src":"40321:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40320:21:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14505,"nodeType":"FunctionDefinition","src":"40441:93:15","nodes":[],"documentation":{"id":14497,"nodeType":"StructuredDocumentation","src":"40348:88:15","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"40450:10:15","parameters":{"id":14500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14499,"mutability":"mutable","name":"path","nameLocation":"40477:4:15","nodeType":"VariableDeclaration","scope":14505,"src":"40461:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14498,"name":"string","nodeType":"ElementaryTypeName","src":"40461:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40460:22:15"},"returnParameters":{"id":14504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14503,"mutability":"mutable","name":"metadata","nameLocation":"40524:8:15","nodeType":"VariableDeclaration","scope":14505,"src":"40506:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13361_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":14502,"nodeType":"UserDefinedTypeName","pathNode":{"id":14501,"name":"FsMetadata","nameLocations":["40506:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":13361,"src":"40506:10:15"},"referencedDeclaration":13361,"src":"40506:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13361_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"40505:28:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14513,"nodeType":"FunctionDefinition","src":"40603:95:15","nodes":[],"documentation":{"id":14506,"nodeType":"StructuredDocumentation","src":"40540:58:15","text":"Gets the artifact path from code (aka. creation code)."},"functionSelector":"eb74848c","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByCode","nameLocation":"40612:21:15","parameters":{"id":14509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14508,"mutability":"mutable","name":"code","nameLocation":"40649:4:15","nodeType":"VariableDeclaration","scope":14513,"src":"40634:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14507,"name":"bytes","nodeType":"ElementaryTypeName","src":"40634:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40633:21:15"},"returnParameters":{"id":14512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14511,"mutability":"mutable","name":"path","nameLocation":"40692:4:15","nodeType":"VariableDeclaration","scope":14513,"src":"40678:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14510,"name":"string","nodeType":"ElementaryTypeName","src":"40678:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40677:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14521,"nodeType":"FunctionDefinition","src":"40775:111:15","nodes":[],"documentation":{"id":14514,"nodeType":"StructuredDocumentation","src":"40704:66:15","text":"Gets the artifact path from deployed code (aka. runtime code)."},"functionSelector":"6d853ba5","implemented":false,"kind":"function","modifiers":[],"name":"getArtifactPathByDeployedCode","nameLocation":"40784:29:15","parameters":{"id":14517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14516,"mutability":"mutable","name":"deployedCode","nameLocation":"40829:12:15","nodeType":"VariableDeclaration","scope":14521,"src":"40814:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14515,"name":"bytes","nodeType":"ElementaryTypeName","src":"40814:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40813:29:15"},"returnParameters":{"id":14520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14519,"mutability":"mutable","name":"path","nameLocation":"40880:4:15","nodeType":"VariableDeclaration","scope":14521,"src":"40866:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14518,"name":"string","nodeType":"ElementaryTypeName","src":"40866:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40865:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14535,"nodeType":"FunctionDefinition","src":"41181:166:15","nodes":[],"documentation":{"id":14522,"nodeType":"StructuredDocumentation","src":"40892:284:15","text":"Returns the most recent broadcast for the given contract on `chainId` matching `txType`.\n For example:\n The most recent deployment can be fetched by passing `txType` as `CREATE` or `CREATE2`.\n The most recent call can be fetched by passing `txType` as `CALL`."},"functionSelector":"3dc90cb3","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcast","nameLocation":"41190:12:15","parameters":{"id":14530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14524,"mutability":"mutable","name":"contractName","nameLocation":"41219:12:15","nodeType":"VariableDeclaration","scope":14535,"src":"41203:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14523,"name":"string","nodeType":"ElementaryTypeName","src":"41203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14526,"mutability":"mutable","name":"chainId","nameLocation":"41240:7:15","nodeType":"VariableDeclaration","scope":14535,"src":"41233:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14525,"name":"uint64","nodeType":"ElementaryTypeName","src":"41233:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14529,"mutability":"mutable","name":"txType","nameLocation":"41265:6:15","nodeType":"VariableDeclaration","scope":14535,"src":"41249:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13297","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14528,"nodeType":"UserDefinedTypeName","pathNode":{"id":14527,"name":"BroadcastTxType","nameLocations":["41249:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13297,"src":"41249:15:15"},"referencedDeclaration":13297,"src":"41249:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13297","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"41202:70:15"},"returnParameters":{"id":14534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14535,"src":"41320:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13485_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary"},"typeName":{"id":14532,"nodeType":"UserDefinedTypeName","pathNode":{"id":14531,"name":"BroadcastTxSummary","nameLocations":["41320:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":13485,"src":"41320:18:15"},"referencedDeclaration":13485,"src":"41320:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13485_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"visibility":"internal"}],"src":"41319:27:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14550,"nodeType":"FunctionDefinition","src":"41606:169:15","nodes":[],"documentation":{"id":14536,"nodeType":"StructuredDocumentation","src":"41353:248:15","text":"Returns all broadcasts for the given contract on `chainId` with the specified `txType`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f7afe919","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"41615:13:15","parameters":{"id":14544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14538,"mutability":"mutable","name":"contractName","nameLocation":"41645:12:15","nodeType":"VariableDeclaration","scope":14550,"src":"41629:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14537,"name":"string","nodeType":"ElementaryTypeName","src":"41629:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14540,"mutability":"mutable","name":"chainId","nameLocation":"41666:7:15","nodeType":"VariableDeclaration","scope":14550,"src":"41659:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14539,"name":"uint64","nodeType":"ElementaryTypeName","src":"41659:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14543,"mutability":"mutable","name":"txType","nameLocation":"41691:6:15","nodeType":"VariableDeclaration","scope":14550,"src":"41675:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13297","typeString":"enum VmSafe.BroadcastTxType"},"typeName":{"id":14542,"nodeType":"UserDefinedTypeName","pathNode":{"id":14541,"name":"BroadcastTxType","nameLocations":["41675:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13297,"src":"41675:15:15"},"referencedDeclaration":13297,"src":"41675:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_BroadcastTxType_$13297","typeString":"enum VmSafe.BroadcastTxType"}},"visibility":"internal"}],"src":"41628:70:15"},"returnParameters":{"id":14549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14550,"src":"41746:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13485_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":14546,"nodeType":"UserDefinedTypeName","pathNode":{"id":14545,"name":"BroadcastTxSummary","nameLocations":["41746:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":13485,"src":"41746:18:15"},"referencedDeclaration":13485,"src":"41746:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13485_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":14547,"nodeType":"ArrayTypeName","src":"41746:20:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13485_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"41745:29:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14562,"nodeType":"FunctionDefinition","src":"42006:145:15","nodes":[],"documentation":{"id":14551,"nodeType":"StructuredDocumentation","src":"41781:220:15","text":"Returns all broadcasts for the given contract on `chainId`.\n Sorted such that the most recent broadcast is the first element, and the oldest is the last. i.e descending order of BroadcastTxSummary.blockNumber."},"functionSelector":"f2fa4a26","implemented":false,"kind":"function","modifiers":[],"name":"getBroadcasts","nameLocation":"42015:13:15","parameters":{"id":14556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14553,"mutability":"mutable","name":"contractName","nameLocation":"42045:12:15","nodeType":"VariableDeclaration","scope":14562,"src":"42029:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14552,"name":"string","nodeType":"ElementaryTypeName","src":"42029:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14555,"mutability":"mutable","name":"chainId","nameLocation":"42066:7:15","nodeType":"VariableDeclaration","scope":14562,"src":"42059:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14554,"name":"uint64","nodeType":"ElementaryTypeName","src":"42059:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"42028:46:15"},"returnParameters":{"id":14561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14562,"src":"42122:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13485_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"},"typeName":{"baseType":{"id":14558,"nodeType":"UserDefinedTypeName","pathNode":{"id":14557,"name":"BroadcastTxSummary","nameLocations":["42122:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":13485,"src":"42122:18:15"},"referencedDeclaration":13485,"src":"42122:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_BroadcastTxSummary_$13485_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary"}},"id":14559,"nodeType":"ArrayTypeName","src":"42122:20:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_BroadcastTxSummary_$13485_storage_$dyn_storage_ptr","typeString":"struct VmSafe.BroadcastTxSummary[]"}},"visibility":"internal"}],"src":"42121:29:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14570,"nodeType":"FunctionDefinition","src":"42389:101:15","nodes":[],"documentation":{"id":14563,"nodeType":"StructuredDocumentation","src":"42157:227:15","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"42398:7:15","parameters":{"id":14566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14565,"mutability":"mutable","name":"artifactPath","nameLocation":"42422:12:15","nodeType":"VariableDeclaration","scope":14570,"src":"42406:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14564,"name":"string","nodeType":"ElementaryTypeName","src":"42406:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42405:30:15"},"returnParameters":{"id":14569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14568,"mutability":"mutable","name":"creationBytecode","nameLocation":"42472:16:15","nodeType":"VariableDeclaration","scope":14570,"src":"42459:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14567,"name":"bytes","nodeType":"ElementaryTypeName","src":"42459:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42458:31:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14578,"nodeType":"FunctionDefinition","src":"42728:108:15","nodes":[],"documentation":{"id":14571,"nodeType":"StructuredDocumentation","src":"42496:227:15","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"42737:15:15","parameters":{"id":14574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14573,"mutability":"mutable","name":"artifactPath","nameLocation":"42769:12:15","nodeType":"VariableDeclaration","scope":14578,"src":"42753:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14572,"name":"string","nodeType":"ElementaryTypeName","src":"42753:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42752:30:15"},"returnParameters":{"id":14577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14576,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"42819:15:15","nodeType":"VariableDeclaration","scope":14578,"src":"42806:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14575,"name":"bytes","nodeType":"ElementaryTypeName","src":"42806:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42805:30:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14586,"nodeType":"FunctionDefinition","src":"42912:101:15","nodes":[],"documentation":{"id":14579,"nodeType":"StructuredDocumentation","src":"42842:65:15","text":"Returns the most recent deployment for the current `chainId`."},"functionSelector":"a8091d97","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"42921:13:15","parameters":{"id":14582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14581,"mutability":"mutable","name":"contractName","nameLocation":"42951:12:15","nodeType":"VariableDeclaration","scope":14586,"src":"42935:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14580,"name":"string","nodeType":"ElementaryTypeName","src":"42935:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42934:30:15"},"returnParameters":{"id":14585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14584,"mutability":"mutable","name":"deployedAddress","nameLocation":"42996:15:15","nodeType":"VariableDeclaration","scope":14586,"src":"42988:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14583,"name":"address","nodeType":"ElementaryTypeName","src":"42988:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"42987:25:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14596,"nodeType":"FunctionDefinition","src":"43098:141:15","nodes":[],"documentation":{"id":14587,"nodeType":"StructuredDocumentation","src":"43019:74:15","text":"Returns the most recent deployment for the given contract on `chainId`"},"functionSelector":"0debd5d6","implemented":false,"kind":"function","modifiers":[],"name":"getDeployment","nameLocation":"43107:13:15","parameters":{"id":14592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14589,"mutability":"mutable","name":"contractName","nameLocation":"43137:12:15","nodeType":"VariableDeclaration","scope":14596,"src":"43121:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14588,"name":"string","nodeType":"ElementaryTypeName","src":"43121:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14591,"mutability":"mutable","name":"chainId","nameLocation":"43158:7:15","nodeType":"VariableDeclaration","scope":14596,"src":"43151:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14590,"name":"uint64","nodeType":"ElementaryTypeName","src":"43151:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"43120:46:15"},"returnParameters":{"id":14595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14594,"mutability":"mutable","name":"deployedAddress","nameLocation":"43222:15:15","nodeType":"VariableDeclaration","scope":14596,"src":"43214:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14593,"name":"address","nodeType":"ElementaryTypeName","src":"43214:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"43213:25:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14607,"nodeType":"FunctionDefinition","src":"43508:153:15","nodes":[],"documentation":{"id":14597,"nodeType":"StructuredDocumentation","src":"43245:258:15","text":"Returns all deployments for the given contract on `chainId`\n Sorted in descending order of deployment time i.e descending order of BroadcastTxSummary.blockNumber.\n The most recent deployment is the first element, and the oldest is the last."},"functionSelector":"74e133dd","implemented":false,"kind":"function","modifiers":[],"name":"getDeployments","nameLocation":"43517:14:15","parameters":{"id":14602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14599,"mutability":"mutable","name":"contractName","nameLocation":"43548:12:15","nodeType":"VariableDeclaration","scope":14607,"src":"43532:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14598,"name":"string","nodeType":"ElementaryTypeName","src":"43532:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14601,"mutability":"mutable","name":"chainId","nameLocation":"43569:7:15","nodeType":"VariableDeclaration","scope":14607,"src":"43562:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14600,"name":"uint64","nodeType":"ElementaryTypeName","src":"43562:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"43531:46:15"},"returnParameters":{"id":14606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14605,"mutability":"mutable","name":"deployedAddresses","nameLocation":"43642:17:15","nodeType":"VariableDeclaration","scope":14607,"src":"43625:34:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14603,"name":"address","nodeType":"ElementaryTypeName","src":"43625:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14604,"nodeType":"ArrayTypeName","src":"43625:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"43624:36:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14615,"nodeType":"FunctionDefinition","src":"43767:73:15","nodes":[],"documentation":{"id":14608,"nodeType":"StructuredDocumentation","src":"43667:95:15","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"43776:5:15","parameters":{"id":14611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14610,"mutability":"mutable","name":"path","nameLocation":"43798:4:15","nodeType":"VariableDeclaration","scope":14615,"src":"43782:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14609,"name":"string","nodeType":"ElementaryTypeName","src":"43782:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43781:22:15"},"returnParameters":{"id":14614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14613,"mutability":"mutable","name":"result","nameLocation":"43832:6:15","nodeType":"VariableDeclaration","scope":14615,"src":"43827:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14612,"name":"bool","nodeType":"ElementaryTypeName","src":"43827:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43826:13:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14623,"nodeType":"FunctionDefinition","src":"43949:74:15","nodes":[],"documentation":{"id":14616,"nodeType":"StructuredDocumentation","src":"43846:98:15","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"43958:6:15","parameters":{"id":14619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14618,"mutability":"mutable","name":"path","nameLocation":"43981:4:15","nodeType":"VariableDeclaration","scope":14623,"src":"43965:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14617,"name":"string","nodeType":"ElementaryTypeName","src":"43965:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43964:22:15"},"returnParameters":{"id":14622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14621,"mutability":"mutable","name":"result","nameLocation":"44015:6:15","nodeType":"VariableDeclaration","scope":14623,"src":"44010:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14620,"name":"bool","nodeType":"ElementaryTypeName","src":"44010:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"44009:13:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14629,"nodeType":"FunctionDefinition","src":"44079:66:15","nodes":[],"documentation":{"id":14624,"nodeType":"StructuredDocumentation","src":"44029:45:15","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"44088:11:15","parameters":{"id":14625,"nodeType":"ParameterList","parameters":[],"src":"44099:2:15"},"returnParameters":{"id":14628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14627,"mutability":"mutable","name":"path","nameLocation":"44139:4:15","nodeType":"VariableDeclaration","scope":14629,"src":"44125:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14626,"name":"string","nodeType":"ElementaryTypeName","src":"44125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44124:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14637,"nodeType":"FunctionDefinition","src":"44212:83:15","nodes":[],"documentation":{"id":14630,"nodeType":"StructuredDocumentation","src":"44151:56:15","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"44221:6:15","parameters":{"id":14633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14632,"mutability":"mutable","name":"promptText","nameLocation":"44244:10:15","nodeType":"VariableDeclaration","scope":14637,"src":"44228:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14631,"name":"string","nodeType":"ElementaryTypeName","src":"44228:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44227:28:15"},"returnParameters":{"id":14636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14635,"mutability":"mutable","name":"input","nameLocation":"44288:5:15","nodeType":"VariableDeclaration","scope":14637,"src":"44274:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14634,"name":"string","nodeType":"ElementaryTypeName","src":"44274:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44273:21:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14645,"nodeType":"FunctionDefinition","src":"44358:78:15","nodes":[],"documentation":{"id":14638,"nodeType":"StructuredDocumentation","src":"44301:52:15","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"44367:13:15","parameters":{"id":14641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14640,"mutability":"mutable","name":"promptText","nameLocation":"44397:10:15","nodeType":"VariableDeclaration","scope":14645,"src":"44381:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14639,"name":"string","nodeType":"ElementaryTypeName","src":"44381:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44380:28:15"},"returnParameters":{"id":14644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14645,"src":"44427:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14642,"name":"address","nodeType":"ElementaryTypeName","src":"44427:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"44426:9:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14653,"nodeType":"FunctionDefinition","src":"44510:89:15","nodes":[],"documentation":{"id":14646,"nodeType":"StructuredDocumentation","src":"44442:63:15","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"44519:12:15","parameters":{"id":14649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14648,"mutability":"mutable","name":"promptText","nameLocation":"44548:10:15","nodeType":"VariableDeclaration","scope":14653,"src":"44532:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14647,"name":"string","nodeType":"ElementaryTypeName","src":"44532:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44531:28:15"},"returnParameters":{"id":14652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14651,"mutability":"mutable","name":"input","nameLocation":"44592:5:15","nodeType":"VariableDeclaration","scope":14653,"src":"44578:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14650,"name":"string","nodeType":"ElementaryTypeName","src":"44578:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44577:21:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14661,"nodeType":"FunctionDefinition","src":"44679:81:15","nodes":[],"documentation":{"id":14654,"nodeType":"StructuredDocumentation","src":"44605:69:15","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"44688:16:15","parameters":{"id":14657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14656,"mutability":"mutable","name":"promptText","nameLocation":"44721:10:15","nodeType":"VariableDeclaration","scope":14661,"src":"44705:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14655,"name":"string","nodeType":"ElementaryTypeName","src":"44705:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44704:28:15"},"returnParameters":{"id":14660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14661,"src":"44751:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14658,"name":"uint256","nodeType":"ElementaryTypeName","src":"44751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44750:9:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14669,"nodeType":"FunctionDefinition","src":"44820:75:15","nodes":[],"documentation":{"id":14662,"nodeType":"StructuredDocumentation","src":"44766:49:15","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"44829:10:15","parameters":{"id":14665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14664,"mutability":"mutable","name":"promptText","nameLocation":"44856:10:15","nodeType":"VariableDeclaration","scope":14669,"src":"44840:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14663,"name":"string","nodeType":"ElementaryTypeName","src":"44840:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44839:28:15"},"returnParameters":{"id":14668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14669,"src":"44886:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14666,"name":"uint256","nodeType":"ElementaryTypeName","src":"44886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44885:9:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14679,"nodeType":"FunctionDefinition","src":"45143:89:15","nodes":[],"documentation":{"id":14670,"nodeType":"StructuredDocumentation","src":"44901:237:15","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"45152:7:15","parameters":{"id":14673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14672,"mutability":"mutable","name":"path","nameLocation":"45176:4:15","nodeType":"VariableDeclaration","scope":14679,"src":"45160:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14671,"name":"string","nodeType":"ElementaryTypeName","src":"45160:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45159:22:15"},"returnParameters":{"id":14678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14677,"mutability":"mutable","name":"entries","nameLocation":"45223:7:15","nodeType":"VariableDeclaration","scope":14679,"src":"45205:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13345_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14675,"nodeType":"UserDefinedTypeName","pathNode":{"id":14674,"name":"DirEntry","nameLocations":["45205:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":13345,"src":"45205:8:15"},"referencedDeclaration":13345,"src":"45205:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13345_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14676,"nodeType":"ArrayTypeName","src":"45205:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13345_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"45204:27:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14691,"nodeType":"FunctionDefinition","src":"45269:106:15","nodes":[],"documentation":{"id":14680,"nodeType":"StructuredDocumentation","src":"45238:26:15","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"45278:7:15","parameters":{"id":14685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14682,"mutability":"mutable","name":"path","nameLocation":"45302:4:15","nodeType":"VariableDeclaration","scope":14691,"src":"45286:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14681,"name":"string","nodeType":"ElementaryTypeName","src":"45286:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14684,"mutability":"mutable","name":"maxDepth","nameLocation":"45315:8:15","nodeType":"VariableDeclaration","scope":14691,"src":"45308:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14683,"name":"uint64","nodeType":"ElementaryTypeName","src":"45308:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"45285:39:15"},"returnParameters":{"id":14690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14689,"mutability":"mutable","name":"entries","nameLocation":"45366:7:15","nodeType":"VariableDeclaration","scope":14691,"src":"45348:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13345_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14687,"nodeType":"UserDefinedTypeName","pathNode":{"id":14686,"name":"DirEntry","nameLocations":["45348:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":13345,"src":"45348:8:15"},"referencedDeclaration":13345,"src":"45348:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13345_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14688,"nodeType":"ArrayTypeName","src":"45348:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13345_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"45347:27:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14705,"nodeType":"FunctionDefinition","src":"45412:148:15","nodes":[],"documentation":{"id":14692,"nodeType":"StructuredDocumentation","src":"45381:26:15","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"45421:7:15","parameters":{"id":14699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14694,"mutability":"mutable","name":"path","nameLocation":"45445:4:15","nodeType":"VariableDeclaration","scope":14705,"src":"45429:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14693,"name":"string","nodeType":"ElementaryTypeName","src":"45429:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14696,"mutability":"mutable","name":"maxDepth","nameLocation":"45458:8:15","nodeType":"VariableDeclaration","scope":14705,"src":"45451:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14695,"name":"uint64","nodeType":"ElementaryTypeName","src":"45451:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14698,"mutability":"mutable","name":"followLinks","nameLocation":"45473:11:15","nodeType":"VariableDeclaration","scope":14705,"src":"45468:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14697,"name":"bool","nodeType":"ElementaryTypeName","src":"45468:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"45428:57:15"},"returnParameters":{"id":14704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14703,"mutability":"mutable","name":"entries","nameLocation":"45551:7:15","nodeType":"VariableDeclaration","scope":14705,"src":"45533:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13345_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":14701,"nodeType":"UserDefinedTypeName","pathNode":{"id":14700,"name":"DirEntry","nameLocations":["45533:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":13345,"src":"45533:8:15"},"referencedDeclaration":13345,"src":"45533:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$13345_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":14702,"nodeType":"ArrayTypeName","src":"45533:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$13345_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"45532:27:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14713,"nodeType":"FunctionDefinition","src":"45658:83:15","nodes":[],"documentation":{"id":14706,"nodeType":"StructuredDocumentation","src":"45566:87:15","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"45667:8:15","parameters":{"id":14709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14708,"mutability":"mutable","name":"path","nameLocation":"45692:4:15","nodeType":"VariableDeclaration","scope":14713,"src":"45676:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14707,"name":"string","nodeType":"ElementaryTypeName","src":"45676:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45675:22:15"},"returnParameters":{"id":14712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14711,"mutability":"mutable","name":"data","nameLocation":"45735:4:15","nodeType":"VariableDeclaration","scope":14713,"src":"45721:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14710,"name":"string","nodeType":"ElementaryTypeName","src":"45721:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45720:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14721,"nodeType":"FunctionDefinition","src":"45839:88:15","nodes":[],"documentation":{"id":14714,"nodeType":"StructuredDocumentation","src":"45747:87:15","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"45848:14:15","parameters":{"id":14717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14716,"mutability":"mutable","name":"path","nameLocation":"45879:4:15","nodeType":"VariableDeclaration","scope":14721,"src":"45863:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14715,"name":"string","nodeType":"ElementaryTypeName","src":"45863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45862:22:15"},"returnParameters":{"id":14720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14719,"mutability":"mutable","name":"data","nameLocation":"45921:4:15","nodeType":"VariableDeclaration","scope":14721,"src":"45908:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14718,"name":"bytes","nodeType":"ElementaryTypeName","src":"45908:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"45907:19:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14729,"nodeType":"FunctionDefinition","src":"45976:83:15","nodes":[],"documentation":{"id":14722,"nodeType":"StructuredDocumentation","src":"45933:38:15","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"45985:8:15","parameters":{"id":14725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14724,"mutability":"mutable","name":"path","nameLocation":"46010:4:15","nodeType":"VariableDeclaration","scope":14729,"src":"45994:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14723,"name":"string","nodeType":"ElementaryTypeName","src":"45994:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45993:22:15"},"returnParameters":{"id":14728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14727,"mutability":"mutable","name":"line","nameLocation":"46053:4:15","nodeType":"VariableDeclaration","scope":14729,"src":"46039:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14726,"name":"string","nodeType":"ElementaryTypeName","src":"46039:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46038:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14737,"nodeType":"FunctionDefinition","src":"46318:93:15","nodes":[],"documentation":{"id":14730,"nodeType":"StructuredDocumentation","src":"46065:248:15","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"46327:8:15","parameters":{"id":14733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14732,"mutability":"mutable","name":"linkPath","nameLocation":"46352:8:15","nodeType":"VariableDeclaration","scope":14737,"src":"46336:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14731,"name":"string","nodeType":"ElementaryTypeName","src":"46336:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46335:26:15"},"returnParameters":{"id":14736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14735,"mutability":"mutable","name":"targetPath","nameLocation":"46399:10:15","nodeType":"VariableDeclaration","scope":14737,"src":"46385:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14734,"name":"string","nodeType":"ElementaryTypeName","src":"46385:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46384:26:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14745,"nodeType":"FunctionDefinition","src":"46801:66:15","nodes":[],"documentation":{"id":14738,"nodeType":"StructuredDocumentation","src":"46417:379:15","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"46810:9:15","parameters":{"id":14743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14740,"mutability":"mutable","name":"path","nameLocation":"46836:4:15","nodeType":"VariableDeclaration","scope":14745,"src":"46820:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14739,"name":"string","nodeType":"ElementaryTypeName","src":"46820:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14742,"mutability":"mutable","name":"recursive","nameLocation":"46847:9:15","nodeType":"VariableDeclaration","scope":14745,"src":"46842:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14741,"name":"bool","nodeType":"ElementaryTypeName","src":"46842:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"46819:38:15"},"returnParameters":{"id":14744,"nodeType":"ParameterList","parameters":[],"src":"46866:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14751,"nodeType":"FunctionDefinition","src":"47200:51:15","nodes":[],"documentation":{"id":14746,"nodeType":"StructuredDocumentation","src":"46873:322:15","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"47209:10:15","parameters":{"id":14749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14748,"mutability":"mutable","name":"path","nameLocation":"47236:4:15","nodeType":"VariableDeclaration","scope":14751,"src":"47220:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14747,"name":"string","nodeType":"ElementaryTypeName","src":"47220:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47219:22:15"},"returnParameters":{"id":14750,"nodeType":"ParameterList","parameters":[],"src":"47250:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14761,"nodeType":"FunctionDefinition","src":"47358:91:15","nodes":[],"documentation":{"id":14752,"nodeType":"StructuredDocumentation","src":"47257:96:15","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"47367:6:15","parameters":{"id":14756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14755,"mutability":"mutable","name":"commandInput","nameLocation":"47392:12:15","nodeType":"VariableDeclaration","scope":14761,"src":"47374:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14753,"name":"string","nodeType":"ElementaryTypeName","src":"47374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14754,"nodeType":"ArrayTypeName","src":"47374:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"47373:32:15"},"returnParameters":{"id":14760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14759,"mutability":"mutable","name":"result","nameLocation":"47441:6:15","nodeType":"VariableDeclaration","scope":14761,"src":"47424:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13379_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":14758,"nodeType":"UserDefinedTypeName","pathNode":{"id":14757,"name":"FfiResult","nameLocations":["47424:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13379,"src":"47424:9:15"},"referencedDeclaration":13379,"src":"47424:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13379_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"47423:25:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14767,"nodeType":"FunctionDefinition","src":"47514:65:15","nodes":[],"documentation":{"id":14762,"nodeType":"StructuredDocumentation","src":"47455:54:15","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"47523:8:15","parameters":{"id":14763,"nodeType":"ParameterList","parameters":[],"src":"47531:2:15"},"returnParameters":{"id":14766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14765,"mutability":"mutable","name":"milliseconds","nameLocation":"47565:12:15","nodeType":"VariableDeclaration","scope":14767,"src":"47557:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14764,"name":"uint256","nodeType":"ElementaryTypeName","src":"47557:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47556:22:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14775,"nodeType":"FunctionDefinition","src":"47748:72:15","nodes":[],"documentation":{"id":14768,"nodeType":"StructuredDocumentation","src":"47585:158:15","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"47757:9:15","parameters":{"id":14773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14770,"mutability":"mutable","name":"path","nameLocation":"47783:4:15","nodeType":"VariableDeclaration","scope":14775,"src":"47767:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14769,"name":"string","nodeType":"ElementaryTypeName","src":"47767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14772,"mutability":"mutable","name":"data","nameLocation":"47805:4:15","nodeType":"VariableDeclaration","scope":14775,"src":"47789:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14771,"name":"string","nodeType":"ElementaryTypeName","src":"47789:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47766:44:15"},"returnParameters":{"id":14774,"nodeType":"ParameterList","parameters":[],"src":"47819:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14783,"nodeType":"FunctionDefinition","src":"47998:77:15","nodes":[],"documentation":{"id":14776,"nodeType":"StructuredDocumentation","src":"47826:167:15","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"48007:15:15","parameters":{"id":14781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14778,"mutability":"mutable","name":"path","nameLocation":"48039:4:15","nodeType":"VariableDeclaration","scope":14783,"src":"48023:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14777,"name":"string","nodeType":"ElementaryTypeName","src":"48023:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14780,"mutability":"mutable","name":"data","nameLocation":"48060:4:15","nodeType":"VariableDeclaration","scope":14783,"src":"48045:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14779,"name":"bytes","nodeType":"ElementaryTypeName","src":"48045:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"48022:43:15"},"returnParameters":{"id":14782,"nodeType":"ParameterList","parameters":[],"src":"48074:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14791,"nodeType":"FunctionDefinition","src":"48196:72:15","nodes":[],"documentation":{"id":14784,"nodeType":"StructuredDocumentation","src":"48081:110:15","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"48205:9:15","parameters":{"id":14789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14786,"mutability":"mutable","name":"path","nameLocation":"48231:4:15","nodeType":"VariableDeclaration","scope":14791,"src":"48215:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14785,"name":"string","nodeType":"ElementaryTypeName","src":"48215:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14788,"mutability":"mutable","name":"data","nameLocation":"48253:4:15","nodeType":"VariableDeclaration","scope":14791,"src":"48237:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14787,"name":"string","nodeType":"ElementaryTypeName","src":"48237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48214:44:15"},"returnParameters":{"id":14790,"nodeType":"ParameterList","parameters":[],"src":"48267:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14801,"nodeType":"FunctionDefinition","src":"48354:95:15","nodes":[],"documentation":{"id":14792,"nodeType":"StructuredDocumentation","src":"48305:44:15","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"48363:13:15","parameters":{"id":14797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14794,"mutability":"mutable","name":"json","nameLocation":"48393:4:15","nodeType":"VariableDeclaration","scope":14801,"src":"48377:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14793,"name":"string","nodeType":"ElementaryTypeName","src":"48377:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14796,"mutability":"mutable","name":"key","nameLocation":"48415:3:15","nodeType":"VariableDeclaration","scope":14801,"src":"48399:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14795,"name":"string","nodeType":"ElementaryTypeName","src":"48399:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48376:43:15"},"returnParameters":{"id":14800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14801,"src":"48443:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14798,"name":"bool","nodeType":"ElementaryTypeName","src":"48443:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48442:6:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14811,"nodeType":"FunctionDefinition","src":"48530:101:15","nodes":[],"documentation":{"id":14802,"nodeType":"StructuredDocumentation","src":"48455:70:15","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"48539:16:15","parameters":{"id":14807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14804,"mutability":"mutable","name":"json","nameLocation":"48572:4:15","nodeType":"VariableDeclaration","scope":14811,"src":"48556:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14803,"name":"string","nodeType":"ElementaryTypeName","src":"48556:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14806,"mutability":"mutable","name":"key","nameLocation":"48594:3:15","nodeType":"VariableDeclaration","scope":14811,"src":"48578:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14805,"name":"string","nodeType":"ElementaryTypeName","src":"48578:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48555:43:15"},"returnParameters":{"id":14810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14811,"src":"48622:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14808,"name":"address","nodeType":"ElementaryTypeName","src":"48622:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48621:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14822,"nodeType":"FunctionDefinition","src":"48714:139:15","nodes":[],"documentation":{"id":14812,"nodeType":"StructuredDocumentation","src":"48637:72:15","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"48723:21:15","parameters":{"id":14817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14814,"mutability":"mutable","name":"json","nameLocation":"48761:4:15","nodeType":"VariableDeclaration","scope":14822,"src":"48745:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14813,"name":"string","nodeType":"ElementaryTypeName","src":"48745:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14816,"mutability":"mutable","name":"key","nameLocation":"48783:3:15","nodeType":"VariableDeclaration","scope":14822,"src":"48767:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14815,"name":"string","nodeType":"ElementaryTypeName","src":"48767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48744:43:15"},"returnParameters":{"id":14821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14822,"src":"48835:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14818,"name":"address","nodeType":"ElementaryTypeName","src":"48835:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14819,"nodeType":"ArrayTypeName","src":"48835:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"48834:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14832,"nodeType":"FunctionDefinition","src":"48931:95:15","nodes":[],"documentation":{"id":14823,"nodeType":"StructuredDocumentation","src":"48859:67:15","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"48940:13:15","parameters":{"id":14828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14825,"mutability":"mutable","name":"json","nameLocation":"48970:4:15","nodeType":"VariableDeclaration","scope":14832,"src":"48954:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14824,"name":"string","nodeType":"ElementaryTypeName","src":"48954:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14827,"mutability":"mutable","name":"key","nameLocation":"48992:3:15","nodeType":"VariableDeclaration","scope":14832,"src":"48976:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14826,"name":"string","nodeType":"ElementaryTypeName","src":"48976:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48953:43:15"},"returnParameters":{"id":14831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14832,"src":"49020:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14829,"name":"bool","nodeType":"ElementaryTypeName","src":"49020:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"49019:6:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14843,"nodeType":"FunctionDefinition","src":"49106:109:15","nodes":[],"documentation":{"id":14833,"nodeType":"StructuredDocumentation","src":"49032:69:15","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"49115:18:15","parameters":{"id":14838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14835,"mutability":"mutable","name":"json","nameLocation":"49150:4:15","nodeType":"VariableDeclaration","scope":14843,"src":"49134:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14834,"name":"string","nodeType":"ElementaryTypeName","src":"49134:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14837,"mutability":"mutable","name":"key","nameLocation":"49172:3:15","nodeType":"VariableDeclaration","scope":14843,"src":"49156:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14836,"name":"string","nodeType":"ElementaryTypeName","src":"49156:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49133:43:15"},"returnParameters":{"id":14842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14843,"src":"49200:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14839,"name":"bool","nodeType":"ElementaryTypeName","src":"49200:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14840,"nodeType":"ArrayTypeName","src":"49200:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49199:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14853,"nodeType":"FunctionDefinition","src":"49294:104:15","nodes":[],"documentation":{"id":14844,"nodeType":"StructuredDocumentation","src":"49221:68:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"49303:14:15","parameters":{"id":14849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14846,"mutability":"mutable","name":"json","nameLocation":"49334:4:15","nodeType":"VariableDeclaration","scope":14853,"src":"49318:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14845,"name":"string","nodeType":"ElementaryTypeName","src":"49318:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14848,"mutability":"mutable","name":"key","nameLocation":"49356:3:15","nodeType":"VariableDeclaration","scope":14853,"src":"49340:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14847,"name":"string","nodeType":"ElementaryTypeName","src":"49340:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49317:43:15"},"returnParameters":{"id":14852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14853,"src":"49384:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14850,"name":"bytes","nodeType":"ElementaryTypeName","src":"49384:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49383:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14863,"nodeType":"FunctionDefinition","src":"49479:101:15","nodes":[],"documentation":{"id":14854,"nodeType":"StructuredDocumentation","src":"49404:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"49488:16:15","parameters":{"id":14859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14856,"mutability":"mutable","name":"json","nameLocation":"49521:4:15","nodeType":"VariableDeclaration","scope":14863,"src":"49505:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14855,"name":"string","nodeType":"ElementaryTypeName","src":"49505:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14858,"mutability":"mutable","name":"key","nameLocation":"49543:3:15","nodeType":"VariableDeclaration","scope":14863,"src":"49527:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14857,"name":"string","nodeType":"ElementaryTypeName","src":"49527:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49504:43:15"},"returnParameters":{"id":14862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14863,"src":"49571:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49571:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"49570:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14874,"nodeType":"FunctionDefinition","src":"49663:139:15","nodes":[],"documentation":{"id":14864,"nodeType":"StructuredDocumentation","src":"49586:72:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"49672:21:15","parameters":{"id":14869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14866,"mutability":"mutable","name":"json","nameLocation":"49710:4:15","nodeType":"VariableDeclaration","scope":14874,"src":"49694:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14865,"name":"string","nodeType":"ElementaryTypeName","src":"49694:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14868,"mutability":"mutable","name":"key","nameLocation":"49732:3:15","nodeType":"VariableDeclaration","scope":14874,"src":"49716:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14867,"name":"string","nodeType":"ElementaryTypeName","src":"49716:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49693:43:15"},"returnParameters":{"id":14873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14874,"src":"49784:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"49784:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14871,"nodeType":"ArrayTypeName","src":"49784:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"49783:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14885,"nodeType":"FunctionDefinition","src":"49883:111:15","nodes":[],"documentation":{"id":14875,"nodeType":"StructuredDocumentation","src":"49808:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"49892:19:15","parameters":{"id":14880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14877,"mutability":"mutable","name":"json","nameLocation":"49928:4:15","nodeType":"VariableDeclaration","scope":14885,"src":"49912:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14876,"name":"string","nodeType":"ElementaryTypeName","src":"49912:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14879,"mutability":"mutable","name":"key","nameLocation":"49950:3:15","nodeType":"VariableDeclaration","scope":14885,"src":"49934:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14878,"name":"string","nodeType":"ElementaryTypeName","src":"49934:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49911:43:15"},"returnParameters":{"id":14884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14885,"src":"49978:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14881,"name":"bytes","nodeType":"ElementaryTypeName","src":"49978:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14882,"nodeType":"ArrayTypeName","src":"49978:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"49977:16:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14895,"nodeType":"FunctionDefinition","src":"50074:96:15","nodes":[],"documentation":{"id":14886,"nodeType":"StructuredDocumentation","src":"50000:69:15","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"50083:12:15","parameters":{"id":14891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14888,"mutability":"mutable","name":"json","nameLocation":"50112:4:15","nodeType":"VariableDeclaration","scope":14895,"src":"50096:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14887,"name":"string","nodeType":"ElementaryTypeName","src":"50096:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14890,"mutability":"mutable","name":"key","nameLocation":"50134:3:15","nodeType":"VariableDeclaration","scope":14895,"src":"50118:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14889,"name":"string","nodeType":"ElementaryTypeName","src":"50118:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50095:43:15"},"returnParameters":{"id":14894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14895,"src":"50162:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14892,"name":"int256","nodeType":"ElementaryTypeName","src":"50162:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"50161:8:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14906,"nodeType":"FunctionDefinition","src":"50252:110:15","nodes":[],"documentation":{"id":14896,"nodeType":"StructuredDocumentation","src":"50176:71:15","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"50261:17:15","parameters":{"id":14901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14898,"mutability":"mutable","name":"json","nameLocation":"50295:4:15","nodeType":"VariableDeclaration","scope":14906,"src":"50279:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14897,"name":"string","nodeType":"ElementaryTypeName","src":"50279:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14900,"mutability":"mutable","name":"key","nameLocation":"50317:3:15","nodeType":"VariableDeclaration","scope":14906,"src":"50301:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14899,"name":"string","nodeType":"ElementaryTypeName","src":"50301:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50278:43:15"},"returnParameters":{"id":14905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14906,"src":"50345:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14902,"name":"int256","nodeType":"ElementaryTypeName","src":"50345:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14903,"nodeType":"ArrayTypeName","src":"50345:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50344:17:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14917,"nodeType":"FunctionDefinition","src":"50427:111:15","nodes":[],"documentation":{"id":14907,"nodeType":"StructuredDocumentation","src":"50368:54:15","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"50436:13:15","parameters":{"id":14912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14909,"mutability":"mutable","name":"json","nameLocation":"50466:4:15","nodeType":"VariableDeclaration","scope":14917,"src":"50450:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14908,"name":"string","nodeType":"ElementaryTypeName","src":"50450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14911,"mutability":"mutable","name":"key","nameLocation":"50488:3:15","nodeType":"VariableDeclaration","scope":14917,"src":"50472:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14910,"name":"string","nodeType":"ElementaryTypeName","src":"50472:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50449:43:15"},"returnParameters":{"id":14916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14915,"mutability":"mutable","name":"keys","nameLocation":"50532:4:15","nodeType":"VariableDeclaration","scope":14917,"src":"50516:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14913,"name":"string","nodeType":"ElementaryTypeName","src":"50516:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14914,"nodeType":"ArrayTypeName","src":"50516:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"50515:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14927,"nodeType":"FunctionDefinition","src":"50618:106:15","nodes":[],"documentation":{"id":14918,"nodeType":"StructuredDocumentation","src":"50544:69:15","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"50627:15:15","parameters":{"id":14923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14920,"mutability":"mutable","name":"json","nameLocation":"50659:4:15","nodeType":"VariableDeclaration","scope":14927,"src":"50643:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14919,"name":"string","nodeType":"ElementaryTypeName","src":"50643:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14922,"mutability":"mutable","name":"key","nameLocation":"50681:3:15","nodeType":"VariableDeclaration","scope":14927,"src":"50665:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14921,"name":"string","nodeType":"ElementaryTypeName","src":"50665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50642:43:15"},"returnParameters":{"id":14926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14927,"src":"50709:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14924,"name":"string","nodeType":"ElementaryTypeName","src":"50709:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50708:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14938,"nodeType":"FunctionDefinition","src":"50806:113:15","nodes":[],"documentation":{"id":14928,"nodeType":"StructuredDocumentation","src":"50730:71:15","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"50815:20:15","parameters":{"id":14933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14930,"mutability":"mutable","name":"json","nameLocation":"50852:4:15","nodeType":"VariableDeclaration","scope":14938,"src":"50836:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14929,"name":"string","nodeType":"ElementaryTypeName","src":"50836:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14932,"mutability":"mutable","name":"key","nameLocation":"50874:3:15","nodeType":"VariableDeclaration","scope":14938,"src":"50858:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14931,"name":"string","nodeType":"ElementaryTypeName","src":"50858:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50835:43:15"},"returnParameters":{"id":14937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14938,"src":"50902:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14934,"name":"string","nodeType":"ElementaryTypeName","src":"50902:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14935,"nodeType":"ArrayTypeName","src":"50902:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"50901:17:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14950,"nodeType":"FunctionDefinition","src":"51036:165:15","nodes":[],"documentation":{"id":14939,"nodeType":"StructuredDocumentation","src":"50925:106:15","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"51045:18:15","parameters":{"id":14946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14941,"mutability":"mutable","name":"json","nameLocation":"51080:4:15","nodeType":"VariableDeclaration","scope":14950,"src":"51064:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14940,"name":"string","nodeType":"ElementaryTypeName","src":"51064:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14943,"mutability":"mutable","name":"key","nameLocation":"51102:3:15","nodeType":"VariableDeclaration","scope":14950,"src":"51086:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14942,"name":"string","nodeType":"ElementaryTypeName","src":"51086:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14945,"mutability":"mutable","name":"typeDescription","nameLocation":"51123:15:15","nodeType":"VariableDeclaration","scope":14950,"src":"51107:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14944,"name":"string","nodeType":"ElementaryTypeName","src":"51107:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51063:76:15"},"returnParameters":{"id":14949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14950,"src":"51187:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14947,"name":"bytes","nodeType":"ElementaryTypeName","src":"51187:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51186:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14960,"nodeType":"FunctionDefinition","src":"51303:139:15","nodes":[],"documentation":{"id":14951,"nodeType":"StructuredDocumentation","src":"51207:91:15","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"51312:13:15","parameters":{"id":14956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14953,"mutability":"mutable","name":"json","nameLocation":"51342:4:15","nodeType":"VariableDeclaration","scope":14960,"src":"51326:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14952,"name":"string","nodeType":"ElementaryTypeName","src":"51326:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14955,"mutability":"mutable","name":"typeDescription","nameLocation":"51364:15:15","nodeType":"VariableDeclaration","scope":14960,"src":"51348:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14954,"name":"string","nodeType":"ElementaryTypeName","src":"51348:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51325:55:15"},"returnParameters":{"id":14959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14960,"src":"51428:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14957,"name":"bytes","nodeType":"ElementaryTypeName","src":"51428:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51427:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14972,"nodeType":"FunctionDefinition","src":"51553:160:15","nodes":[],"documentation":{"id":14961,"nodeType":"StructuredDocumentation","src":"51448:100:15","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"51562:13:15","parameters":{"id":14968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14963,"mutability":"mutable","name":"json","nameLocation":"51592:4:15","nodeType":"VariableDeclaration","scope":14972,"src":"51576:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14962,"name":"string","nodeType":"ElementaryTypeName","src":"51576:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14965,"mutability":"mutable","name":"key","nameLocation":"51614:3:15","nodeType":"VariableDeclaration","scope":14972,"src":"51598:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14964,"name":"string","nodeType":"ElementaryTypeName","src":"51598:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14967,"mutability":"mutable","name":"typeDescription","nameLocation":"51635:15:15","nodeType":"VariableDeclaration","scope":14972,"src":"51619:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14966,"name":"string","nodeType":"ElementaryTypeName","src":"51619:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51575:76:15"},"returnParameters":{"id":14971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14972,"src":"51699:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14969,"name":"bytes","nodeType":"ElementaryTypeName","src":"51699:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51698:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14982,"nodeType":"FunctionDefinition","src":"51794:98:15","nodes":[],"documentation":{"id":14973,"nodeType":"StructuredDocumentation","src":"51719:70:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"51803:13:15","parameters":{"id":14978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14975,"mutability":"mutable","name":"json","nameLocation":"51833:4:15","nodeType":"VariableDeclaration","scope":14982,"src":"51817:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14974,"name":"string","nodeType":"ElementaryTypeName","src":"51817:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14977,"mutability":"mutable","name":"key","nameLocation":"51855:3:15","nodeType":"VariableDeclaration","scope":14982,"src":"51839:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14976,"name":"string","nodeType":"ElementaryTypeName","src":"51839:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51816:43:15"},"returnParameters":{"id":14981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14982,"src":"51883:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14979,"name":"uint256","nodeType":"ElementaryTypeName","src":"51883:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51882:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14993,"nodeType":"FunctionDefinition","src":"51975:112:15","nodes":[],"documentation":{"id":14983,"nodeType":"StructuredDocumentation","src":"51898:72:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"51984:18:15","parameters":{"id":14988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14985,"mutability":"mutable","name":"json","nameLocation":"52019:4:15","nodeType":"VariableDeclaration","scope":14993,"src":"52003:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14984,"name":"string","nodeType":"ElementaryTypeName","src":"52003:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14987,"mutability":"mutable","name":"key","nameLocation":"52041:3:15","nodeType":"VariableDeclaration","scope":14993,"src":"52025:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14986,"name":"string","nodeType":"ElementaryTypeName","src":"52025:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52002:43:15"},"returnParameters":{"id":14992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14993,"src":"52069:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14989,"name":"uint256","nodeType":"ElementaryTypeName","src":"52069:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14990,"nodeType":"ArrayTypeName","src":"52069:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"52068:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15001,"nodeType":"FunctionDefinition","src":"52128:93:15","nodes":[],"documentation":{"id":14994,"nodeType":"StructuredDocumentation","src":"52093:30:15","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"52137:9:15","parameters":{"id":14997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14996,"mutability":"mutable","name":"json","nameLocation":"52163:4:15","nodeType":"VariableDeclaration","scope":15001,"src":"52147:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14995,"name":"string","nodeType":"ElementaryTypeName","src":"52147:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52146:22:15"},"returnParameters":{"id":15000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14999,"mutability":"mutable","name":"abiEncodedData","nameLocation":"52205:14:15","nodeType":"VariableDeclaration","scope":15001,"src":"52192:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14998,"name":"bytes","nodeType":"ElementaryTypeName","src":"52192:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52191:29:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15011,"nodeType":"FunctionDefinition","src":"52271:114:15","nodes":[],"documentation":{"id":15002,"nodeType":"StructuredDocumentation","src":"52227:39:15","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"52280:9:15","parameters":{"id":15007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15004,"mutability":"mutable","name":"json","nameLocation":"52306:4:15","nodeType":"VariableDeclaration","scope":15011,"src":"52290:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15003,"name":"string","nodeType":"ElementaryTypeName","src":"52290:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15006,"mutability":"mutable","name":"key","nameLocation":"52328:3:15","nodeType":"VariableDeclaration","scope":15011,"src":"52312:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15005,"name":"string","nodeType":"ElementaryTypeName","src":"52312:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52289:43:15"},"returnParameters":{"id":15010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15009,"mutability":"mutable","name":"abiEncodedData","nameLocation":"52369:14:15","nodeType":"VariableDeclaration","scope":15011,"src":"52356:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15008,"name":"bytes","nodeType":"ElementaryTypeName","src":"52356:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"52355:29:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15023,"nodeType":"FunctionDefinition","src":"52420:148:15","nodes":[],"documentation":{"id":15012,"nodeType":"StructuredDocumentation","src":"52391:24:15","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"52429:16:15","parameters":{"id":15019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15014,"mutability":"mutable","name":"objectKey","nameLocation":"52462:9:15","nodeType":"VariableDeclaration","scope":15023,"src":"52446:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15013,"name":"string","nodeType":"ElementaryTypeName","src":"52446:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15016,"mutability":"mutable","name":"valueKey","nameLocation":"52489:8:15","nodeType":"VariableDeclaration","scope":15023,"src":"52473:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15015,"name":"string","nodeType":"ElementaryTypeName","src":"52473:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15018,"mutability":"mutable","name":"value","nameLocation":"52507:5:15","nodeType":"VariableDeclaration","scope":15023,"src":"52499:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15017,"name":"address","nodeType":"ElementaryTypeName","src":"52499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52445:68:15"},"returnParameters":{"id":15022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15021,"mutability":"mutable","name":"json","nameLocation":"52562:4:15","nodeType":"VariableDeclaration","scope":15023,"src":"52548:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15020,"name":"string","nodeType":"ElementaryTypeName","src":"52548:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52547:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15036,"nodeType":"FunctionDefinition","src":"52603:160:15","nodes":[],"documentation":{"id":15024,"nodeType":"StructuredDocumentation","src":"52574:24:15","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"52612:16:15","parameters":{"id":15032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15026,"mutability":"mutable","name":"objectKey","nameLocation":"52645:9:15","nodeType":"VariableDeclaration","scope":15036,"src":"52629:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15025,"name":"string","nodeType":"ElementaryTypeName","src":"52629:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15028,"mutability":"mutable","name":"valueKey","nameLocation":"52672:8:15","nodeType":"VariableDeclaration","scope":15036,"src":"52656:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15027,"name":"string","nodeType":"ElementaryTypeName","src":"52656:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15031,"mutability":"mutable","name":"values","nameLocation":"52701:6:15","nodeType":"VariableDeclaration","scope":15036,"src":"52682:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15029,"name":"address","nodeType":"ElementaryTypeName","src":"52682:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15030,"nodeType":"ArrayTypeName","src":"52682:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"52628:80:15"},"returnParameters":{"id":15035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15034,"mutability":"mutable","name":"json","nameLocation":"52757:4:15","nodeType":"VariableDeclaration","scope":15036,"src":"52743:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15033,"name":"string","nodeType":"ElementaryTypeName","src":"52743:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52742:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15048,"nodeType":"FunctionDefinition","src":"52798:142:15","nodes":[],"documentation":{"id":15037,"nodeType":"StructuredDocumentation","src":"52769:24:15","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"52807:13:15","parameters":{"id":15044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15039,"mutability":"mutable","name":"objectKey","nameLocation":"52837:9:15","nodeType":"VariableDeclaration","scope":15048,"src":"52821:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15038,"name":"string","nodeType":"ElementaryTypeName","src":"52821:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15041,"mutability":"mutable","name":"valueKey","nameLocation":"52864:8:15","nodeType":"VariableDeclaration","scope":15048,"src":"52848:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15040,"name":"string","nodeType":"ElementaryTypeName","src":"52848:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15043,"mutability":"mutable","name":"value","nameLocation":"52879:5:15","nodeType":"VariableDeclaration","scope":15048,"src":"52874:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15042,"name":"bool","nodeType":"ElementaryTypeName","src":"52874:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"52820:65:15"},"returnParameters":{"id":15047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15046,"mutability":"mutable","name":"json","nameLocation":"52934:4:15","nodeType":"VariableDeclaration","scope":15048,"src":"52920:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15045,"name":"string","nodeType":"ElementaryTypeName","src":"52920:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52919:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15061,"nodeType":"FunctionDefinition","src":"52975:154:15","nodes":[],"documentation":{"id":15049,"nodeType":"StructuredDocumentation","src":"52946:24:15","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"52984:13:15","parameters":{"id":15057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15051,"mutability":"mutable","name":"objectKey","nameLocation":"53014:9:15","nodeType":"VariableDeclaration","scope":15061,"src":"52998:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15050,"name":"string","nodeType":"ElementaryTypeName","src":"52998:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15053,"mutability":"mutable","name":"valueKey","nameLocation":"53041:8:15","nodeType":"VariableDeclaration","scope":15061,"src":"53025:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15052,"name":"string","nodeType":"ElementaryTypeName","src":"53025:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15056,"mutability":"mutable","name":"values","nameLocation":"53067:6:15","nodeType":"VariableDeclaration","scope":15061,"src":"53051:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15054,"name":"bool","nodeType":"ElementaryTypeName","src":"53051:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15055,"nodeType":"ArrayTypeName","src":"53051:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"52997:77:15"},"returnParameters":{"id":15060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15059,"mutability":"mutable","name":"json","nameLocation":"53123:4:15","nodeType":"VariableDeclaration","scope":15061,"src":"53109:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15058,"name":"string","nodeType":"ElementaryTypeName","src":"53109:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53108:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15073,"nodeType":"FunctionDefinition","src":"53164:148:15","nodes":[],"documentation":{"id":15062,"nodeType":"StructuredDocumentation","src":"53135:24:15","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"53173:16:15","parameters":{"id":15069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15064,"mutability":"mutable","name":"objectKey","nameLocation":"53206:9:15","nodeType":"VariableDeclaration","scope":15073,"src":"53190:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15063,"name":"string","nodeType":"ElementaryTypeName","src":"53190:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15066,"mutability":"mutable","name":"valueKey","nameLocation":"53233:8:15","nodeType":"VariableDeclaration","scope":15073,"src":"53217:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15065,"name":"string","nodeType":"ElementaryTypeName","src":"53217:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15068,"mutability":"mutable","name":"value","nameLocation":"53251:5:15","nodeType":"VariableDeclaration","scope":15073,"src":"53243:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53243:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53189:68:15"},"returnParameters":{"id":15072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15071,"mutability":"mutable","name":"json","nameLocation":"53306:4:15","nodeType":"VariableDeclaration","scope":15073,"src":"53292:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15070,"name":"string","nodeType":"ElementaryTypeName","src":"53292:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53291:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15086,"nodeType":"FunctionDefinition","src":"53347:160:15","nodes":[],"documentation":{"id":15074,"nodeType":"StructuredDocumentation","src":"53318:24:15","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"53356:16:15","parameters":{"id":15082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15076,"mutability":"mutable","name":"objectKey","nameLocation":"53389:9:15","nodeType":"VariableDeclaration","scope":15086,"src":"53373:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15075,"name":"string","nodeType":"ElementaryTypeName","src":"53373:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15078,"mutability":"mutable","name":"valueKey","nameLocation":"53416:8:15","nodeType":"VariableDeclaration","scope":15086,"src":"53400:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15077,"name":"string","nodeType":"ElementaryTypeName","src":"53400:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15081,"mutability":"mutable","name":"values","nameLocation":"53445:6:15","nodeType":"VariableDeclaration","scope":15086,"src":"53426:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53426:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15080,"nodeType":"ArrayTypeName","src":"53426:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"53372:80:15"},"returnParameters":{"id":15085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15084,"mutability":"mutable","name":"json","nameLocation":"53501:4:15","nodeType":"VariableDeclaration","scope":15086,"src":"53487:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15083,"name":"string","nodeType":"ElementaryTypeName","src":"53487:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53486:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15098,"nodeType":"FunctionDefinition","src":"53542:153:15","nodes":[],"documentation":{"id":15087,"nodeType":"StructuredDocumentation","src":"53513:24:15","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"53551:14:15","parameters":{"id":15094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15089,"mutability":"mutable","name":"objectKey","nameLocation":"53582:9:15","nodeType":"VariableDeclaration","scope":15098,"src":"53566:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15088,"name":"string","nodeType":"ElementaryTypeName","src":"53566:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15091,"mutability":"mutable","name":"valueKey","nameLocation":"53609:8:15","nodeType":"VariableDeclaration","scope":15098,"src":"53593:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15090,"name":"string","nodeType":"ElementaryTypeName","src":"53593:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15093,"mutability":"mutable","name":"value","nameLocation":"53634:5:15","nodeType":"VariableDeclaration","scope":15098,"src":"53619:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15092,"name":"bytes","nodeType":"ElementaryTypeName","src":"53619:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"53565:75:15"},"returnParameters":{"id":15097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15096,"mutability":"mutable","name":"json","nameLocation":"53689:4:15","nodeType":"VariableDeclaration","scope":15098,"src":"53675:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15095,"name":"string","nodeType":"ElementaryTypeName","src":"53675:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53674:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15111,"nodeType":"FunctionDefinition","src":"53730:156:15","nodes":[],"documentation":{"id":15099,"nodeType":"StructuredDocumentation","src":"53701:24:15","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"53739:14:15","parameters":{"id":15107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15101,"mutability":"mutable","name":"objectKey","nameLocation":"53770:9:15","nodeType":"VariableDeclaration","scope":15111,"src":"53754:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15100,"name":"string","nodeType":"ElementaryTypeName","src":"53754:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15103,"mutability":"mutable","name":"valueKey","nameLocation":"53797:8:15","nodeType":"VariableDeclaration","scope":15111,"src":"53781:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15102,"name":"string","nodeType":"ElementaryTypeName","src":"53781:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15106,"mutability":"mutable","name":"values","nameLocation":"53824:6:15","nodeType":"VariableDeclaration","scope":15111,"src":"53807:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15104,"name":"bytes","nodeType":"ElementaryTypeName","src":"53807:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15105,"nodeType":"ArrayTypeName","src":"53807:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"53753:78:15"},"returnParameters":{"id":15110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15109,"mutability":"mutable","name":"json","nameLocation":"53880:4:15","nodeType":"VariableDeclaration","scope":15111,"src":"53866:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15108,"name":"string","nodeType":"ElementaryTypeName","src":"53866:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53865:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15123,"nodeType":"FunctionDefinition","src":"53921:143:15","nodes":[],"documentation":{"id":15112,"nodeType":"StructuredDocumentation","src":"53892:24:15","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"53930:12:15","parameters":{"id":15119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15114,"mutability":"mutable","name":"objectKey","nameLocation":"53959:9:15","nodeType":"VariableDeclaration","scope":15123,"src":"53943:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15113,"name":"string","nodeType":"ElementaryTypeName","src":"53943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15116,"mutability":"mutable","name":"valueKey","nameLocation":"53986:8:15","nodeType":"VariableDeclaration","scope":15123,"src":"53970:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15115,"name":"string","nodeType":"ElementaryTypeName","src":"53970:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15118,"mutability":"mutable","name":"value","nameLocation":"54003:5:15","nodeType":"VariableDeclaration","scope":15123,"src":"53996:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15117,"name":"int256","nodeType":"ElementaryTypeName","src":"53996:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"53942:67:15"},"returnParameters":{"id":15122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15121,"mutability":"mutable","name":"json","nameLocation":"54058:4:15","nodeType":"VariableDeclaration","scope":15123,"src":"54044:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15120,"name":"string","nodeType":"ElementaryTypeName","src":"54044:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54043:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15136,"nodeType":"FunctionDefinition","src":"54099:155:15","nodes":[],"documentation":{"id":15124,"nodeType":"StructuredDocumentation","src":"54070:24:15","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"54108:12:15","parameters":{"id":15132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15126,"mutability":"mutable","name":"objectKey","nameLocation":"54137:9:15","nodeType":"VariableDeclaration","scope":15136,"src":"54121:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15125,"name":"string","nodeType":"ElementaryTypeName","src":"54121:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15128,"mutability":"mutable","name":"valueKey","nameLocation":"54164:8:15","nodeType":"VariableDeclaration","scope":15136,"src":"54148:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15127,"name":"string","nodeType":"ElementaryTypeName","src":"54148:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15131,"mutability":"mutable","name":"values","nameLocation":"54192:6:15","nodeType":"VariableDeclaration","scope":15136,"src":"54174:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15129,"name":"int256","nodeType":"ElementaryTypeName","src":"54174:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15130,"nodeType":"ArrayTypeName","src":"54174:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"54120:79:15"},"returnParameters":{"id":15135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15134,"mutability":"mutable","name":"json","nameLocation":"54248:4:15","nodeType":"VariableDeclaration","scope":15136,"src":"54234:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15133,"name":"string","nodeType":"ElementaryTypeName","src":"54234:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54233:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15146,"nodeType":"FunctionDefinition","src":"54451:111:15","nodes":[],"documentation":{"id":15137,"nodeType":"StructuredDocumentation","src":"54260:186:15","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"54460:13:15","parameters":{"id":15142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15139,"mutability":"mutable","name":"objectKey","nameLocation":"54490:9:15","nodeType":"VariableDeclaration","scope":15146,"src":"54474:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15138,"name":"string","nodeType":"ElementaryTypeName","src":"54474:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15141,"mutability":"mutable","name":"value","nameLocation":"54517:5:15","nodeType":"VariableDeclaration","scope":15146,"src":"54501:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15140,"name":"string","nodeType":"ElementaryTypeName","src":"54501:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54473:50:15"},"returnParameters":{"id":15145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15144,"mutability":"mutable","name":"json","nameLocation":"54556:4:15","nodeType":"VariableDeclaration","scope":15146,"src":"54542:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15143,"name":"string","nodeType":"ElementaryTypeName","src":"54542:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54541:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15156,"nodeType":"FunctionDefinition","src":"54597:149:15","nodes":[],"documentation":{"id":15147,"nodeType":"StructuredDocumentation","src":"54568:24:15","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"54606:17:15","parameters":{"id":15152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15149,"mutability":"mutable","name":"typeDescription","nameLocation":"54640:15:15","nodeType":"VariableDeclaration","scope":15156,"src":"54624:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15148,"name":"string","nodeType":"ElementaryTypeName","src":"54624:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15151,"mutability":"mutable","name":"value","nameLocation":"54672:5:15","nodeType":"VariableDeclaration","scope":15156,"src":"54657:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15150,"name":"bytes","nodeType":"ElementaryTypeName","src":"54657:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54623:55:15"},"returnParameters":{"id":15155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15154,"mutability":"mutable","name":"json","nameLocation":"54740:4:15","nodeType":"VariableDeclaration","scope":15156,"src":"54726:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15153,"name":"string","nodeType":"ElementaryTypeName","src":"54726:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54725:20:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15170,"nodeType":"FunctionDefinition","src":"54781:211:15","nodes":[],"documentation":{"id":15157,"nodeType":"StructuredDocumentation","src":"54752:24:15","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"54790:17:15","parameters":{"id":15166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15159,"mutability":"mutable","name":"objectKey","nameLocation":"54833:9:15","nodeType":"VariableDeclaration","scope":15170,"src":"54817:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15158,"name":"string","nodeType":"ElementaryTypeName","src":"54817:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15161,"mutability":"mutable","name":"valueKey","nameLocation":"54868:8:15","nodeType":"VariableDeclaration","scope":15170,"src":"54852:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15160,"name":"string","nodeType":"ElementaryTypeName","src":"54852:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15163,"mutability":"mutable","name":"typeDescription","nameLocation":"54902:15:15","nodeType":"VariableDeclaration","scope":15170,"src":"54886:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15162,"name":"string","nodeType":"ElementaryTypeName","src":"54886:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15165,"mutability":"mutable","name":"value","nameLocation":"54942:5:15","nodeType":"VariableDeclaration","scope":15170,"src":"54927:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15164,"name":"bytes","nodeType":"ElementaryTypeName","src":"54927:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"54807:146:15"},"returnParameters":{"id":15169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15168,"mutability":"mutable","name":"json","nameLocation":"54986:4:15","nodeType":"VariableDeclaration","scope":15170,"src":"54972:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15167,"name":"string","nodeType":"ElementaryTypeName","src":"54972:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54971:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15182,"nodeType":"FunctionDefinition","src":"55027:155:15","nodes":[],"documentation":{"id":15171,"nodeType":"StructuredDocumentation","src":"54998:24:15","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"55036:15:15","parameters":{"id":15178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15173,"mutability":"mutable","name":"objectKey","nameLocation":"55068:9:15","nodeType":"VariableDeclaration","scope":15182,"src":"55052:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15172,"name":"string","nodeType":"ElementaryTypeName","src":"55052:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15175,"mutability":"mutable","name":"valueKey","nameLocation":"55095:8:15","nodeType":"VariableDeclaration","scope":15182,"src":"55079:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15174,"name":"string","nodeType":"ElementaryTypeName","src":"55079:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15177,"mutability":"mutable","name":"value","nameLocation":"55121:5:15","nodeType":"VariableDeclaration","scope":15182,"src":"55105:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15176,"name":"string","nodeType":"ElementaryTypeName","src":"55105:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55051:76:15"},"returnParameters":{"id":15181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15180,"mutability":"mutable","name":"json","nameLocation":"55176:4:15","nodeType":"VariableDeclaration","scope":15182,"src":"55162:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15179,"name":"string","nodeType":"ElementaryTypeName","src":"55162:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55161:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15195,"nodeType":"FunctionDefinition","src":"55217:158:15","nodes":[],"documentation":{"id":15183,"nodeType":"StructuredDocumentation","src":"55188:24:15","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"55226:15:15","parameters":{"id":15191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15185,"mutability":"mutable","name":"objectKey","nameLocation":"55258:9:15","nodeType":"VariableDeclaration","scope":15195,"src":"55242:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15184,"name":"string","nodeType":"ElementaryTypeName","src":"55242:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15187,"mutability":"mutable","name":"valueKey","nameLocation":"55285:8:15","nodeType":"VariableDeclaration","scope":15195,"src":"55269:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15186,"name":"string","nodeType":"ElementaryTypeName","src":"55269:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15190,"mutability":"mutable","name":"values","nameLocation":"55313:6:15","nodeType":"VariableDeclaration","scope":15195,"src":"55295:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15188,"name":"string","nodeType":"ElementaryTypeName","src":"55295:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15189,"nodeType":"ArrayTypeName","src":"55295:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"55241:79:15"},"returnParameters":{"id":15194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15193,"mutability":"mutable","name":"json","nameLocation":"55369:4:15","nodeType":"VariableDeclaration","scope":15195,"src":"55355:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15192,"name":"string","nodeType":"ElementaryTypeName","src":"55355:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55354:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15207,"nodeType":"FunctionDefinition","src":"55410:150:15","nodes":[],"documentation":{"id":15196,"nodeType":"StructuredDocumentation","src":"55381:24:15","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"55419:18:15","parameters":{"id":15203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15198,"mutability":"mutable","name":"objectKey","nameLocation":"55454:9:15","nodeType":"VariableDeclaration","scope":15207,"src":"55438:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15197,"name":"string","nodeType":"ElementaryTypeName","src":"55438:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15200,"mutability":"mutable","name":"valueKey","nameLocation":"55481:8:15","nodeType":"VariableDeclaration","scope":15207,"src":"55465:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15199,"name":"string","nodeType":"ElementaryTypeName","src":"55465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15202,"mutability":"mutable","name":"value","nameLocation":"55499:5:15","nodeType":"VariableDeclaration","scope":15207,"src":"55491:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15201,"name":"uint256","nodeType":"ElementaryTypeName","src":"55491:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55437:68:15"},"returnParameters":{"id":15206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15205,"mutability":"mutable","name":"json","nameLocation":"55554:4:15","nodeType":"VariableDeclaration","scope":15207,"src":"55540:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15204,"name":"string","nodeType":"ElementaryTypeName","src":"55540:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55539:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15219,"nodeType":"FunctionDefinition","src":"55595:145:15","nodes":[],"documentation":{"id":15208,"nodeType":"StructuredDocumentation","src":"55566:24:15","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"55604:13:15","parameters":{"id":15215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15210,"mutability":"mutable","name":"objectKey","nameLocation":"55634:9:15","nodeType":"VariableDeclaration","scope":15219,"src":"55618:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15209,"name":"string","nodeType":"ElementaryTypeName","src":"55618:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15212,"mutability":"mutable","name":"valueKey","nameLocation":"55661:8:15","nodeType":"VariableDeclaration","scope":15219,"src":"55645:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15211,"name":"string","nodeType":"ElementaryTypeName","src":"55645:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15214,"mutability":"mutable","name":"value","nameLocation":"55679:5:15","nodeType":"VariableDeclaration","scope":15219,"src":"55671:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15213,"name":"uint256","nodeType":"ElementaryTypeName","src":"55671:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55617:68:15"},"returnParameters":{"id":15218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15217,"mutability":"mutable","name":"json","nameLocation":"55734:4:15","nodeType":"VariableDeclaration","scope":15219,"src":"55720:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15216,"name":"string","nodeType":"ElementaryTypeName","src":"55720:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55719:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15232,"nodeType":"FunctionDefinition","src":"55775:157:15","nodes":[],"documentation":{"id":15220,"nodeType":"StructuredDocumentation","src":"55746:24:15","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"55784:13:15","parameters":{"id":15228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15222,"mutability":"mutable","name":"objectKey","nameLocation":"55814:9:15","nodeType":"VariableDeclaration","scope":15232,"src":"55798:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15221,"name":"string","nodeType":"ElementaryTypeName","src":"55798:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15224,"mutability":"mutable","name":"valueKey","nameLocation":"55841:8:15","nodeType":"VariableDeclaration","scope":15232,"src":"55825:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15223,"name":"string","nodeType":"ElementaryTypeName","src":"55825:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15227,"mutability":"mutable","name":"values","nameLocation":"55870:6:15","nodeType":"VariableDeclaration","scope":15232,"src":"55851:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15225,"name":"uint256","nodeType":"ElementaryTypeName","src":"55851:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15226,"nodeType":"ArrayTypeName","src":"55851:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"55797:80:15"},"returnParameters":{"id":15231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15230,"mutability":"mutable","name":"json","nameLocation":"55926:4:15","nodeType":"VariableDeclaration","scope":15232,"src":"55912:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15229,"name":"string","nodeType":"ElementaryTypeName","src":"55912:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55911:20:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15240,"nodeType":"FunctionDefinition","src":"56032:72:15","nodes":[],"documentation":{"id":15233,"nodeType":"StructuredDocumentation","src":"55938:89:15","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"56041:9:15","parameters":{"id":15238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15235,"mutability":"mutable","name":"json","nameLocation":"56067:4:15","nodeType":"VariableDeclaration","scope":15240,"src":"56051:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15234,"name":"string","nodeType":"ElementaryTypeName","src":"56051:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15237,"mutability":"mutable","name":"path","nameLocation":"56089:4:15","nodeType":"VariableDeclaration","scope":15240,"src":"56073:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15236,"name":"string","nodeType":"ElementaryTypeName","src":"56073:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56050:44:15"},"returnParameters":{"id":15239,"nodeType":"ParameterList","parameters":[],"src":"56103:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15250,"nodeType":"FunctionDefinition","src":"56407:98:15","nodes":[],"documentation":{"id":15241,"nodeType":"StructuredDocumentation","src":"56110:292:15","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\n This cheatcode will create new keys if they didn't previously exist."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"56416:9:15","parameters":{"id":15248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15243,"mutability":"mutable","name":"json","nameLocation":"56442:4:15","nodeType":"VariableDeclaration","scope":15250,"src":"56426:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15242,"name":"string","nodeType":"ElementaryTypeName","src":"56426:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15245,"mutability":"mutable","name":"path","nameLocation":"56464:4:15","nodeType":"VariableDeclaration","scope":15250,"src":"56448:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15244,"name":"string","nodeType":"ElementaryTypeName","src":"56448:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15247,"mutability":"mutable","name":"valueKey","nameLocation":"56486:8:15","nodeType":"VariableDeclaration","scope":15250,"src":"56470:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15246,"name":"string","nodeType":"ElementaryTypeName","src":"56470:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56425:70:15"},"returnParameters":{"id":15249,"nodeType":"ParameterList","parameters":[],"src":"56504:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15260,"nodeType":"FunctionDefinition","src":"56667:91:15","nodes":[],"documentation":{"id":15251,"nodeType":"StructuredDocumentation","src":"56511:151:15","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"56676:9:15","parameters":{"id":15256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15253,"mutability":"mutable","name":"json","nameLocation":"56702:4:15","nodeType":"VariableDeclaration","scope":15260,"src":"56686:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15252,"name":"string","nodeType":"ElementaryTypeName","src":"56686:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15255,"mutability":"mutable","name":"key","nameLocation":"56724:3:15","nodeType":"VariableDeclaration","scope":15260,"src":"56708:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15254,"name":"string","nodeType":"ElementaryTypeName","src":"56708:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56685:43:15"},"returnParameters":{"id":15259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15260,"src":"56752:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15257,"name":"bool","nodeType":"ElementaryTypeName","src":"56752:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56751:6:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15266,"nodeType":"FunctionDefinition","src":"56849:50:15","nodes":[],"documentation":{"id":15261,"nodeType":"StructuredDocumentation","src":"56800:44:15","text":"Attach an EIP-4844 blob to the next call"},"functionSelector":"10cb385c","implemented":false,"kind":"function","modifiers":[],"name":"attachBlob","nameLocation":"56858:10:15","parameters":{"id":15264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15263,"mutability":"mutable","name":"blob","nameLocation":"56884:4:15","nodeType":"VariableDeclaration","scope":15266,"src":"56869:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15262,"name":"bytes","nodeType":"ElementaryTypeName","src":"56869:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"56868:21:15"},"returnParameters":{"id":15265,"nodeType":"ParameterList","parameters":[],"src":"56898:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15273,"nodeType":"FunctionDefinition","src":"56964:79:15","nodes":[],"documentation":{"id":15267,"nodeType":"StructuredDocumentation","src":"56905:54:15","text":"Designate the next call as an EIP-7702 transaction"},"functionSelector":"14ae3519","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"56973:16:15","parameters":{"id":15271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15270,"mutability":"mutable","name":"signedDelegation","nameLocation":"57016:16:15","nodeType":"VariableDeclaration","scope":15273,"src":"56990:42:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15269,"nodeType":"UserDefinedTypeName","pathNode":{"id":15268,"name":"SignedDelegation","nameLocations":["56990:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"56990:16:15"},"referencedDeclaration":13497,"src":"56990:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"56989:44:15"},"returnParameters":{"id":15272,"nodeType":"ParameterList","parameters":[],"src":"57042:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15282,"nodeType":"FunctionDefinition","src":"57145:96:15","nodes":[],"documentation":{"id":15274,"nodeType":"StructuredDocumentation","src":"57049:91:15","text":"Designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"functionSelector":"f4460d34","implemented":false,"kind":"function","modifiers":[],"name":"attachDelegation","nameLocation":"57154:16:15","parameters":{"id":15280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15277,"mutability":"mutable","name":"signedDelegation","nameLocation":"57197:16:15","nodeType":"VariableDeclaration","scope":15282,"src":"57171:42:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_calldata_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15276,"nodeType":"UserDefinedTypeName","pathNode":{"id":15275,"name":"SignedDelegation","nameLocations":["57171:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"57171:16:15"},"referencedDeclaration":13497,"src":"57171:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"},{"constant":false,"id":15279,"mutability":"mutable","name":"crossChain","nameLocation":"57220:10:15","nodeType":"VariableDeclaration","scope":15282,"src":"57215:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15278,"name":"bool","nodeType":"ElementaryTypeName","src":"57215:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"57170:61:15"},"returnParameters":{"id":15281,"nodeType":"ParameterList","parameters":[],"src":"57240:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15288,"nodeType":"FunctionDefinition","src":"57316:63:15","nodes":[],"documentation":{"id":15283,"nodeType":"StructuredDocumentation","src":"57247:64:15","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"57325:23:15","parameters":{"id":15286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15285,"mutability":"mutable","name":"data","nameLocation":"57364:4:15","nodeType":"VariableDeclaration","scope":15288,"src":"57349:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15284,"name":"bytes","nodeType":"ElementaryTypeName","src":"57349:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"57348:21:15"},"returnParameters":{"id":15287,"nodeType":"ParameterList","parameters":[],"src":"57378:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15292,"nodeType":"FunctionDefinition","src":"57882:30:15","nodes":[],"documentation":{"id":15289,"nodeType":"StructuredDocumentation","src":"57385:492:15","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"57891:9:15","parameters":{"id":15290,"nodeType":"ParameterList","parameters":[],"src":"57900:2:15"},"returnParameters":{"id":15291,"nodeType":"ParameterList","parameters":[],"src":"57911:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15298,"nodeType":"FunctionDefinition","src":"58082:44:15","nodes":[],"documentation":{"id":15293,"nodeType":"StructuredDocumentation","src":"57918:159:15","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"58091:9:15","parameters":{"id":15296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15295,"mutability":"mutable","name":"signer","nameLocation":"58109:6:15","nodeType":"VariableDeclaration","scope":15298,"src":"58101:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15294,"name":"address","nodeType":"ElementaryTypeName","src":"58101:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"58100:16:15"},"returnParameters":{"id":15297,"nodeType":"ParameterList","parameters":[],"src":"58125:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15304,"nodeType":"FunctionDefinition","src":"58300:48:15","nodes":[],"documentation":{"id":15299,"nodeType":"StructuredDocumentation","src":"58132:163:15","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"58309:9:15","parameters":{"id":15302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15301,"mutability":"mutable","name":"privateKey","nameLocation":"58327:10:15","nodeType":"VariableDeclaration","scope":15304,"src":"58319:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15300,"name":"uint256","nodeType":"ElementaryTypeName","src":"58319:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58318:20:15"},"returnParameters":{"id":15303,"nodeType":"ParameterList","parameters":[],"src":"58347:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15311,"nodeType":"FunctionDefinition","src":"58437:71:15","nodes":[],"documentation":{"id":15305,"nodeType":"StructuredDocumentation","src":"58354:78:15","text":"Returns addresses of available unlocked wallets in the script environment."},"functionSelector":"db7a4605","implemented":false,"kind":"function","modifiers":[],"name":"getWallets","nameLocation":"58446:10:15","parameters":{"id":15306,"nodeType":"ParameterList","parameters":[],"src":"58456:2:15"},"returnParameters":{"id":15310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15309,"mutability":"mutable","name":"wallets","nameLocation":"58499:7:15","nodeType":"VariableDeclaration","scope":15311,"src":"58482:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15307,"name":"address","nodeType":"ElementaryTypeName","src":"58482:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15308,"nodeType":"ArrayTypeName","src":"58482:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"58481:26:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15322,"nodeType":"FunctionDefinition","src":"58608:153:15","nodes":[],"documentation":{"id":15312,"nodeType":"StructuredDocumentation","src":"58514:89:15","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction"},"functionSelector":"c7fa7288","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"58617:23:15","parameters":{"id":15317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15314,"mutability":"mutable","name":"implementation","nameLocation":"58649:14:15","nodeType":"VariableDeclaration","scope":15322,"src":"58641:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15313,"name":"address","nodeType":"ElementaryTypeName","src":"58641:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15316,"mutability":"mutable","name":"privateKey","nameLocation":"58673:10:15","nodeType":"VariableDeclaration","scope":15322,"src":"58665:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15315,"name":"uint256","nodeType":"ElementaryTypeName","src":"58665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58640:44:15"},"returnParameters":{"id":15321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15320,"mutability":"mutable","name":"signedDelegation","nameLocation":"58743:16:15","nodeType":"VariableDeclaration","scope":15322,"src":"58719:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15319,"nodeType":"UserDefinedTypeName","pathNode":{"id":15318,"name":"SignedDelegation","nameLocations":["58719:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"58719:16:15"},"referencedDeclaration":13497,"src":"58719:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"58718:42:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15335,"nodeType":"FunctionDefinition","src":"58880:167:15","nodes":[],"documentation":{"id":15323,"nodeType":"StructuredDocumentation","src":"58767:108:15","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction for specific nonce"},"functionSelector":"cde3e5be","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"58889:23:15","parameters":{"id":15330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15325,"mutability":"mutable","name":"implementation","nameLocation":"58921:14:15","nodeType":"VariableDeclaration","scope":15335,"src":"58913:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15324,"name":"address","nodeType":"ElementaryTypeName","src":"58913:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15327,"mutability":"mutable","name":"privateKey","nameLocation":"58945:10:15","nodeType":"VariableDeclaration","scope":15335,"src":"58937:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15326,"name":"uint256","nodeType":"ElementaryTypeName","src":"58937:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15329,"mutability":"mutable","name":"nonce","nameLocation":"58964:5:15","nodeType":"VariableDeclaration","scope":15335,"src":"58957:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15328,"name":"uint64","nodeType":"ElementaryTypeName","src":"58957:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"58912:58:15"},"returnParameters":{"id":15334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15333,"mutability":"mutable","name":"signedDelegation","nameLocation":"59029:16:15","nodeType":"VariableDeclaration","scope":15335,"src":"59005:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15332,"nodeType":"UserDefinedTypeName","pathNode":{"id":15331,"name":"SignedDelegation","nameLocations":["59005:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"59005:16:15"},"referencedDeclaration":13497,"src":"59005:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"59004:42:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15348,"nodeType":"FunctionDefinition","src":"59184:170:15","nodes":[],"documentation":{"id":15336,"nodeType":"StructuredDocumentation","src":"59053:126:15","text":"Sign an EIP-7702 authorization and designate the next call as an EIP-7702 transaction, with optional cross-chain validity."},"functionSelector":"d936e146","implemented":false,"kind":"function","modifiers":[],"name":"signAndAttachDelegation","nameLocation":"59193:23:15","parameters":{"id":15343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15338,"mutability":"mutable","name":"implementation","nameLocation":"59225:14:15","nodeType":"VariableDeclaration","scope":15348,"src":"59217:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15337,"name":"address","nodeType":"ElementaryTypeName","src":"59217:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15340,"mutability":"mutable","name":"privateKey","nameLocation":"59249:10:15","nodeType":"VariableDeclaration","scope":15348,"src":"59241:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15339,"name":"uint256","nodeType":"ElementaryTypeName","src":"59241:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15342,"mutability":"mutable","name":"crossChain","nameLocation":"59266:10:15","nodeType":"VariableDeclaration","scope":15348,"src":"59261:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15341,"name":"bool","nodeType":"ElementaryTypeName","src":"59261:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"59216:61:15"},"returnParameters":{"id":15347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15346,"mutability":"mutable","name":"signedDelegation","nameLocation":"59336:16:15","nodeType":"VariableDeclaration","scope":15348,"src":"59312:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15345,"nodeType":"UserDefinedTypeName","pathNode":{"id":15344,"name":"SignedDelegation","nameLocations":["59312:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"59312:16:15"},"referencedDeclaration":13497,"src":"59312:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"59311:42:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15359,"nodeType":"FunctionDefinition","src":"59414:144:15","nodes":[],"documentation":{"id":15349,"nodeType":"StructuredDocumentation","src":"59360:49:15","text":"Sign an EIP-7702 authorization for delegation"},"functionSelector":"5b593c7b","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"59423:14:15","parameters":{"id":15354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15351,"mutability":"mutable","name":"implementation","nameLocation":"59446:14:15","nodeType":"VariableDeclaration","scope":15359,"src":"59438:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15350,"name":"address","nodeType":"ElementaryTypeName","src":"59438:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15353,"mutability":"mutable","name":"privateKey","nameLocation":"59470:10:15","nodeType":"VariableDeclaration","scope":15359,"src":"59462:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15352,"name":"uint256","nodeType":"ElementaryTypeName","src":"59462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59437:44:15"},"returnParameters":{"id":15358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15357,"mutability":"mutable","name":"signedDelegation","nameLocation":"59540:16:15","nodeType":"VariableDeclaration","scope":15359,"src":"59516:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15356,"nodeType":"UserDefinedTypeName","pathNode":{"id":15355,"name":"SignedDelegation","nameLocations":["59516:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"59516:16:15"},"referencedDeclaration":13497,"src":"59516:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"59515:42:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15372,"nodeType":"FunctionDefinition","src":"59637:158:15","nodes":[],"documentation":{"id":15360,"nodeType":"StructuredDocumentation","src":"59564:68:15","text":"Sign an EIP-7702 authorization for delegation for specific nonce"},"functionSelector":"ceba2ec3","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"59646:14:15","parameters":{"id":15367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15362,"mutability":"mutable","name":"implementation","nameLocation":"59669:14:15","nodeType":"VariableDeclaration","scope":15372,"src":"59661:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15361,"name":"address","nodeType":"ElementaryTypeName","src":"59661:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15364,"mutability":"mutable","name":"privateKey","nameLocation":"59693:10:15","nodeType":"VariableDeclaration","scope":15372,"src":"59685:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15363,"name":"uint256","nodeType":"ElementaryTypeName","src":"59685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15366,"mutability":"mutable","name":"nonce","nameLocation":"59712:5:15","nodeType":"VariableDeclaration","scope":15372,"src":"59705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15365,"name":"uint64","nodeType":"ElementaryTypeName","src":"59705:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"59660:58:15"},"returnParameters":{"id":15371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15370,"mutability":"mutable","name":"signedDelegation","nameLocation":"59777:16:15","nodeType":"VariableDeclaration","scope":15372,"src":"59753:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15369,"nodeType":"UserDefinedTypeName","pathNode":{"id":15368,"name":"SignedDelegation","nameLocations":["59753:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"59753:16:15"},"referencedDeclaration":13497,"src":"59753:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"59752:42:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15385,"nodeType":"FunctionDefinition","src":"59892:161:15","nodes":[],"documentation":{"id":15373,"nodeType":"StructuredDocumentation","src":"59801:86:15","text":"Sign an EIP-7702 authorization for delegation, with optional cross-chain validity."},"functionSelector":"cdd7563d","implemented":false,"kind":"function","modifiers":[],"name":"signDelegation","nameLocation":"59901:14:15","parameters":{"id":15380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15375,"mutability":"mutable","name":"implementation","nameLocation":"59924:14:15","nodeType":"VariableDeclaration","scope":15385,"src":"59916:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15374,"name":"address","nodeType":"ElementaryTypeName","src":"59916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15377,"mutability":"mutable","name":"privateKey","nameLocation":"59948:10:15","nodeType":"VariableDeclaration","scope":15385,"src":"59940:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15376,"name":"uint256","nodeType":"ElementaryTypeName","src":"59940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15379,"mutability":"mutable","name":"crossChain","nameLocation":"59965:10:15","nodeType":"VariableDeclaration","scope":15385,"src":"59960:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15378,"name":"bool","nodeType":"ElementaryTypeName","src":"59960:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"59915:61:15"},"returnParameters":{"id":15384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15383,"mutability":"mutable","name":"signedDelegation","nameLocation":"60035:16:15","nodeType":"VariableDeclaration","scope":15385,"src":"60011:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_memory_ptr","typeString":"struct VmSafe.SignedDelegation"},"typeName":{"id":15382,"nodeType":"UserDefinedTypeName","pathNode":{"id":15381,"name":"SignedDelegation","nameLocations":["60011:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":13497,"src":"60011:16:15"},"referencedDeclaration":13497,"src":"60011:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_SignedDelegation_$13497_storage_ptr","typeString":"struct VmSafe.SignedDelegation"}},"visibility":"internal"}],"src":"60010:42:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15389,"nodeType":"FunctionDefinition","src":"60563:35:15","nodes":[],"documentation":{"id":15386,"nodeType":"StructuredDocumentation","src":"60059:499:15","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"60572:14:15","parameters":{"id":15387,"nodeType":"ParameterList","parameters":[],"src":"60586:2:15"},"returnParameters":{"id":15388,"nodeType":"ParameterList","parameters":[],"src":"60597:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15395,"nodeType":"FunctionDefinition","src":"60760:49:15","nodes":[],"documentation":{"id":15390,"nodeType":"StructuredDocumentation","src":"60604:151:15","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"60769:14:15","parameters":{"id":15393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15392,"mutability":"mutable","name":"signer","nameLocation":"60792:6:15","nodeType":"VariableDeclaration","scope":15395,"src":"60784:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15391,"name":"address","nodeType":"ElementaryTypeName","src":"60784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"60783:16:15"},"returnParameters":{"id":15394,"nodeType":"ParameterList","parameters":[],"src":"60808:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15401,"nodeType":"FunctionDefinition","src":"60975:53:15","nodes":[],"documentation":{"id":15396,"nodeType":"StructuredDocumentation","src":"60815:155:15","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"60984:14:15","parameters":{"id":15399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15398,"mutability":"mutable","name":"privateKey","nameLocation":"61007:10:15","nodeType":"VariableDeclaration","scope":15401,"src":"60999:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15397,"name":"uint256","nodeType":"ElementaryTypeName","src":"60999:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60998:20:15"},"returnParameters":{"id":15400,"nodeType":"ParameterList","parameters":[],"src":"61027:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15405,"nodeType":"FunctionDefinition","src":"61081:34:15","nodes":[],"documentation":{"id":15402,"nodeType":"StructuredDocumentation","src":"61034:42:15","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"61090:13:15","parameters":{"id":15403,"nodeType":"ParameterList","parameters":[],"src":"61103:2:15"},"returnParameters":{"id":15404,"nodeType":"ParameterList","parameters":[],"src":"61114:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15415,"nodeType":"FunctionDefinition","src":"61227:103:15","nodes":[],"documentation":{"id":15406,"nodeType":"StructuredDocumentation","src":"61154:68:15","text":"Returns true if `search` is found in `subject`, false otherwise."},"functionSelector":"3fb18aec","implemented":false,"kind":"function","modifiers":[],"name":"contains","nameLocation":"61236:8:15","parameters":{"id":15411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15408,"mutability":"mutable","name":"subject","nameLocation":"61261:7:15","nodeType":"VariableDeclaration","scope":15415,"src":"61245:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15407,"name":"string","nodeType":"ElementaryTypeName","src":"61245:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15410,"mutability":"mutable","name":"search","nameLocation":"61286:6:15","nodeType":"VariableDeclaration","scope":15415,"src":"61270:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15409,"name":"string","nodeType":"ElementaryTypeName","src":"61270:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61244:49:15"},"returnParameters":{"id":15414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15413,"mutability":"mutable","name":"result","nameLocation":"61322:6:15","nodeType":"VariableDeclaration","scope":15415,"src":"61317:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15412,"name":"bool","nodeType":"ElementaryTypeName","src":"61317:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"61316:13:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15425,"nodeType":"FunctionDefinition","src":"61546:93:15","nodes":[],"documentation":{"id":15416,"nodeType":"StructuredDocumentation","src":"61336:205:15","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"61555:7:15","parameters":{"id":15421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15418,"mutability":"mutable","name":"input","nameLocation":"61579:5:15","nodeType":"VariableDeclaration","scope":15425,"src":"61563:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15417,"name":"string","nodeType":"ElementaryTypeName","src":"61563:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15420,"mutability":"mutable","name":"key","nameLocation":"61602:3:15","nodeType":"VariableDeclaration","scope":15425,"src":"61586:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15419,"name":"string","nodeType":"ElementaryTypeName","src":"61586:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61562:44:15"},"returnParameters":{"id":15424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15425,"src":"61630:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15422,"name":"uint256","nodeType":"ElementaryTypeName","src":"61630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61629:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15433,"nodeType":"FunctionDefinition","src":"61698:100:15","nodes":[],"documentation":{"id":15426,"nodeType":"StructuredDocumentation","src":"61645:48:15","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"61707:12:15","parameters":{"id":15429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15428,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61736:16:15","nodeType":"VariableDeclaration","scope":15433,"src":"61720:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15427,"name":"string","nodeType":"ElementaryTypeName","src":"61720:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61719:34:15"},"returnParameters":{"id":15432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15431,"mutability":"mutable","name":"parsedValue","nameLocation":"61785:11:15","nodeType":"VariableDeclaration","scope":15433,"src":"61777:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15430,"name":"address","nodeType":"ElementaryTypeName","src":"61777:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61776:21:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15441,"nodeType":"FunctionDefinition","src":"61853:94:15","nodes":[],"documentation":{"id":15434,"nodeType":"StructuredDocumentation","src":"61804:44:15","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"61862:9:15","parameters":{"id":15437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15436,"mutability":"mutable","name":"stringifiedValue","nameLocation":"61888:16:15","nodeType":"VariableDeclaration","scope":15441,"src":"61872:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15435,"name":"string","nodeType":"ElementaryTypeName","src":"61872:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61871:34:15"},"returnParameters":{"id":15440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15439,"mutability":"mutable","name":"parsedValue","nameLocation":"61934:11:15","nodeType":"VariableDeclaration","scope":15441,"src":"61929:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15438,"name":"bool","nodeType":"ElementaryTypeName","src":"61929:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"61928:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15449,"nodeType":"FunctionDefinition","src":"62001:103:15","nodes":[],"documentation":{"id":15442,"nodeType":"StructuredDocumentation","src":"61953:43:15","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"62010:10:15","parameters":{"id":15445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15444,"mutability":"mutable","name":"stringifiedValue","nameLocation":"62037:16:15","nodeType":"VariableDeclaration","scope":15449,"src":"62021:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15443,"name":"string","nodeType":"ElementaryTypeName","src":"62021:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62020:34:15"},"returnParameters":{"id":15448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15447,"mutability":"mutable","name":"parsedValue","nameLocation":"62091:11:15","nodeType":"VariableDeclaration","scope":15449,"src":"62078:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15446,"name":"bytes","nodeType":"ElementaryTypeName","src":"62078:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"62077:26:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15457,"nodeType":"FunctionDefinition","src":"62162:100:15","nodes":[],"documentation":{"id":15450,"nodeType":"StructuredDocumentation","src":"62110:47:15","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"62171:12:15","parameters":{"id":15453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15452,"mutability":"mutable","name":"stringifiedValue","nameLocation":"62200:16:15","nodeType":"VariableDeclaration","scope":15457,"src":"62184:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15451,"name":"string","nodeType":"ElementaryTypeName","src":"62184:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62183:34:15"},"returnParameters":{"id":15456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15455,"mutability":"mutable","name":"parsedValue","nameLocation":"62249:11:15","nodeType":"VariableDeclaration","scope":15457,"src":"62241:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62241:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"62240:21:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15465,"nodeType":"FunctionDefinition","src":"62319:95:15","nodes":[],"documentation":{"id":15458,"nodeType":"StructuredDocumentation","src":"62268:46:15","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"62328:8:15","parameters":{"id":15461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15460,"mutability":"mutable","name":"stringifiedValue","nameLocation":"62353:16:15","nodeType":"VariableDeclaration","scope":15465,"src":"62337:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15459,"name":"string","nodeType":"ElementaryTypeName","src":"62337:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62336:34:15"},"returnParameters":{"id":15464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15463,"mutability":"mutable","name":"parsedValue","nameLocation":"62401:11:15","nodeType":"VariableDeclaration","scope":15465,"src":"62394:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15462,"name":"int256","nodeType":"ElementaryTypeName","src":"62394:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"62393:20:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15473,"nodeType":"FunctionDefinition","src":"62472:97:15","nodes":[],"documentation":{"id":15466,"nodeType":"StructuredDocumentation","src":"62420:47:15","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"62481:9:15","parameters":{"id":15469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15468,"mutability":"mutable","name":"stringifiedValue","nameLocation":"62507:16:15","nodeType":"VariableDeclaration","scope":15473,"src":"62491:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15467,"name":"string","nodeType":"ElementaryTypeName","src":"62491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62490:34:15"},"returnParameters":{"id":15472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15471,"mutability":"mutable","name":"parsedValue","nameLocation":"62556:11:15","nodeType":"VariableDeclaration","scope":15473,"src":"62548:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15470,"name":"uint256","nodeType":"ElementaryTypeName","src":"62548:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62547:21:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15485,"nodeType":"FunctionDefinition","src":"62647:151:15","nodes":[],"documentation":{"id":15474,"nodeType":"StructuredDocumentation","src":"62575:67:15","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"62656:7:15","parameters":{"id":15481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15476,"mutability":"mutable","name":"input","nameLocation":"62680:5:15","nodeType":"VariableDeclaration","scope":15485,"src":"62664:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15475,"name":"string","nodeType":"ElementaryTypeName","src":"62664:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15478,"mutability":"mutable","name":"from","nameLocation":"62703:4:15","nodeType":"VariableDeclaration","scope":15485,"src":"62687:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15477,"name":"string","nodeType":"ElementaryTypeName","src":"62687:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15480,"mutability":"mutable","name":"to","nameLocation":"62725:2:15","nodeType":"VariableDeclaration","scope":15485,"src":"62709:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15479,"name":"string","nodeType":"ElementaryTypeName","src":"62709:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62663:65:15"},"returnParameters":{"id":15484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15483,"mutability":"mutable","name":"output","nameLocation":"62790:6:15","nodeType":"VariableDeclaration","scope":15485,"src":"62776:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15482,"name":"string","nodeType":"ElementaryTypeName","src":"62776:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62775:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15496,"nodeType":"FunctionDefinition","src":"62891:113:15","nodes":[],"documentation":{"id":15486,"nodeType":"StructuredDocumentation","src":"62804:82:15","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"62900:5:15","parameters":{"id":15491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15488,"mutability":"mutable","name":"input","nameLocation":"62922:5:15","nodeType":"VariableDeclaration","scope":15496,"src":"62906:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15487,"name":"string","nodeType":"ElementaryTypeName","src":"62906:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15490,"mutability":"mutable","name":"delimiter","nameLocation":"62945:9:15","nodeType":"VariableDeclaration","scope":15496,"src":"62929:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15489,"name":"string","nodeType":"ElementaryTypeName","src":"62929:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62905:50:15"},"returnParameters":{"id":15495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15494,"mutability":"mutable","name":"outputs","nameLocation":"62995:7:15","nodeType":"VariableDeclaration","scope":15496,"src":"62979:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15492,"name":"string","nodeType":"ElementaryTypeName","src":"62979:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15493,"nodeType":"ArrayTypeName","src":"62979:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"62978:25:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15504,"nodeType":"FunctionDefinition","src":"63066:89:15","nodes":[],"documentation":{"id":15497,"nodeType":"StructuredDocumentation","src":"63010:51:15","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"63075:11:15","parameters":{"id":15500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15499,"mutability":"mutable","name":"input","nameLocation":"63103:5:15","nodeType":"VariableDeclaration","scope":15504,"src":"63087:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15498,"name":"string","nodeType":"ElementaryTypeName","src":"63087:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63086:23:15"},"returnParameters":{"id":15503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15502,"mutability":"mutable","name":"output","nameLocation":"63147:6:15","nodeType":"VariableDeclaration","scope":15504,"src":"63133:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15501,"name":"string","nodeType":"ElementaryTypeName","src":"63133:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63132:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15512,"nodeType":"FunctionDefinition","src":"63209:88:15","nodes":[],"documentation":{"id":15505,"nodeType":"StructuredDocumentation","src":"63161:43:15","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"63218:8:15","parameters":{"id":15508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15507,"mutability":"mutable","name":"value","nameLocation":"63235:5:15","nodeType":"VariableDeclaration","scope":15512,"src":"63227:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15506,"name":"address","nodeType":"ElementaryTypeName","src":"63227:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"63226:15:15"},"returnParameters":{"id":15511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15510,"mutability":"mutable","name":"stringifiedValue","nameLocation":"63279:16:15","nodeType":"VariableDeclaration","scope":15512,"src":"63265:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15509,"name":"string","nodeType":"ElementaryTypeName","src":"63265:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63264:32:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15520,"nodeType":"FunctionDefinition","src":"63351:95:15","nodes":[],"documentation":{"id":15513,"nodeType":"StructuredDocumentation","src":"63303:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"63360:8:15","parameters":{"id":15516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15515,"mutability":"mutable","name":"value","nameLocation":"63384:5:15","nodeType":"VariableDeclaration","scope":15520,"src":"63369:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15514,"name":"bytes","nodeType":"ElementaryTypeName","src":"63369:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"63368:22:15"},"returnParameters":{"id":15519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15518,"mutability":"mutable","name":"stringifiedValue","nameLocation":"63428:16:15","nodeType":"VariableDeclaration","scope":15520,"src":"63414:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15517,"name":"string","nodeType":"ElementaryTypeName","src":"63414:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63413:32:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15528,"nodeType":"FunctionDefinition","src":"63500:88:15","nodes":[],"documentation":{"id":15521,"nodeType":"StructuredDocumentation","src":"63452:43:15","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"63509:8:15","parameters":{"id":15524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15523,"mutability":"mutable","name":"value","nameLocation":"63526:5:15","nodeType":"VariableDeclaration","scope":15528,"src":"63518:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"63518:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"63517:15:15"},"returnParameters":{"id":15527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15526,"mutability":"mutable","name":"stringifiedValue","nameLocation":"63570:16:15","nodeType":"VariableDeclaration","scope":15528,"src":"63556:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15525,"name":"string","nodeType":"ElementaryTypeName","src":"63556:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63555:32:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15536,"nodeType":"FunctionDefinition","src":"63642:85:15","nodes":[],"documentation":{"id":15529,"nodeType":"StructuredDocumentation","src":"63594:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"63651:8:15","parameters":{"id":15532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15531,"mutability":"mutable","name":"value","nameLocation":"63665:5:15","nodeType":"VariableDeclaration","scope":15536,"src":"63660:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15530,"name":"bool","nodeType":"ElementaryTypeName","src":"63660:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63659:12:15"},"returnParameters":{"id":15535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15534,"mutability":"mutable","name":"stringifiedValue","nameLocation":"63709:16:15","nodeType":"VariableDeclaration","scope":15536,"src":"63695:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15533,"name":"string","nodeType":"ElementaryTypeName","src":"63695:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63694:32:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15544,"nodeType":"FunctionDefinition","src":"63781:88:15","nodes":[],"documentation":{"id":15537,"nodeType":"StructuredDocumentation","src":"63733:43:15","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"63790:8:15","parameters":{"id":15540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15539,"mutability":"mutable","name":"value","nameLocation":"63807:5:15","nodeType":"VariableDeclaration","scope":15544,"src":"63799:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15538,"name":"uint256","nodeType":"ElementaryTypeName","src":"63799:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63798:15:15"},"returnParameters":{"id":15543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15542,"mutability":"mutable","name":"stringifiedValue","nameLocation":"63851:16:15","nodeType":"VariableDeclaration","scope":15544,"src":"63837:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15541,"name":"string","nodeType":"ElementaryTypeName","src":"63837:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63836:32:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15552,"nodeType":"FunctionDefinition","src":"63923:87:15","nodes":[],"documentation":{"id":15545,"nodeType":"StructuredDocumentation","src":"63875:43:15","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"63932:8:15","parameters":{"id":15548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15547,"mutability":"mutable","name":"value","nameLocation":"63948:5:15","nodeType":"VariableDeclaration","scope":15552,"src":"63941:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15546,"name":"int256","nodeType":"ElementaryTypeName","src":"63941:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"63940:14:15"},"returnParameters":{"id":15551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15550,"mutability":"mutable","name":"stringifiedValue","nameLocation":"63992:16:15","nodeType":"VariableDeclaration","scope":15552,"src":"63978:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15549,"name":"string","nodeType":"ElementaryTypeName","src":"63978:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63977:32:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15560,"nodeType":"FunctionDefinition","src":"64072:89:15","nodes":[],"documentation":{"id":15553,"nodeType":"StructuredDocumentation","src":"64016:51:15","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"64081:11:15","parameters":{"id":15556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15555,"mutability":"mutable","name":"input","nameLocation":"64109:5:15","nodeType":"VariableDeclaration","scope":15560,"src":"64093:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15554,"name":"string","nodeType":"ElementaryTypeName","src":"64093:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64092:23:15"},"returnParameters":{"id":15559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15558,"mutability":"mutable","name":"output","nameLocation":"64153:6:15","nodeType":"VariableDeclaration","scope":15560,"src":"64139:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15557,"name":"string","nodeType":"ElementaryTypeName","src":"64139:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64138:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15568,"nodeType":"FunctionDefinition","src":"64244:82:15","nodes":[],"documentation":{"id":15561,"nodeType":"StructuredDocumentation","src":"64167:72:15","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"64253:4:15","parameters":{"id":15564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15563,"mutability":"mutable","name":"input","nameLocation":"64274:5:15","nodeType":"VariableDeclaration","scope":15568,"src":"64258:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15562,"name":"string","nodeType":"ElementaryTypeName","src":"64258:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64257:23:15"},"returnParameters":{"id":15567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15566,"mutability":"mutable","name":"output","nameLocation":"64318:6:15","nodeType":"VariableDeclaration","scope":15568,"src":"64304:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15565,"name":"string","nodeType":"ElementaryTypeName","src":"64304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64303:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15580,"nodeType":"FunctionDefinition","src":"64521:113:15","nodes":[],"documentation":{"id":15569,"nodeType":"StructuredDocumentation","src":"64366:150:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"64530:24:15","parameters":{"id":15578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15571,"mutability":"mutable","name":"left","nameLocation":"64563:4:15","nodeType":"VariableDeclaration","scope":15580,"src":"64555:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15570,"name":"uint256","nodeType":"ElementaryTypeName","src":"64555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15573,"mutability":"mutable","name":"right","nameLocation":"64577:5:15","nodeType":"VariableDeclaration","scope":15580,"src":"64569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15572,"name":"uint256","nodeType":"ElementaryTypeName","src":"64569:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15575,"mutability":"mutable","name":"maxDelta","nameLocation":"64592:8:15","nodeType":"VariableDeclaration","scope":15580,"src":"64584:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15574,"name":"uint256","nodeType":"ElementaryTypeName","src":"64584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15577,"mutability":"mutable","name":"decimals","nameLocation":"64610:8:15","nodeType":"VariableDeclaration","scope":15580,"src":"64602:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15576,"name":"uint256","nodeType":"ElementaryTypeName","src":"64602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64554:65:15"},"returnParameters":{"id":15579,"nodeType":"ParameterList","parameters":[],"src":"64633:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15594,"nodeType":"FunctionDefinition","src":"64849:182:15","nodes":[],"documentation":{"id":15581,"nodeType":"StructuredDocumentation","src":"64640:204:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"64858:24:15","parameters":{"id":15592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15583,"mutability":"mutable","name":"left","nameLocation":"64900:4:15","nodeType":"VariableDeclaration","scope":15594,"src":"64892:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15582,"name":"uint256","nodeType":"ElementaryTypeName","src":"64892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15585,"mutability":"mutable","name":"right","nameLocation":"64922:5:15","nodeType":"VariableDeclaration","scope":15594,"src":"64914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15584,"name":"uint256","nodeType":"ElementaryTypeName","src":"64914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15587,"mutability":"mutable","name":"maxDelta","nameLocation":"64945:8:15","nodeType":"VariableDeclaration","scope":15594,"src":"64937:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15586,"name":"uint256","nodeType":"ElementaryTypeName","src":"64937:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15589,"mutability":"mutable","name":"decimals","nameLocation":"64971:8:15","nodeType":"VariableDeclaration","scope":15594,"src":"64963:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15588,"name":"uint256","nodeType":"ElementaryTypeName","src":"64963:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15591,"mutability":"mutable","name":"error","nameLocation":"65005:5:15","nodeType":"VariableDeclaration","scope":15594,"src":"64989:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15590,"name":"string","nodeType":"ElementaryTypeName","src":"64989:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64882:134:15"},"returnParameters":{"id":15593,"nodeType":"ParameterList","parameters":[],"src":"65030:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15606,"nodeType":"FunctionDefinition","src":"65191:111:15","nodes":[],"documentation":{"id":15595,"nodeType":"StructuredDocumentation","src":"65037:149:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"65200:24:15","parameters":{"id":15604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15597,"mutability":"mutable","name":"left","nameLocation":"65232:4:15","nodeType":"VariableDeclaration","scope":15606,"src":"65225:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15596,"name":"int256","nodeType":"ElementaryTypeName","src":"65225:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15599,"mutability":"mutable","name":"right","nameLocation":"65245:5:15","nodeType":"VariableDeclaration","scope":15606,"src":"65238:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15598,"name":"int256","nodeType":"ElementaryTypeName","src":"65238:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15601,"mutability":"mutable","name":"maxDelta","nameLocation":"65260:8:15","nodeType":"VariableDeclaration","scope":15606,"src":"65252:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15600,"name":"uint256","nodeType":"ElementaryTypeName","src":"65252:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15603,"mutability":"mutable","name":"decimals","nameLocation":"65278:8:15","nodeType":"VariableDeclaration","scope":15606,"src":"65270:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15602,"name":"uint256","nodeType":"ElementaryTypeName","src":"65270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65224:63:15"},"returnParameters":{"id":15605,"nodeType":"ParameterList","parameters":[],"src":"65301:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15620,"nodeType":"FunctionDefinition","src":"65516:180:15","nodes":[],"documentation":{"id":15607,"nodeType":"StructuredDocumentation","src":"65308:203:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"65525:24:15","parameters":{"id":15618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15609,"mutability":"mutable","name":"left","nameLocation":"65566:4:15","nodeType":"VariableDeclaration","scope":15620,"src":"65559:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15608,"name":"int256","nodeType":"ElementaryTypeName","src":"65559:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15611,"mutability":"mutable","name":"right","nameLocation":"65587:5:15","nodeType":"VariableDeclaration","scope":15620,"src":"65580:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15610,"name":"int256","nodeType":"ElementaryTypeName","src":"65580:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15613,"mutability":"mutable","name":"maxDelta","nameLocation":"65610:8:15","nodeType":"VariableDeclaration","scope":15620,"src":"65602:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15612,"name":"uint256","nodeType":"ElementaryTypeName","src":"65602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15615,"mutability":"mutable","name":"decimals","nameLocation":"65636:8:15","nodeType":"VariableDeclaration","scope":15620,"src":"65628:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15614,"name":"uint256","nodeType":"ElementaryTypeName","src":"65628:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15617,"mutability":"mutable","name":"error","nameLocation":"65670:5:15","nodeType":"VariableDeclaration","scope":15620,"src":"65654:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15616,"name":"string","nodeType":"ElementaryTypeName","src":"65654:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65549:132:15"},"returnParameters":{"id":15619,"nodeType":"ParameterList","parameters":[],"src":"65695:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15630,"nodeType":"FunctionDefinition","src":"65800:88:15","nodes":[],"documentation":{"id":15621,"nodeType":"StructuredDocumentation","src":"65702:93:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"65809:17:15","parameters":{"id":15628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15623,"mutability":"mutable","name":"left","nameLocation":"65835:4:15","nodeType":"VariableDeclaration","scope":15630,"src":"65827:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15622,"name":"uint256","nodeType":"ElementaryTypeName","src":"65827:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15625,"mutability":"mutable","name":"right","nameLocation":"65849:5:15","nodeType":"VariableDeclaration","scope":15630,"src":"65841:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15624,"name":"uint256","nodeType":"ElementaryTypeName","src":"65841:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15627,"mutability":"mutable","name":"maxDelta","nameLocation":"65864:8:15","nodeType":"VariableDeclaration","scope":15630,"src":"65856:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15626,"name":"uint256","nodeType":"ElementaryTypeName","src":"65856:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"65826:47:15"},"returnParameters":{"id":15629,"nodeType":"ParameterList","parameters":[],"src":"65887:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15642,"nodeType":"FunctionDefinition","src":"66054:111:15","nodes":[],"documentation":{"id":15631,"nodeType":"StructuredDocumentation","src":"65894:155:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"66063:17:15","parameters":{"id":15640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15633,"mutability":"mutable","name":"left","nameLocation":"66089:4:15","nodeType":"VariableDeclaration","scope":15642,"src":"66081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15632,"name":"uint256","nodeType":"ElementaryTypeName","src":"66081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15635,"mutability":"mutable","name":"right","nameLocation":"66103:5:15","nodeType":"VariableDeclaration","scope":15642,"src":"66095:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15634,"name":"uint256","nodeType":"ElementaryTypeName","src":"66095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15637,"mutability":"mutable","name":"maxDelta","nameLocation":"66118:8:15","nodeType":"VariableDeclaration","scope":15642,"src":"66110:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15636,"name":"uint256","nodeType":"ElementaryTypeName","src":"66110:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15639,"mutability":"mutable","name":"error","nameLocation":"66144:5:15","nodeType":"VariableDeclaration","scope":15642,"src":"66128:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15638,"name":"string","nodeType":"ElementaryTypeName","src":"66128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66080:70:15"},"returnParameters":{"id":15641,"nodeType":"ParameterList","parameters":[],"src":"66164:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15652,"nodeType":"FunctionDefinition","src":"66268:86:15","nodes":[],"documentation":{"id":15643,"nodeType":"StructuredDocumentation","src":"66171:92:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"66277:17:15","parameters":{"id":15650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15645,"mutability":"mutable","name":"left","nameLocation":"66302:4:15","nodeType":"VariableDeclaration","scope":15652,"src":"66295:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15644,"name":"int256","nodeType":"ElementaryTypeName","src":"66295:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15647,"mutability":"mutable","name":"right","nameLocation":"66315:5:15","nodeType":"VariableDeclaration","scope":15652,"src":"66308:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15646,"name":"int256","nodeType":"ElementaryTypeName","src":"66308:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15649,"mutability":"mutable","name":"maxDelta","nameLocation":"66330:8:15","nodeType":"VariableDeclaration","scope":15652,"src":"66322:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15648,"name":"uint256","nodeType":"ElementaryTypeName","src":"66322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66294:45:15"},"returnParameters":{"id":15651,"nodeType":"ParameterList","parameters":[],"src":"66353:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15664,"nodeType":"FunctionDefinition","src":"66519:109:15","nodes":[],"documentation":{"id":15653,"nodeType":"StructuredDocumentation","src":"66360:154:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"66528:17:15","parameters":{"id":15662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15655,"mutability":"mutable","name":"left","nameLocation":"66553:4:15","nodeType":"VariableDeclaration","scope":15664,"src":"66546:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15654,"name":"int256","nodeType":"ElementaryTypeName","src":"66546:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15657,"mutability":"mutable","name":"right","nameLocation":"66566:5:15","nodeType":"VariableDeclaration","scope":15664,"src":"66559:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15656,"name":"int256","nodeType":"ElementaryTypeName","src":"66559:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15659,"mutability":"mutable","name":"maxDelta","nameLocation":"66581:8:15","nodeType":"VariableDeclaration","scope":15664,"src":"66573:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15658,"name":"uint256","nodeType":"ElementaryTypeName","src":"66573:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15661,"mutability":"mutable","name":"error","nameLocation":"66607:5:15","nodeType":"VariableDeclaration","scope":15664,"src":"66591:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15660,"name":"string","nodeType":"ElementaryTypeName","src":"66591:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66545:68:15"},"returnParameters":{"id":15663,"nodeType":"ParameterList","parameters":[],"src":"66627:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15676,"nodeType":"FunctionDefinition","src":"66899:136:15","nodes":[],"documentation":{"id":15665,"nodeType":"StructuredDocumentation","src":"66634:260:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"66908:24:15","parameters":{"id":15674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15667,"mutability":"mutable","name":"left","nameLocation":"66941:4:15","nodeType":"VariableDeclaration","scope":15676,"src":"66933:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15666,"name":"uint256","nodeType":"ElementaryTypeName","src":"66933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15669,"mutability":"mutable","name":"right","nameLocation":"66955:5:15","nodeType":"VariableDeclaration","scope":15676,"src":"66947:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15668,"name":"uint256","nodeType":"ElementaryTypeName","src":"66947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15671,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"66970:15:15","nodeType":"VariableDeclaration","scope":15676,"src":"66962:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15670,"name":"uint256","nodeType":"ElementaryTypeName","src":"66962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15673,"mutability":"mutable","name":"decimals","nameLocation":"66995:8:15","nodeType":"VariableDeclaration","scope":15676,"src":"66987:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15672,"name":"uint256","nodeType":"ElementaryTypeName","src":"66987:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66932:72:15"},"returnParameters":{"id":15675,"nodeType":"ParameterList","parameters":[],"src":"67034:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15690,"nodeType":"FunctionDefinition","src":"67360:189:15","nodes":[],"documentation":{"id":15677,"nodeType":"StructuredDocumentation","src":"67041:314:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"67369:24:15","parameters":{"id":15688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15679,"mutability":"mutable","name":"left","nameLocation":"67411:4:15","nodeType":"VariableDeclaration","scope":15690,"src":"67403:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15678,"name":"uint256","nodeType":"ElementaryTypeName","src":"67403:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15681,"mutability":"mutable","name":"right","nameLocation":"67433:5:15","nodeType":"VariableDeclaration","scope":15690,"src":"67425:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15680,"name":"uint256","nodeType":"ElementaryTypeName","src":"67425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15683,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"67456:15:15","nodeType":"VariableDeclaration","scope":15690,"src":"67448:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15682,"name":"uint256","nodeType":"ElementaryTypeName","src":"67448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15685,"mutability":"mutable","name":"decimals","nameLocation":"67489:8:15","nodeType":"VariableDeclaration","scope":15690,"src":"67481:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15684,"name":"uint256","nodeType":"ElementaryTypeName","src":"67481:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15687,"mutability":"mutable","name":"error","nameLocation":"67523:5:15","nodeType":"VariableDeclaration","scope":15690,"src":"67507:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15686,"name":"string","nodeType":"ElementaryTypeName","src":"67507:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67393:141:15"},"returnParameters":{"id":15689,"nodeType":"ParameterList","parameters":[],"src":"67548:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15702,"nodeType":"FunctionDefinition","src":"67819:134:15","nodes":[],"documentation":{"id":15691,"nodeType":"StructuredDocumentation","src":"67555:259:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"67828:24:15","parameters":{"id":15700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15693,"mutability":"mutable","name":"left","nameLocation":"67860:4:15","nodeType":"VariableDeclaration","scope":15702,"src":"67853:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15692,"name":"int256","nodeType":"ElementaryTypeName","src":"67853:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15695,"mutability":"mutable","name":"right","nameLocation":"67873:5:15","nodeType":"VariableDeclaration","scope":15702,"src":"67866:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15694,"name":"int256","nodeType":"ElementaryTypeName","src":"67866:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15697,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"67888:15:15","nodeType":"VariableDeclaration","scope":15702,"src":"67880:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15696,"name":"uint256","nodeType":"ElementaryTypeName","src":"67880:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15699,"mutability":"mutable","name":"decimals","nameLocation":"67913:8:15","nodeType":"VariableDeclaration","scope":15702,"src":"67905:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15698,"name":"uint256","nodeType":"ElementaryTypeName","src":"67905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67852:70:15"},"returnParameters":{"id":15701,"nodeType":"ParameterList","parameters":[],"src":"67952:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15716,"nodeType":"FunctionDefinition","src":"68277:187:15","nodes":[],"documentation":{"id":15703,"nodeType":"StructuredDocumentation","src":"67959:313:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"68286:24:15","parameters":{"id":15714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15705,"mutability":"mutable","name":"left","nameLocation":"68327:4:15","nodeType":"VariableDeclaration","scope":15716,"src":"68320:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15704,"name":"int256","nodeType":"ElementaryTypeName","src":"68320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15707,"mutability":"mutable","name":"right","nameLocation":"68348:5:15","nodeType":"VariableDeclaration","scope":15716,"src":"68341:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15706,"name":"int256","nodeType":"ElementaryTypeName","src":"68341:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15709,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"68371:15:15","nodeType":"VariableDeclaration","scope":15716,"src":"68363:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15708,"name":"uint256","nodeType":"ElementaryTypeName","src":"68363:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15711,"mutability":"mutable","name":"decimals","nameLocation":"68404:8:15","nodeType":"VariableDeclaration","scope":15716,"src":"68396:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15710,"name":"uint256","nodeType":"ElementaryTypeName","src":"68396:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15713,"mutability":"mutable","name":"error","nameLocation":"68438:5:15","nodeType":"VariableDeclaration","scope":15716,"src":"68422:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15712,"name":"string","nodeType":"ElementaryTypeName","src":"68422:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68310:139:15"},"returnParameters":{"id":15715,"nodeType":"ParameterList","parameters":[],"src":"68463:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15726,"nodeType":"FunctionDefinition","src":"68678:95:15","nodes":[],"documentation":{"id":15717,"nodeType":"StructuredDocumentation","src":"68470:203:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"68687:17:15","parameters":{"id":15724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15719,"mutability":"mutable","name":"left","nameLocation":"68713:4:15","nodeType":"VariableDeclaration","scope":15726,"src":"68705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15718,"name":"uint256","nodeType":"ElementaryTypeName","src":"68705:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15721,"mutability":"mutable","name":"right","nameLocation":"68727:5:15","nodeType":"VariableDeclaration","scope":15726,"src":"68719:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15720,"name":"uint256","nodeType":"ElementaryTypeName","src":"68719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15723,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"68742:15:15","nodeType":"VariableDeclaration","scope":15726,"src":"68734:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15722,"name":"uint256","nodeType":"ElementaryTypeName","src":"68734:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68704:54:15"},"returnParameters":{"id":15725,"nodeType":"ParameterList","parameters":[],"src":"68772:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15738,"nodeType":"FunctionDefinition","src":"69049:134:15","nodes":[],"documentation":{"id":15727,"nodeType":"StructuredDocumentation","src":"68779:265:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"69058:17:15","parameters":{"id":15736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15729,"mutability":"mutable","name":"left","nameLocation":"69084:4:15","nodeType":"VariableDeclaration","scope":15738,"src":"69076:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15728,"name":"uint256","nodeType":"ElementaryTypeName","src":"69076:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15731,"mutability":"mutable","name":"right","nameLocation":"69098:5:15","nodeType":"VariableDeclaration","scope":15738,"src":"69090:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15730,"name":"uint256","nodeType":"ElementaryTypeName","src":"69090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15733,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"69113:15:15","nodeType":"VariableDeclaration","scope":15738,"src":"69105:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15732,"name":"uint256","nodeType":"ElementaryTypeName","src":"69105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15735,"mutability":"mutable","name":"error","nameLocation":"69146:5:15","nodeType":"VariableDeclaration","scope":15738,"src":"69130:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15734,"name":"string","nodeType":"ElementaryTypeName","src":"69130:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69075:77:15"},"returnParameters":{"id":15737,"nodeType":"ParameterList","parameters":[],"src":"69182:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15748,"nodeType":"FunctionDefinition","src":"69396:93:15","nodes":[],"documentation":{"id":15739,"nodeType":"StructuredDocumentation","src":"69189:202:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"69405:17:15","parameters":{"id":15746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15741,"mutability":"mutable","name":"left","nameLocation":"69430:4:15","nodeType":"VariableDeclaration","scope":15748,"src":"69423:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15740,"name":"int256","nodeType":"ElementaryTypeName","src":"69423:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15743,"mutability":"mutable","name":"right","nameLocation":"69443:5:15","nodeType":"VariableDeclaration","scope":15748,"src":"69436:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15742,"name":"int256","nodeType":"ElementaryTypeName","src":"69436:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15745,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"69458:15:15","nodeType":"VariableDeclaration","scope":15748,"src":"69450:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15744,"name":"uint256","nodeType":"ElementaryTypeName","src":"69450:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69422:52:15"},"returnParameters":{"id":15747,"nodeType":"ParameterList","parameters":[],"src":"69488:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15760,"nodeType":"FunctionDefinition","src":"69764:132:15","nodes":[],"documentation":{"id":15749,"nodeType":"StructuredDocumentation","src":"69495:264:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"69773:17:15","parameters":{"id":15758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15751,"mutability":"mutable","name":"left","nameLocation":"69798:4:15","nodeType":"VariableDeclaration","scope":15760,"src":"69791:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15750,"name":"int256","nodeType":"ElementaryTypeName","src":"69791:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15753,"mutability":"mutable","name":"right","nameLocation":"69811:5:15","nodeType":"VariableDeclaration","scope":15760,"src":"69804:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15752,"name":"int256","nodeType":"ElementaryTypeName","src":"69804:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15755,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"69826:15:15","nodeType":"VariableDeclaration","scope":15760,"src":"69818:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15754,"name":"uint256","nodeType":"ElementaryTypeName","src":"69818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15757,"mutability":"mutable","name":"error","nameLocation":"69859:5:15","nodeType":"VariableDeclaration","scope":15760,"src":"69843:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15756,"name":"string","nodeType":"ElementaryTypeName","src":"69843:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69790:75:15"},"returnParameters":{"id":15759,"nodeType":"ParameterList","parameters":[],"src":"69895:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15770,"nodeType":"FunctionDefinition","src":"70005:86:15","nodes":[],"documentation":{"id":15761,"nodeType":"StructuredDocumentation","src":"69902:98:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"70014:15:15","parameters":{"id":15768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15763,"mutability":"mutable","name":"left","nameLocation":"70038:4:15","nodeType":"VariableDeclaration","scope":15770,"src":"70030:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15762,"name":"uint256","nodeType":"ElementaryTypeName","src":"70030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15765,"mutability":"mutable","name":"right","nameLocation":"70052:5:15","nodeType":"VariableDeclaration","scope":15770,"src":"70044:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15764,"name":"uint256","nodeType":"ElementaryTypeName","src":"70044:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15767,"mutability":"mutable","name":"decimals","nameLocation":"70067:8:15","nodeType":"VariableDeclaration","scope":15770,"src":"70059:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15766,"name":"uint256","nodeType":"ElementaryTypeName","src":"70059:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70029:47:15"},"returnParameters":{"id":15769,"nodeType":"ParameterList","parameters":[],"src":"70090:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15782,"nodeType":"FunctionDefinition","src":"70262:109:15","nodes":[],"documentation":{"id":15771,"nodeType":"StructuredDocumentation","src":"70097:160:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"70271:15:15","parameters":{"id":15780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15773,"mutability":"mutable","name":"left","nameLocation":"70295:4:15","nodeType":"VariableDeclaration","scope":15782,"src":"70287:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15772,"name":"uint256","nodeType":"ElementaryTypeName","src":"70287:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15775,"mutability":"mutable","name":"right","nameLocation":"70309:5:15","nodeType":"VariableDeclaration","scope":15782,"src":"70301:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15774,"name":"uint256","nodeType":"ElementaryTypeName","src":"70301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15777,"mutability":"mutable","name":"decimals","nameLocation":"70324:8:15","nodeType":"VariableDeclaration","scope":15782,"src":"70316:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15776,"name":"uint256","nodeType":"ElementaryTypeName","src":"70316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15779,"mutability":"mutable","name":"error","nameLocation":"70350:5:15","nodeType":"VariableDeclaration","scope":15782,"src":"70334:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15778,"name":"string","nodeType":"ElementaryTypeName","src":"70334:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70286:70:15"},"returnParameters":{"id":15781,"nodeType":"ParameterList","parameters":[],"src":"70370:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15792,"nodeType":"FunctionDefinition","src":"70479:84:15","nodes":[],"documentation":{"id":15783,"nodeType":"StructuredDocumentation","src":"70377:97:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"70488:15:15","parameters":{"id":15790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15785,"mutability":"mutable","name":"left","nameLocation":"70511:4:15","nodeType":"VariableDeclaration","scope":15792,"src":"70504:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15784,"name":"int256","nodeType":"ElementaryTypeName","src":"70504:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15787,"mutability":"mutable","name":"right","nameLocation":"70524:5:15","nodeType":"VariableDeclaration","scope":15792,"src":"70517:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15786,"name":"int256","nodeType":"ElementaryTypeName","src":"70517:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15789,"mutability":"mutable","name":"decimals","nameLocation":"70539:8:15","nodeType":"VariableDeclaration","scope":15792,"src":"70531:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15788,"name":"uint256","nodeType":"ElementaryTypeName","src":"70531:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70503:45:15"},"returnParameters":{"id":15791,"nodeType":"ParameterList","parameters":[],"src":"70562:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15804,"nodeType":"FunctionDefinition","src":"70733:107:15","nodes":[],"documentation":{"id":15793,"nodeType":"StructuredDocumentation","src":"70569:159:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"70742:15:15","parameters":{"id":15802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15795,"mutability":"mutable","name":"left","nameLocation":"70765:4:15","nodeType":"VariableDeclaration","scope":15804,"src":"70758:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15794,"name":"int256","nodeType":"ElementaryTypeName","src":"70758:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15797,"mutability":"mutable","name":"right","nameLocation":"70778:5:15","nodeType":"VariableDeclaration","scope":15804,"src":"70771:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15796,"name":"int256","nodeType":"ElementaryTypeName","src":"70771:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15799,"mutability":"mutable","name":"decimals","nameLocation":"70793:8:15","nodeType":"VariableDeclaration","scope":15804,"src":"70785:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15798,"name":"uint256","nodeType":"ElementaryTypeName","src":"70785:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15801,"mutability":"mutable","name":"error","nameLocation":"70819:5:15","nodeType":"VariableDeclaration","scope":15804,"src":"70803:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15800,"name":"string","nodeType":"ElementaryTypeName","src":"70803:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70757:68:15"},"returnParameters":{"id":15803,"nodeType":"ParameterList","parameters":[],"src":"70839:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15812,"nodeType":"FunctionDefinition","src":"70896:55:15","nodes":[],"documentation":{"id":15805,"nodeType":"StructuredDocumentation","src":"70846:45:15","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"70905:8:15","parameters":{"id":15810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15807,"mutability":"mutable","name":"left","nameLocation":"70919:4:15","nodeType":"VariableDeclaration","scope":15812,"src":"70914:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15806,"name":"bool","nodeType":"ElementaryTypeName","src":"70914:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15809,"mutability":"mutable","name":"right","nameLocation":"70930:5:15","nodeType":"VariableDeclaration","scope":15812,"src":"70925:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15808,"name":"bool","nodeType":"ElementaryTypeName","src":"70925:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70913:23:15"},"returnParameters":{"id":15811,"nodeType":"ParameterList","parameters":[],"src":"70950:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15822,"nodeType":"FunctionDefinition","src":"71064:78:15","nodes":[],"documentation":{"id":15813,"nodeType":"StructuredDocumentation","src":"70957:102:15","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71073:8:15","parameters":{"id":15820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15815,"mutability":"mutable","name":"left","nameLocation":"71087:4:15","nodeType":"VariableDeclaration","scope":15822,"src":"71082:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15814,"name":"bool","nodeType":"ElementaryTypeName","src":"71082:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15817,"mutability":"mutable","name":"right","nameLocation":"71098:5:15","nodeType":"VariableDeclaration","scope":15822,"src":"71093:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15816,"name":"bool","nodeType":"ElementaryTypeName","src":"71093:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15819,"mutability":"mutable","name":"error","nameLocation":"71121:5:15","nodeType":"VariableDeclaration","scope":15822,"src":"71105:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15818,"name":"string","nodeType":"ElementaryTypeName","src":"71105:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71081:46:15"},"returnParameters":{"id":15821,"nodeType":"ParameterList","parameters":[],"src":"71141:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15830,"nodeType":"FunctionDefinition","src":"71200:77:15","nodes":[],"documentation":{"id":15823,"nodeType":"StructuredDocumentation","src":"71148:47:15","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71209:8:15","parameters":{"id":15828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15825,"mutability":"mutable","name":"left","nameLocation":"71234:4:15","nodeType":"VariableDeclaration","scope":15830,"src":"71218:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15824,"name":"string","nodeType":"ElementaryTypeName","src":"71218:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15827,"mutability":"mutable","name":"right","nameLocation":"71256:5:15","nodeType":"VariableDeclaration","scope":15830,"src":"71240:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15826,"name":"string","nodeType":"ElementaryTypeName","src":"71240:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71217:45:15"},"returnParameters":{"id":15829,"nodeType":"ParameterList","parameters":[],"src":"71276:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15840,"nodeType":"FunctionDefinition","src":"71392:100:15","nodes":[],"documentation":{"id":15831,"nodeType":"StructuredDocumentation","src":"71283:104:15","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71401:8:15","parameters":{"id":15838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15833,"mutability":"mutable","name":"left","nameLocation":"71426:4:15","nodeType":"VariableDeclaration","scope":15840,"src":"71410:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15832,"name":"string","nodeType":"ElementaryTypeName","src":"71410:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15835,"mutability":"mutable","name":"right","nameLocation":"71448:5:15","nodeType":"VariableDeclaration","scope":15840,"src":"71432:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15834,"name":"string","nodeType":"ElementaryTypeName","src":"71432:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15837,"mutability":"mutable","name":"error","nameLocation":"71471:5:15","nodeType":"VariableDeclaration","scope":15840,"src":"71455:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15836,"name":"string","nodeType":"ElementaryTypeName","src":"71455:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71409:68:15"},"returnParameters":{"id":15839,"nodeType":"ParameterList","parameters":[],"src":"71491:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15848,"nodeType":"FunctionDefinition","src":"71549:75:15","nodes":[],"documentation":{"id":15841,"nodeType":"StructuredDocumentation","src":"71498:46:15","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71558:8:15","parameters":{"id":15846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15843,"mutability":"mutable","name":"left","nameLocation":"71582:4:15","nodeType":"VariableDeclaration","scope":15848,"src":"71567:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15842,"name":"bytes","nodeType":"ElementaryTypeName","src":"71567:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15845,"mutability":"mutable","name":"right","nameLocation":"71603:5:15","nodeType":"VariableDeclaration","scope":15848,"src":"71588:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15844,"name":"bytes","nodeType":"ElementaryTypeName","src":"71588:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71566:43:15"},"returnParameters":{"id":15847,"nodeType":"ParameterList","parameters":[],"src":"71623:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15858,"nodeType":"FunctionDefinition","src":"71738:98:15","nodes":[],"documentation":{"id":15849,"nodeType":"StructuredDocumentation","src":"71630:103:15","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71747:8:15","parameters":{"id":15856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15851,"mutability":"mutable","name":"left","nameLocation":"71771:4:15","nodeType":"VariableDeclaration","scope":15858,"src":"71756:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15850,"name":"bytes","nodeType":"ElementaryTypeName","src":"71756:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15853,"mutability":"mutable","name":"right","nameLocation":"71792:5:15","nodeType":"VariableDeclaration","scope":15858,"src":"71777:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15852,"name":"bytes","nodeType":"ElementaryTypeName","src":"71777:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15855,"mutability":"mutable","name":"error","nameLocation":"71815:5:15","nodeType":"VariableDeclaration","scope":15858,"src":"71799:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15854,"name":"string","nodeType":"ElementaryTypeName","src":"71799:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71755:66:15"},"returnParameters":{"id":15857,"nodeType":"ParameterList","parameters":[],"src":"71835:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15868,"nodeType":"FunctionDefinition","src":"71902:77:15","nodes":[],"documentation":{"id":15859,"nodeType":"StructuredDocumentation","src":"71842:55:15","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"71911:8:15","parameters":{"id":15866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15862,"mutability":"mutable","name":"left","nameLocation":"71936:4:15","nodeType":"VariableDeclaration","scope":15868,"src":"71920:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15860,"name":"bool","nodeType":"ElementaryTypeName","src":"71920:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15861,"nodeType":"ArrayTypeName","src":"71920:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15865,"mutability":"mutable","name":"right","nameLocation":"71958:5:15","nodeType":"VariableDeclaration","scope":15868,"src":"71942:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15863,"name":"bool","nodeType":"ElementaryTypeName","src":"71942:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15864,"nodeType":"ArrayTypeName","src":"71942:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"71919:45:15"},"returnParameters":{"id":15867,"nodeType":"ParameterList","parameters":[],"src":"71978:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15880,"nodeType":"FunctionDefinition","src":"72102:100:15","nodes":[],"documentation":{"id":15869,"nodeType":"StructuredDocumentation","src":"71985:112:15","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72111:8:15","parameters":{"id":15878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15872,"mutability":"mutable","name":"left","nameLocation":"72136:4:15","nodeType":"VariableDeclaration","scope":15880,"src":"72120:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15870,"name":"bool","nodeType":"ElementaryTypeName","src":"72120:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15871,"nodeType":"ArrayTypeName","src":"72120:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15875,"mutability":"mutable","name":"right","nameLocation":"72158:5:15","nodeType":"VariableDeclaration","scope":15880,"src":"72142:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15873,"name":"bool","nodeType":"ElementaryTypeName","src":"72142:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15874,"nodeType":"ArrayTypeName","src":"72142:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15877,"mutability":"mutable","name":"error","nameLocation":"72181:5:15","nodeType":"VariableDeclaration","scope":15880,"src":"72165:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15876,"name":"string","nodeType":"ElementaryTypeName","src":"72165:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72119:68:15"},"returnParameters":{"id":15879,"nodeType":"ParameterList","parameters":[],"src":"72201:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15890,"nodeType":"FunctionDefinition","src":"72270:83:15","nodes":[],"documentation":{"id":15881,"nodeType":"StructuredDocumentation","src":"72208:57:15","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72279:8:15","parameters":{"id":15888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15884,"mutability":"mutable","name":"left","nameLocation":"72307:4:15","nodeType":"VariableDeclaration","scope":15890,"src":"72288:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15882,"name":"uint256","nodeType":"ElementaryTypeName","src":"72288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15883,"nodeType":"ArrayTypeName","src":"72288:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15887,"mutability":"mutable","name":"right","nameLocation":"72332:5:15","nodeType":"VariableDeclaration","scope":15890,"src":"72313:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15885,"name":"uint256","nodeType":"ElementaryTypeName","src":"72313:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15886,"nodeType":"ArrayTypeName","src":"72313:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"72287:51:15"},"returnParameters":{"id":15889,"nodeType":"ParameterList","parameters":[],"src":"72352:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15902,"nodeType":"FunctionDefinition","src":"72479:106:15","nodes":[],"documentation":{"id":15891,"nodeType":"StructuredDocumentation","src":"72359:115:15","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72488:8:15","parameters":{"id":15900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15894,"mutability":"mutable","name":"left","nameLocation":"72516:4:15","nodeType":"VariableDeclaration","scope":15902,"src":"72497:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15892,"name":"uint256","nodeType":"ElementaryTypeName","src":"72497:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15893,"nodeType":"ArrayTypeName","src":"72497:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15897,"mutability":"mutable","name":"right","nameLocation":"72541:5:15","nodeType":"VariableDeclaration","scope":15902,"src":"72522:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15895,"name":"uint256","nodeType":"ElementaryTypeName","src":"72522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15896,"nodeType":"ArrayTypeName","src":"72522:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15899,"mutability":"mutable","name":"error","nameLocation":"72564:5:15","nodeType":"VariableDeclaration","scope":15902,"src":"72548:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15898,"name":"string","nodeType":"ElementaryTypeName","src":"72548:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72496:74:15"},"returnParameters":{"id":15901,"nodeType":"ParameterList","parameters":[],"src":"72584:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15912,"nodeType":"FunctionDefinition","src":"72653:81:15","nodes":[],"documentation":{"id":15903,"nodeType":"StructuredDocumentation","src":"72591:57:15","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72662:8:15","parameters":{"id":15910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15906,"mutability":"mutable","name":"left","nameLocation":"72689:4:15","nodeType":"VariableDeclaration","scope":15912,"src":"72671:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15904,"name":"int256","nodeType":"ElementaryTypeName","src":"72671:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15905,"nodeType":"ArrayTypeName","src":"72671:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15909,"mutability":"mutable","name":"right","nameLocation":"72713:5:15","nodeType":"VariableDeclaration","scope":15912,"src":"72695:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15907,"name":"int256","nodeType":"ElementaryTypeName","src":"72695:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15908,"nodeType":"ArrayTypeName","src":"72695:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"72670:49:15"},"returnParameters":{"id":15911,"nodeType":"ParameterList","parameters":[],"src":"72733:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15924,"nodeType":"FunctionDefinition","src":"72859:104:15","nodes":[],"documentation":{"id":15913,"nodeType":"StructuredDocumentation","src":"72740:114:15","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"72868:8:15","parameters":{"id":15922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15916,"mutability":"mutable","name":"left","nameLocation":"72895:4:15","nodeType":"VariableDeclaration","scope":15924,"src":"72877:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15914,"name":"int256","nodeType":"ElementaryTypeName","src":"72877:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15915,"nodeType":"ArrayTypeName","src":"72877:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15919,"mutability":"mutable","name":"right","nameLocation":"72919:5:15","nodeType":"VariableDeclaration","scope":15924,"src":"72901:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15917,"name":"int256","nodeType":"ElementaryTypeName","src":"72901:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15918,"nodeType":"ArrayTypeName","src":"72901:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15921,"mutability":"mutable","name":"error","nameLocation":"72942:5:15","nodeType":"VariableDeclaration","scope":15924,"src":"72926:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15920,"name":"string","nodeType":"ElementaryTypeName","src":"72926:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72876:72:15"},"returnParameters":{"id":15923,"nodeType":"ParameterList","parameters":[],"src":"72962:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15932,"nodeType":"FunctionDefinition","src":"73022:61:15","nodes":[],"documentation":{"id":15925,"nodeType":"StructuredDocumentation","src":"72969:48:15","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73031:8:15","parameters":{"id":15930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15927,"mutability":"mutable","name":"left","nameLocation":"73048:4:15","nodeType":"VariableDeclaration","scope":15932,"src":"73040:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15926,"name":"uint256","nodeType":"ElementaryTypeName","src":"73040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15929,"mutability":"mutable","name":"right","nameLocation":"73062:5:15","nodeType":"VariableDeclaration","scope":15932,"src":"73054:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15928,"name":"uint256","nodeType":"ElementaryTypeName","src":"73054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73039:29:15"},"returnParameters":{"id":15931,"nodeType":"ParameterList","parameters":[],"src":"73082:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15942,"nodeType":"FunctionDefinition","src":"73152:83:15","nodes":[],"documentation":{"id":15933,"nodeType":"StructuredDocumentation","src":"73089:58:15","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73161:8:15","parameters":{"id":15940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15936,"mutability":"mutable","name":"left","nameLocation":"73189:4:15","nodeType":"VariableDeclaration","scope":15942,"src":"73170:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15934,"name":"address","nodeType":"ElementaryTypeName","src":"73170:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15935,"nodeType":"ArrayTypeName","src":"73170:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15939,"mutability":"mutable","name":"right","nameLocation":"73214:5:15","nodeType":"VariableDeclaration","scope":15942,"src":"73195:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15937,"name":"address","nodeType":"ElementaryTypeName","src":"73195:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15938,"nodeType":"ArrayTypeName","src":"73195:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"73169:51:15"},"returnParameters":{"id":15941,"nodeType":"ParameterList","parameters":[],"src":"73234:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15954,"nodeType":"FunctionDefinition","src":"73361:106:15","nodes":[],"documentation":{"id":15943,"nodeType":"StructuredDocumentation","src":"73241:115:15","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73370:8:15","parameters":{"id":15952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15946,"mutability":"mutable","name":"left","nameLocation":"73398:4:15","nodeType":"VariableDeclaration","scope":15954,"src":"73379:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15944,"name":"address","nodeType":"ElementaryTypeName","src":"73379:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15945,"nodeType":"ArrayTypeName","src":"73379:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15949,"mutability":"mutable","name":"right","nameLocation":"73423:5:15","nodeType":"VariableDeclaration","scope":15954,"src":"73404:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15947,"name":"address","nodeType":"ElementaryTypeName","src":"73404:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15948,"nodeType":"ArrayTypeName","src":"73404:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15951,"mutability":"mutable","name":"error","nameLocation":"73446:5:15","nodeType":"VariableDeclaration","scope":15954,"src":"73430:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15950,"name":"string","nodeType":"ElementaryTypeName","src":"73430:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73378:74:15"},"returnParameters":{"id":15953,"nodeType":"ParameterList","parameters":[],"src":"73466:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15964,"nodeType":"FunctionDefinition","src":"73536:83:15","nodes":[],"documentation":{"id":15955,"nodeType":"StructuredDocumentation","src":"73473:58:15","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73545:8:15","parameters":{"id":15962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15958,"mutability":"mutable","name":"left","nameLocation":"73573:4:15","nodeType":"VariableDeclaration","scope":15964,"src":"73554:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73554:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15957,"nodeType":"ArrayTypeName","src":"73554:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15961,"mutability":"mutable","name":"right","nameLocation":"73598:5:15","nodeType":"VariableDeclaration","scope":15964,"src":"73579:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73579:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15960,"nodeType":"ArrayTypeName","src":"73579:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"73553:51:15"},"returnParameters":{"id":15963,"nodeType":"ParameterList","parameters":[],"src":"73618:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15976,"nodeType":"FunctionDefinition","src":"73745:106:15","nodes":[],"documentation":{"id":15965,"nodeType":"StructuredDocumentation","src":"73625:115:15","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73754:8:15","parameters":{"id":15974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15968,"mutability":"mutable","name":"left","nameLocation":"73782:4:15","nodeType":"VariableDeclaration","scope":15976,"src":"73763:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73763:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15967,"nodeType":"ArrayTypeName","src":"73763:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15971,"mutability":"mutable","name":"right","nameLocation":"73807:5:15","nodeType":"VariableDeclaration","scope":15976,"src":"73788:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73788:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15970,"nodeType":"ArrayTypeName","src":"73788:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15973,"mutability":"mutable","name":"error","nameLocation":"73830:5:15","nodeType":"VariableDeclaration","scope":15976,"src":"73814:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15972,"name":"string","nodeType":"ElementaryTypeName","src":"73814:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73762:74:15"},"returnParameters":{"id":15975,"nodeType":"ParameterList","parameters":[],"src":"73850:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15986,"nodeType":"FunctionDefinition","src":"73919:81:15","nodes":[],"documentation":{"id":15977,"nodeType":"StructuredDocumentation","src":"73857:57:15","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"73928:8:15","parameters":{"id":15984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15980,"mutability":"mutable","name":"left","nameLocation":"73955:4:15","nodeType":"VariableDeclaration","scope":15986,"src":"73937:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15978,"name":"string","nodeType":"ElementaryTypeName","src":"73937:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15979,"nodeType":"ArrayTypeName","src":"73937:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15983,"mutability":"mutable","name":"right","nameLocation":"73979:5:15","nodeType":"VariableDeclaration","scope":15986,"src":"73961:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15981,"name":"string","nodeType":"ElementaryTypeName","src":"73961:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15982,"nodeType":"ArrayTypeName","src":"73961:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73936:49:15"},"returnParameters":{"id":15985,"nodeType":"ParameterList","parameters":[],"src":"73999:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15998,"nodeType":"FunctionDefinition","src":"74125:104:15","nodes":[],"documentation":{"id":15987,"nodeType":"StructuredDocumentation","src":"74006:114:15","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74134:8:15","parameters":{"id":15996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15990,"mutability":"mutable","name":"left","nameLocation":"74161:4:15","nodeType":"VariableDeclaration","scope":15998,"src":"74143:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15988,"name":"string","nodeType":"ElementaryTypeName","src":"74143:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15989,"nodeType":"ArrayTypeName","src":"74143:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15993,"mutability":"mutable","name":"right","nameLocation":"74185:5:15","nodeType":"VariableDeclaration","scope":15998,"src":"74167:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15991,"name":"string","nodeType":"ElementaryTypeName","src":"74167:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15992,"nodeType":"ArrayTypeName","src":"74167:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15995,"mutability":"mutable","name":"error","nameLocation":"74208:5:15","nodeType":"VariableDeclaration","scope":15998,"src":"74192:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15994,"name":"string","nodeType":"ElementaryTypeName","src":"74192:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74142:72:15"},"returnParameters":{"id":15997,"nodeType":"ParameterList","parameters":[],"src":"74228:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16008,"nodeType":"FunctionDefinition","src":"74296:79:15","nodes":[],"documentation":{"id":15999,"nodeType":"StructuredDocumentation","src":"74235:56:15","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74305:8:15","parameters":{"id":16006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16002,"mutability":"mutable","name":"left","nameLocation":"74331:4:15","nodeType":"VariableDeclaration","scope":16008,"src":"74314:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16000,"name":"bytes","nodeType":"ElementaryTypeName","src":"74314:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16001,"nodeType":"ArrayTypeName","src":"74314:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16005,"mutability":"mutable","name":"right","nameLocation":"74354:5:15","nodeType":"VariableDeclaration","scope":16008,"src":"74337:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16003,"name":"bytes","nodeType":"ElementaryTypeName","src":"74337:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16004,"nodeType":"ArrayTypeName","src":"74337:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"74313:47:15"},"returnParameters":{"id":16007,"nodeType":"ParameterList","parameters":[],"src":"74374:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16020,"nodeType":"FunctionDefinition","src":"74499:102:15","nodes":[],"documentation":{"id":16009,"nodeType":"StructuredDocumentation","src":"74381:113:15","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74508:8:15","parameters":{"id":16018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16012,"mutability":"mutable","name":"left","nameLocation":"74534:4:15","nodeType":"VariableDeclaration","scope":16020,"src":"74517:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16010,"name":"bytes","nodeType":"ElementaryTypeName","src":"74517:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16011,"nodeType":"ArrayTypeName","src":"74517:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16015,"mutability":"mutable","name":"right","nameLocation":"74557:5:15","nodeType":"VariableDeclaration","scope":16020,"src":"74540:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16013,"name":"bytes","nodeType":"ElementaryTypeName","src":"74540:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16014,"nodeType":"ArrayTypeName","src":"74540:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16017,"mutability":"mutable","name":"error","nameLocation":"74580:5:15","nodeType":"VariableDeclaration","scope":16020,"src":"74564:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16016,"name":"string","nodeType":"ElementaryTypeName","src":"74564:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74516:70:15"},"returnParameters":{"id":16019,"nodeType":"ParameterList","parameters":[],"src":"74600:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16030,"nodeType":"FunctionDefinition","src":"74717:84:15","nodes":[],"documentation":{"id":16021,"nodeType":"StructuredDocumentation","src":"74607:105:15","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74726:8:15","parameters":{"id":16028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16023,"mutability":"mutable","name":"left","nameLocation":"74743:4:15","nodeType":"VariableDeclaration","scope":16030,"src":"74735:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16022,"name":"uint256","nodeType":"ElementaryTypeName","src":"74735:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16025,"mutability":"mutable","name":"right","nameLocation":"74757:5:15","nodeType":"VariableDeclaration","scope":16030,"src":"74749:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16024,"name":"uint256","nodeType":"ElementaryTypeName","src":"74749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16027,"mutability":"mutable","name":"error","nameLocation":"74780:5:15","nodeType":"VariableDeclaration","scope":16030,"src":"74764:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16026,"name":"string","nodeType":"ElementaryTypeName","src":"74764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74734:52:15"},"returnParameters":{"id":16029,"nodeType":"ParameterList","parameters":[],"src":"74800:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16038,"nodeType":"FunctionDefinition","src":"74859:59:15","nodes":[],"documentation":{"id":16031,"nodeType":"StructuredDocumentation","src":"74807:47:15","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"74868:8:15","parameters":{"id":16036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16033,"mutability":"mutable","name":"left","nameLocation":"74884:4:15","nodeType":"VariableDeclaration","scope":16038,"src":"74877:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16032,"name":"int256","nodeType":"ElementaryTypeName","src":"74877:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16035,"mutability":"mutable","name":"right","nameLocation":"74897:5:15","nodeType":"VariableDeclaration","scope":16038,"src":"74890:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16034,"name":"int256","nodeType":"ElementaryTypeName","src":"74890:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"74876:27:15"},"returnParameters":{"id":16037,"nodeType":"ParameterList","parameters":[],"src":"74917:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16048,"nodeType":"FunctionDefinition","src":"75033:82:15","nodes":[],"documentation":{"id":16039,"nodeType":"StructuredDocumentation","src":"74924:104:15","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75042:8:15","parameters":{"id":16046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16041,"mutability":"mutable","name":"left","nameLocation":"75058:4:15","nodeType":"VariableDeclaration","scope":16048,"src":"75051:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16040,"name":"int256","nodeType":"ElementaryTypeName","src":"75051:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16043,"mutability":"mutable","name":"right","nameLocation":"75071:5:15","nodeType":"VariableDeclaration","scope":16048,"src":"75064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16042,"name":"int256","nodeType":"ElementaryTypeName","src":"75064:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16045,"mutability":"mutable","name":"error","nameLocation":"75094:5:15","nodeType":"VariableDeclaration","scope":16048,"src":"75078:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16044,"name":"string","nodeType":"ElementaryTypeName","src":"75078:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75050:50:15"},"returnParameters":{"id":16047,"nodeType":"ParameterList","parameters":[],"src":"75114:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16056,"nodeType":"FunctionDefinition","src":"75174:61:15","nodes":[],"documentation":{"id":16049,"nodeType":"StructuredDocumentation","src":"75121:48:15","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75183:8:15","parameters":{"id":16054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16051,"mutability":"mutable","name":"left","nameLocation":"75200:4:15","nodeType":"VariableDeclaration","scope":16056,"src":"75192:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16050,"name":"address","nodeType":"ElementaryTypeName","src":"75192:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16053,"mutability":"mutable","name":"right","nameLocation":"75214:5:15","nodeType":"VariableDeclaration","scope":16056,"src":"75206:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16052,"name":"address","nodeType":"ElementaryTypeName","src":"75206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75191:29:15"},"returnParameters":{"id":16055,"nodeType":"ParameterList","parameters":[],"src":"75234:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16066,"nodeType":"FunctionDefinition","src":"75351:84:15","nodes":[],"documentation":{"id":16057,"nodeType":"StructuredDocumentation","src":"75241:105:15","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75360:8:15","parameters":{"id":16064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16059,"mutability":"mutable","name":"left","nameLocation":"75377:4:15","nodeType":"VariableDeclaration","scope":16066,"src":"75369:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16058,"name":"address","nodeType":"ElementaryTypeName","src":"75369:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16061,"mutability":"mutable","name":"right","nameLocation":"75391:5:15","nodeType":"VariableDeclaration","scope":16066,"src":"75383:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16060,"name":"address","nodeType":"ElementaryTypeName","src":"75383:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16063,"mutability":"mutable","name":"error","nameLocation":"75414:5:15","nodeType":"VariableDeclaration","scope":16066,"src":"75398:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16062,"name":"string","nodeType":"ElementaryTypeName","src":"75398:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75368:52:15"},"returnParameters":{"id":16065,"nodeType":"ParameterList","parameters":[],"src":"75434:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16074,"nodeType":"FunctionDefinition","src":"75494:61:15","nodes":[],"documentation":{"id":16067,"nodeType":"StructuredDocumentation","src":"75441:48:15","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75503:8:15","parameters":{"id":16072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16069,"mutability":"mutable","name":"left","nameLocation":"75520:4:15","nodeType":"VariableDeclaration","scope":16074,"src":"75512:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16068,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75512:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16071,"mutability":"mutable","name":"right","nameLocation":"75534:5:15","nodeType":"VariableDeclaration","scope":16074,"src":"75526:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75526:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75511:29:15"},"returnParameters":{"id":16073,"nodeType":"ParameterList","parameters":[],"src":"75554:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16084,"nodeType":"FunctionDefinition","src":"75671:84:15","nodes":[],"documentation":{"id":16075,"nodeType":"StructuredDocumentation","src":"75561:105:15","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"75680:8:15","parameters":{"id":16082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16077,"mutability":"mutable","name":"left","nameLocation":"75697:4:15","nodeType":"VariableDeclaration","scope":16084,"src":"75689:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75689:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16079,"mutability":"mutable","name":"right","nameLocation":"75711:5:15","nodeType":"VariableDeclaration","scope":16084,"src":"75703:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16081,"mutability":"mutable","name":"error","nameLocation":"75734:5:15","nodeType":"VariableDeclaration","scope":16084,"src":"75718:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16080,"name":"string","nodeType":"ElementaryTypeName","src":"75718:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75688:52:15"},"returnParameters":{"id":16083,"nodeType":"ParameterList","parameters":[],"src":"75754:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16090,"nodeType":"FunctionDefinition","src":"75812:51:15","nodes":[],"documentation":{"id":16085,"nodeType":"StructuredDocumentation","src":"75761:46:15","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"75821:11:15","parameters":{"id":16088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16087,"mutability":"mutable","name":"condition","nameLocation":"75838:9:15","nodeType":"VariableDeclaration","scope":16090,"src":"75833:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16086,"name":"bool","nodeType":"ElementaryTypeName","src":"75833:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"75832:16:15"},"returnParameters":{"id":16089,"nodeType":"ParameterList","parameters":[],"src":"75862:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16098,"nodeType":"FunctionDefinition","src":"75977:74:15","nodes":[],"documentation":{"id":16091,"nodeType":"StructuredDocumentation","src":"75869:103:15","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"75986:11:15","parameters":{"id":16096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16093,"mutability":"mutable","name":"condition","nameLocation":"76003:9:15","nodeType":"VariableDeclaration","scope":16098,"src":"75998:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16092,"name":"bool","nodeType":"ElementaryTypeName","src":"75998:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16095,"mutability":"mutable","name":"error","nameLocation":"76030:5:15","nodeType":"VariableDeclaration","scope":16098,"src":"76014:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16094,"name":"string","nodeType":"ElementaryTypeName","src":"76014:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75997:39:15"},"returnParameters":{"id":16097,"nodeType":"ParameterList","parameters":[],"src":"76050:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16108,"nodeType":"FunctionDefinition","src":"76212:86:15","nodes":[],"documentation":{"id":16099,"nodeType":"StructuredDocumentation","src":"76057:150:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"76221:15:15","parameters":{"id":16106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16101,"mutability":"mutable","name":"left","nameLocation":"76245:4:15","nodeType":"VariableDeclaration","scope":16108,"src":"76237:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16100,"name":"uint256","nodeType":"ElementaryTypeName","src":"76237:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16103,"mutability":"mutable","name":"right","nameLocation":"76259:5:15","nodeType":"VariableDeclaration","scope":16108,"src":"76251:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16102,"name":"uint256","nodeType":"ElementaryTypeName","src":"76251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16105,"mutability":"mutable","name":"decimals","nameLocation":"76274:8:15","nodeType":"VariableDeclaration","scope":16108,"src":"76266:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16104,"name":"uint256","nodeType":"ElementaryTypeName","src":"76266:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76236:47:15"},"returnParameters":{"id":16107,"nodeType":"ParameterList","parameters":[],"src":"76297:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16120,"nodeType":"FunctionDefinition","src":"76513:109:15","nodes":[],"documentation":{"id":16109,"nodeType":"StructuredDocumentation","src":"76304:204:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"76522:15:15","parameters":{"id":16118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16111,"mutability":"mutable","name":"left","nameLocation":"76546:4:15","nodeType":"VariableDeclaration","scope":16120,"src":"76538:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16110,"name":"uint256","nodeType":"ElementaryTypeName","src":"76538:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16113,"mutability":"mutable","name":"right","nameLocation":"76560:5:15","nodeType":"VariableDeclaration","scope":16120,"src":"76552:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16112,"name":"uint256","nodeType":"ElementaryTypeName","src":"76552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16115,"mutability":"mutable","name":"decimals","nameLocation":"76575:8:15","nodeType":"VariableDeclaration","scope":16120,"src":"76567:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16114,"name":"uint256","nodeType":"ElementaryTypeName","src":"76567:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16117,"mutability":"mutable","name":"error","nameLocation":"76601:5:15","nodeType":"VariableDeclaration","scope":16120,"src":"76585:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16116,"name":"string","nodeType":"ElementaryTypeName","src":"76585:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76537:70:15"},"returnParameters":{"id":16119,"nodeType":"ParameterList","parameters":[],"src":"76621:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16130,"nodeType":"FunctionDefinition","src":"76782:84:15","nodes":[],"documentation":{"id":16121,"nodeType":"StructuredDocumentation","src":"76628:149:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"76791:15:15","parameters":{"id":16128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16123,"mutability":"mutable","name":"left","nameLocation":"76814:4:15","nodeType":"VariableDeclaration","scope":16130,"src":"76807:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16122,"name":"int256","nodeType":"ElementaryTypeName","src":"76807:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16125,"mutability":"mutable","name":"right","nameLocation":"76827:5:15","nodeType":"VariableDeclaration","scope":16130,"src":"76820:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16124,"name":"int256","nodeType":"ElementaryTypeName","src":"76820:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16127,"mutability":"mutable","name":"decimals","nameLocation":"76842:8:15","nodeType":"VariableDeclaration","scope":16130,"src":"76834:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16126,"name":"uint256","nodeType":"ElementaryTypeName","src":"76834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76806:45:15"},"returnParameters":{"id":16129,"nodeType":"ParameterList","parameters":[],"src":"76865:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16142,"nodeType":"FunctionDefinition","src":"77080:107:15","nodes":[],"documentation":{"id":16131,"nodeType":"StructuredDocumentation","src":"76872:203:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"77089:15:15","parameters":{"id":16140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16133,"mutability":"mutable","name":"left","nameLocation":"77112:4:15","nodeType":"VariableDeclaration","scope":16142,"src":"77105:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16132,"name":"int256","nodeType":"ElementaryTypeName","src":"77105:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16135,"mutability":"mutable","name":"right","nameLocation":"77125:5:15","nodeType":"VariableDeclaration","scope":16142,"src":"77118:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16134,"name":"int256","nodeType":"ElementaryTypeName","src":"77118:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16137,"mutability":"mutable","name":"decimals","nameLocation":"77140:8:15","nodeType":"VariableDeclaration","scope":16142,"src":"77132:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16136,"name":"uint256","nodeType":"ElementaryTypeName","src":"77132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16139,"mutability":"mutable","name":"error","nameLocation":"77166:5:15","nodeType":"VariableDeclaration","scope":16142,"src":"77150:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16138,"name":"string","nodeType":"ElementaryTypeName","src":"77150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77104:68:15"},"returnParameters":{"id":16141,"nodeType":"ParameterList","parameters":[],"src":"77186:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16150,"nodeType":"FunctionDefinition","src":"77291:61:15","nodes":[],"documentation":{"id":16143,"nodeType":"StructuredDocumentation","src":"77193:93:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"77300:8:15","parameters":{"id":16148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16145,"mutability":"mutable","name":"left","nameLocation":"77317:4:15","nodeType":"VariableDeclaration","scope":16150,"src":"77309:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16144,"name":"uint256","nodeType":"ElementaryTypeName","src":"77309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16147,"mutability":"mutable","name":"right","nameLocation":"77331:5:15","nodeType":"VariableDeclaration","scope":16150,"src":"77323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16146,"name":"uint256","nodeType":"ElementaryTypeName","src":"77323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77308:29:15"},"returnParameters":{"id":16149,"nodeType":"ParameterList","parameters":[],"src":"77351:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16160,"nodeType":"FunctionDefinition","src":"77518:84:15","nodes":[],"documentation":{"id":16151,"nodeType":"StructuredDocumentation","src":"77358:155:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"77527:8:15","parameters":{"id":16158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16153,"mutability":"mutable","name":"left","nameLocation":"77544:4:15","nodeType":"VariableDeclaration","scope":16160,"src":"77536:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16152,"name":"uint256","nodeType":"ElementaryTypeName","src":"77536:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16155,"mutability":"mutable","name":"right","nameLocation":"77558:5:15","nodeType":"VariableDeclaration","scope":16160,"src":"77550:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16154,"name":"uint256","nodeType":"ElementaryTypeName","src":"77550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16157,"mutability":"mutable","name":"error","nameLocation":"77581:5:15","nodeType":"VariableDeclaration","scope":16160,"src":"77565:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16156,"name":"string","nodeType":"ElementaryTypeName","src":"77565:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77535:52:15"},"returnParameters":{"id":16159,"nodeType":"ParameterList","parameters":[],"src":"77601:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16168,"nodeType":"FunctionDefinition","src":"77705:59:15","nodes":[],"documentation":{"id":16161,"nodeType":"StructuredDocumentation","src":"77608:92:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"77714:8:15","parameters":{"id":16166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16163,"mutability":"mutable","name":"left","nameLocation":"77730:4:15","nodeType":"VariableDeclaration","scope":16168,"src":"77723:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16162,"name":"int256","nodeType":"ElementaryTypeName","src":"77723:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16165,"mutability":"mutable","name":"right","nameLocation":"77743:5:15","nodeType":"VariableDeclaration","scope":16168,"src":"77736:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16164,"name":"int256","nodeType":"ElementaryTypeName","src":"77736:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"77722:27:15"},"returnParameters":{"id":16167,"nodeType":"ParameterList","parameters":[],"src":"77763:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16178,"nodeType":"FunctionDefinition","src":"77929:82:15","nodes":[],"documentation":{"id":16169,"nodeType":"StructuredDocumentation","src":"77770:154:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"77938:8:15","parameters":{"id":16176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16171,"mutability":"mutable","name":"left","nameLocation":"77954:4:15","nodeType":"VariableDeclaration","scope":16178,"src":"77947:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16170,"name":"int256","nodeType":"ElementaryTypeName","src":"77947:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16173,"mutability":"mutable","name":"right","nameLocation":"77967:5:15","nodeType":"VariableDeclaration","scope":16178,"src":"77960:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16172,"name":"int256","nodeType":"ElementaryTypeName","src":"77960:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16175,"mutability":"mutable","name":"error","nameLocation":"77990:5:15","nodeType":"VariableDeclaration","scope":16178,"src":"77974:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16174,"name":"string","nodeType":"ElementaryTypeName","src":"77974:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77946:50:15"},"returnParameters":{"id":16177,"nodeType":"ParameterList","parameters":[],"src":"78010:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16188,"nodeType":"FunctionDefinition","src":"78160:86:15","nodes":[],"documentation":{"id":16179,"nodeType":"StructuredDocumentation","src":"78017:138:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"78169:15:15","parameters":{"id":16186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16181,"mutability":"mutable","name":"left","nameLocation":"78193:4:15","nodeType":"VariableDeclaration","scope":16188,"src":"78185:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16180,"name":"uint256","nodeType":"ElementaryTypeName","src":"78185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16183,"mutability":"mutable","name":"right","nameLocation":"78207:5:15","nodeType":"VariableDeclaration","scope":16188,"src":"78199:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16182,"name":"uint256","nodeType":"ElementaryTypeName","src":"78199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16185,"mutability":"mutable","name":"decimals","nameLocation":"78222:8:15","nodeType":"VariableDeclaration","scope":16188,"src":"78214:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16184,"name":"uint256","nodeType":"ElementaryTypeName","src":"78214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78184:47:15"},"returnParameters":{"id":16187,"nodeType":"ParameterList","parameters":[],"src":"78245:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16200,"nodeType":"FunctionDefinition","src":"78449:109:15","nodes":[],"documentation":{"id":16189,"nodeType":"StructuredDocumentation","src":"78252:192:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"78458:15:15","parameters":{"id":16198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16191,"mutability":"mutable","name":"left","nameLocation":"78482:4:15","nodeType":"VariableDeclaration","scope":16200,"src":"78474:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16190,"name":"uint256","nodeType":"ElementaryTypeName","src":"78474:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16193,"mutability":"mutable","name":"right","nameLocation":"78496:5:15","nodeType":"VariableDeclaration","scope":16200,"src":"78488:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16192,"name":"uint256","nodeType":"ElementaryTypeName","src":"78488:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16195,"mutability":"mutable","name":"decimals","nameLocation":"78511:8:15","nodeType":"VariableDeclaration","scope":16200,"src":"78503:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16194,"name":"uint256","nodeType":"ElementaryTypeName","src":"78503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16197,"mutability":"mutable","name":"error","nameLocation":"78537:5:15","nodeType":"VariableDeclaration","scope":16200,"src":"78521:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16196,"name":"string","nodeType":"ElementaryTypeName","src":"78521:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78473:70:15"},"returnParameters":{"id":16199,"nodeType":"ParameterList","parameters":[],"src":"78557:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16210,"nodeType":"FunctionDefinition","src":"78706:84:15","nodes":[],"documentation":{"id":16201,"nodeType":"StructuredDocumentation","src":"78564:137:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"78715:15:15","parameters":{"id":16208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16203,"mutability":"mutable","name":"left","nameLocation":"78738:4:15","nodeType":"VariableDeclaration","scope":16210,"src":"78731:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16202,"name":"int256","nodeType":"ElementaryTypeName","src":"78731:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16205,"mutability":"mutable","name":"right","nameLocation":"78751:5:15","nodeType":"VariableDeclaration","scope":16210,"src":"78744:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16204,"name":"int256","nodeType":"ElementaryTypeName","src":"78744:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16207,"mutability":"mutable","name":"decimals","nameLocation":"78766:8:15","nodeType":"VariableDeclaration","scope":16210,"src":"78758:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16206,"name":"uint256","nodeType":"ElementaryTypeName","src":"78758:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78730:45:15"},"returnParameters":{"id":16209,"nodeType":"ParameterList","parameters":[],"src":"78789:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16222,"nodeType":"FunctionDefinition","src":"78992:107:15","nodes":[],"documentation":{"id":16211,"nodeType":"StructuredDocumentation","src":"78796:191:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"79001:15:15","parameters":{"id":16220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16213,"mutability":"mutable","name":"left","nameLocation":"79024:4:15","nodeType":"VariableDeclaration","scope":16222,"src":"79017:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16212,"name":"int256","nodeType":"ElementaryTypeName","src":"79017:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16215,"mutability":"mutable","name":"right","nameLocation":"79037:5:15","nodeType":"VariableDeclaration","scope":16222,"src":"79030:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16214,"name":"int256","nodeType":"ElementaryTypeName","src":"79030:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16217,"mutability":"mutable","name":"decimals","nameLocation":"79052:8:15","nodeType":"VariableDeclaration","scope":16222,"src":"79044:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16216,"name":"uint256","nodeType":"ElementaryTypeName","src":"79044:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16219,"mutability":"mutable","name":"error","nameLocation":"79078:5:15","nodeType":"VariableDeclaration","scope":16222,"src":"79062:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16218,"name":"string","nodeType":"ElementaryTypeName","src":"79062:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79016:68:15"},"returnParameters":{"id":16221,"nodeType":"ParameterList","parameters":[],"src":"79098:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16230,"nodeType":"FunctionDefinition","src":"79191:61:15","nodes":[],"documentation":{"id":16223,"nodeType":"StructuredDocumentation","src":"79105:81:15","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"79200:8:15","parameters":{"id":16228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16225,"mutability":"mutable","name":"left","nameLocation":"79217:4:15","nodeType":"VariableDeclaration","scope":16230,"src":"79209:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16224,"name":"uint256","nodeType":"ElementaryTypeName","src":"79209:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16227,"mutability":"mutable","name":"right","nameLocation":"79231:5:15","nodeType":"VariableDeclaration","scope":16230,"src":"79223:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16226,"name":"uint256","nodeType":"ElementaryTypeName","src":"79223:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79208:29:15"},"returnParameters":{"id":16229,"nodeType":"ParameterList","parameters":[],"src":"79251:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16240,"nodeType":"FunctionDefinition","src":"79406:84:15","nodes":[],"documentation":{"id":16231,"nodeType":"StructuredDocumentation","src":"79258:143:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"79415:8:15","parameters":{"id":16238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16233,"mutability":"mutable","name":"left","nameLocation":"79432:4:15","nodeType":"VariableDeclaration","scope":16240,"src":"79424:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16232,"name":"uint256","nodeType":"ElementaryTypeName","src":"79424:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16235,"mutability":"mutable","name":"right","nameLocation":"79446:5:15","nodeType":"VariableDeclaration","scope":16240,"src":"79438:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16234,"name":"uint256","nodeType":"ElementaryTypeName","src":"79438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16237,"mutability":"mutable","name":"error","nameLocation":"79469:5:15","nodeType":"VariableDeclaration","scope":16240,"src":"79453:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16236,"name":"string","nodeType":"ElementaryTypeName","src":"79453:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79423:52:15"},"returnParameters":{"id":16239,"nodeType":"ParameterList","parameters":[],"src":"79489:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16248,"nodeType":"FunctionDefinition","src":"79581:59:15","nodes":[],"documentation":{"id":16241,"nodeType":"StructuredDocumentation","src":"79496:80:15","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"79590:8:15","parameters":{"id":16246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16243,"mutability":"mutable","name":"left","nameLocation":"79606:4:15","nodeType":"VariableDeclaration","scope":16248,"src":"79599:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16242,"name":"int256","nodeType":"ElementaryTypeName","src":"79599:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16245,"mutability":"mutable","name":"right","nameLocation":"79619:5:15","nodeType":"VariableDeclaration","scope":16248,"src":"79612:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16244,"name":"int256","nodeType":"ElementaryTypeName","src":"79612:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"79598:27:15"},"returnParameters":{"id":16247,"nodeType":"ParameterList","parameters":[],"src":"79639:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16258,"nodeType":"FunctionDefinition","src":"79793:82:15","nodes":[],"documentation":{"id":16249,"nodeType":"StructuredDocumentation","src":"79646:142:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"79802:8:15","parameters":{"id":16256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16251,"mutability":"mutable","name":"left","nameLocation":"79818:4:15","nodeType":"VariableDeclaration","scope":16258,"src":"79811:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16250,"name":"int256","nodeType":"ElementaryTypeName","src":"79811:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16253,"mutability":"mutable","name":"right","nameLocation":"79831:5:15","nodeType":"VariableDeclaration","scope":16258,"src":"79824:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16252,"name":"int256","nodeType":"ElementaryTypeName","src":"79824:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16255,"mutability":"mutable","name":"error","nameLocation":"79854:5:15","nodeType":"VariableDeclaration","scope":16258,"src":"79838:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16254,"name":"string","nodeType":"ElementaryTypeName","src":"79838:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79810:50:15"},"returnParameters":{"id":16257,"nodeType":"ParameterList","parameters":[],"src":"79874:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16268,"nodeType":"FunctionDefinition","src":"80033:86:15","nodes":[],"documentation":{"id":16259,"nodeType":"StructuredDocumentation","src":"79881:147:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"80042:15:15","parameters":{"id":16266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16261,"mutability":"mutable","name":"left","nameLocation":"80066:4:15","nodeType":"VariableDeclaration","scope":16268,"src":"80058:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16260,"name":"uint256","nodeType":"ElementaryTypeName","src":"80058:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16263,"mutability":"mutable","name":"right","nameLocation":"80080:5:15","nodeType":"VariableDeclaration","scope":16268,"src":"80072:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16262,"name":"uint256","nodeType":"ElementaryTypeName","src":"80072:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16265,"mutability":"mutable","name":"decimals","nameLocation":"80095:8:15","nodeType":"VariableDeclaration","scope":16268,"src":"80087:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16264,"name":"uint256","nodeType":"ElementaryTypeName","src":"80087:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80057:47:15"},"returnParameters":{"id":16267,"nodeType":"ParameterList","parameters":[],"src":"80118:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16280,"nodeType":"FunctionDefinition","src":"80331:109:15","nodes":[],"documentation":{"id":16269,"nodeType":"StructuredDocumentation","src":"80125:201:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"80340:15:15","parameters":{"id":16278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16271,"mutability":"mutable","name":"left","nameLocation":"80364:4:15","nodeType":"VariableDeclaration","scope":16280,"src":"80356:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16270,"name":"uint256","nodeType":"ElementaryTypeName","src":"80356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16273,"mutability":"mutable","name":"right","nameLocation":"80378:5:15","nodeType":"VariableDeclaration","scope":16280,"src":"80370:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16272,"name":"uint256","nodeType":"ElementaryTypeName","src":"80370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16275,"mutability":"mutable","name":"decimals","nameLocation":"80393:8:15","nodeType":"VariableDeclaration","scope":16280,"src":"80385:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16274,"name":"uint256","nodeType":"ElementaryTypeName","src":"80385:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16277,"mutability":"mutable","name":"error","nameLocation":"80419:5:15","nodeType":"VariableDeclaration","scope":16280,"src":"80403:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16276,"name":"string","nodeType":"ElementaryTypeName","src":"80403:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80355:70:15"},"returnParameters":{"id":16279,"nodeType":"ParameterList","parameters":[],"src":"80439:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16290,"nodeType":"FunctionDefinition","src":"80597:84:15","nodes":[],"documentation":{"id":16281,"nodeType":"StructuredDocumentation","src":"80446:146:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"80606:15:15","parameters":{"id":16288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16283,"mutability":"mutable","name":"left","nameLocation":"80629:4:15","nodeType":"VariableDeclaration","scope":16290,"src":"80622:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16282,"name":"int256","nodeType":"ElementaryTypeName","src":"80622:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16285,"mutability":"mutable","name":"right","nameLocation":"80642:5:15","nodeType":"VariableDeclaration","scope":16290,"src":"80635:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16284,"name":"int256","nodeType":"ElementaryTypeName","src":"80635:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16287,"mutability":"mutable","name":"decimals","nameLocation":"80657:8:15","nodeType":"VariableDeclaration","scope":16290,"src":"80649:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16286,"name":"uint256","nodeType":"ElementaryTypeName","src":"80649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80621:45:15"},"returnParameters":{"id":16289,"nodeType":"ParameterList","parameters":[],"src":"80680:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16302,"nodeType":"FunctionDefinition","src":"80892:107:15","nodes":[],"documentation":{"id":16291,"nodeType":"StructuredDocumentation","src":"80687:200:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"80901:15:15","parameters":{"id":16300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16293,"mutability":"mutable","name":"left","nameLocation":"80924:4:15","nodeType":"VariableDeclaration","scope":16302,"src":"80917:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16292,"name":"int256","nodeType":"ElementaryTypeName","src":"80917:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16295,"mutability":"mutable","name":"right","nameLocation":"80937:5:15","nodeType":"VariableDeclaration","scope":16302,"src":"80930:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16294,"name":"int256","nodeType":"ElementaryTypeName","src":"80930:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16297,"mutability":"mutable","name":"decimals","nameLocation":"80952:8:15","nodeType":"VariableDeclaration","scope":16302,"src":"80944:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16296,"name":"uint256","nodeType":"ElementaryTypeName","src":"80944:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16299,"mutability":"mutable","name":"error","nameLocation":"80978:5:15","nodeType":"VariableDeclaration","scope":16302,"src":"80962:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16298,"name":"string","nodeType":"ElementaryTypeName","src":"80962:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80916:68:15"},"returnParameters":{"id":16301,"nodeType":"ParameterList","parameters":[],"src":"80998:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16310,"nodeType":"FunctionDefinition","src":"81100:61:15","nodes":[],"documentation":{"id":16303,"nodeType":"StructuredDocumentation","src":"81005:90:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"81109:8:15","parameters":{"id":16308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16305,"mutability":"mutable","name":"left","nameLocation":"81126:4:15","nodeType":"VariableDeclaration","scope":16310,"src":"81118:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16304,"name":"uint256","nodeType":"ElementaryTypeName","src":"81118:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16307,"mutability":"mutable","name":"right","nameLocation":"81140:5:15","nodeType":"VariableDeclaration","scope":16310,"src":"81132:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16306,"name":"uint256","nodeType":"ElementaryTypeName","src":"81132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81117:29:15"},"returnParameters":{"id":16309,"nodeType":"ParameterList","parameters":[],"src":"81160:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16320,"nodeType":"FunctionDefinition","src":"81324:84:15","nodes":[],"documentation":{"id":16311,"nodeType":"StructuredDocumentation","src":"81167:152:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"81333:8:15","parameters":{"id":16318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16313,"mutability":"mutable","name":"left","nameLocation":"81350:4:15","nodeType":"VariableDeclaration","scope":16320,"src":"81342:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16312,"name":"uint256","nodeType":"ElementaryTypeName","src":"81342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16315,"mutability":"mutable","name":"right","nameLocation":"81364:5:15","nodeType":"VariableDeclaration","scope":16320,"src":"81356:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16314,"name":"uint256","nodeType":"ElementaryTypeName","src":"81356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16317,"mutability":"mutable","name":"error","nameLocation":"81387:5:15","nodeType":"VariableDeclaration","scope":16320,"src":"81371:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16316,"name":"string","nodeType":"ElementaryTypeName","src":"81371:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81341:52:15"},"returnParameters":{"id":16319,"nodeType":"ParameterList","parameters":[],"src":"81407:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16328,"nodeType":"FunctionDefinition","src":"81508:59:15","nodes":[],"documentation":{"id":16321,"nodeType":"StructuredDocumentation","src":"81414:89:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"81517:8:15","parameters":{"id":16326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16323,"mutability":"mutable","name":"left","nameLocation":"81533:4:15","nodeType":"VariableDeclaration","scope":16328,"src":"81526:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16322,"name":"int256","nodeType":"ElementaryTypeName","src":"81526:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16325,"mutability":"mutable","name":"right","nameLocation":"81546:5:15","nodeType":"VariableDeclaration","scope":16328,"src":"81539:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16324,"name":"int256","nodeType":"ElementaryTypeName","src":"81539:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"81525:27:15"},"returnParameters":{"id":16327,"nodeType":"ParameterList","parameters":[],"src":"81566:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16338,"nodeType":"FunctionDefinition","src":"81729:82:15","nodes":[],"documentation":{"id":16329,"nodeType":"StructuredDocumentation","src":"81573:151:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"81738:8:15","parameters":{"id":16336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16331,"mutability":"mutable","name":"left","nameLocation":"81754:4:15","nodeType":"VariableDeclaration","scope":16338,"src":"81747:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16330,"name":"int256","nodeType":"ElementaryTypeName","src":"81747:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16333,"mutability":"mutable","name":"right","nameLocation":"81767:5:15","nodeType":"VariableDeclaration","scope":16338,"src":"81760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16332,"name":"int256","nodeType":"ElementaryTypeName","src":"81760:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16335,"mutability":"mutable","name":"error","nameLocation":"81790:5:15","nodeType":"VariableDeclaration","scope":16338,"src":"81774:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16334,"name":"string","nodeType":"ElementaryTypeName","src":"81774:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81746:50:15"},"returnParameters":{"id":16337,"nodeType":"ParameterList","parameters":[],"src":"81810:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16348,"nodeType":"FunctionDefinition","src":"81957:86:15","nodes":[],"documentation":{"id":16339,"nodeType":"StructuredDocumentation","src":"81817:135:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"81966:15:15","parameters":{"id":16346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16341,"mutability":"mutable","name":"left","nameLocation":"81990:4:15","nodeType":"VariableDeclaration","scope":16348,"src":"81982:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16340,"name":"uint256","nodeType":"ElementaryTypeName","src":"81982:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16343,"mutability":"mutable","name":"right","nameLocation":"82004:5:15","nodeType":"VariableDeclaration","scope":16348,"src":"81996:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16342,"name":"uint256","nodeType":"ElementaryTypeName","src":"81996:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16345,"mutability":"mutable","name":"decimals","nameLocation":"82019:8:15","nodeType":"VariableDeclaration","scope":16348,"src":"82011:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16344,"name":"uint256","nodeType":"ElementaryTypeName","src":"82011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81981:47:15"},"returnParameters":{"id":16347,"nodeType":"ParameterList","parameters":[],"src":"82042:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16360,"nodeType":"FunctionDefinition","src":"82243:109:15","nodes":[],"documentation":{"id":16349,"nodeType":"StructuredDocumentation","src":"82049:189:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"82252:15:15","parameters":{"id":16358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16351,"mutability":"mutable","name":"left","nameLocation":"82276:4:15","nodeType":"VariableDeclaration","scope":16360,"src":"82268:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16350,"name":"uint256","nodeType":"ElementaryTypeName","src":"82268:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16353,"mutability":"mutable","name":"right","nameLocation":"82290:5:15","nodeType":"VariableDeclaration","scope":16360,"src":"82282:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16352,"name":"uint256","nodeType":"ElementaryTypeName","src":"82282:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16355,"mutability":"mutable","name":"decimals","nameLocation":"82305:8:15","nodeType":"VariableDeclaration","scope":16360,"src":"82297:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16354,"name":"uint256","nodeType":"ElementaryTypeName","src":"82297:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16357,"mutability":"mutable","name":"error","nameLocation":"82331:5:15","nodeType":"VariableDeclaration","scope":16360,"src":"82315:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16356,"name":"string","nodeType":"ElementaryTypeName","src":"82315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82267:70:15"},"returnParameters":{"id":16359,"nodeType":"ParameterList","parameters":[],"src":"82351:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16370,"nodeType":"FunctionDefinition","src":"82497:84:15","nodes":[],"documentation":{"id":16361,"nodeType":"StructuredDocumentation","src":"82358:134:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"82506:15:15","parameters":{"id":16368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16363,"mutability":"mutable","name":"left","nameLocation":"82529:4:15","nodeType":"VariableDeclaration","scope":16370,"src":"82522:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16362,"name":"int256","nodeType":"ElementaryTypeName","src":"82522:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16365,"mutability":"mutable","name":"right","nameLocation":"82542:5:15","nodeType":"VariableDeclaration","scope":16370,"src":"82535:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16364,"name":"int256","nodeType":"ElementaryTypeName","src":"82535:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16367,"mutability":"mutable","name":"decimals","nameLocation":"82557:8:15","nodeType":"VariableDeclaration","scope":16370,"src":"82549:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16366,"name":"uint256","nodeType":"ElementaryTypeName","src":"82549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82521:45:15"},"returnParameters":{"id":16369,"nodeType":"ParameterList","parameters":[],"src":"82580:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16382,"nodeType":"FunctionDefinition","src":"82780:107:15","nodes":[],"documentation":{"id":16371,"nodeType":"StructuredDocumentation","src":"82587:188:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"82789:15:15","parameters":{"id":16380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16373,"mutability":"mutable","name":"left","nameLocation":"82812:4:15","nodeType":"VariableDeclaration","scope":16382,"src":"82805:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16372,"name":"int256","nodeType":"ElementaryTypeName","src":"82805:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16375,"mutability":"mutable","name":"right","nameLocation":"82825:5:15","nodeType":"VariableDeclaration","scope":16382,"src":"82818:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16374,"name":"int256","nodeType":"ElementaryTypeName","src":"82818:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16377,"mutability":"mutable","name":"decimals","nameLocation":"82840:8:15","nodeType":"VariableDeclaration","scope":16382,"src":"82832:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16376,"name":"uint256","nodeType":"ElementaryTypeName","src":"82832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16379,"mutability":"mutable","name":"error","nameLocation":"82866:5:15","nodeType":"VariableDeclaration","scope":16382,"src":"82850:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16378,"name":"string","nodeType":"ElementaryTypeName","src":"82850:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82804:68:15"},"returnParameters":{"id":16381,"nodeType":"ParameterList","parameters":[],"src":"82886:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16390,"nodeType":"FunctionDefinition","src":"82976:61:15","nodes":[],"documentation":{"id":16383,"nodeType":"StructuredDocumentation","src":"82893:78:15","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"82985:8:15","parameters":{"id":16388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16385,"mutability":"mutable","name":"left","nameLocation":"83002:4:15","nodeType":"VariableDeclaration","scope":16390,"src":"82994:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16384,"name":"uint256","nodeType":"ElementaryTypeName","src":"82994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16387,"mutability":"mutable","name":"right","nameLocation":"83016:5:15","nodeType":"VariableDeclaration","scope":16390,"src":"83008:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16386,"name":"uint256","nodeType":"ElementaryTypeName","src":"83008:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82993:29:15"},"returnParameters":{"id":16389,"nodeType":"ParameterList","parameters":[],"src":"83036:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16400,"nodeType":"FunctionDefinition","src":"83188:84:15","nodes":[],"documentation":{"id":16391,"nodeType":"StructuredDocumentation","src":"83043:140:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"83197:8:15","parameters":{"id":16398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16393,"mutability":"mutable","name":"left","nameLocation":"83214:4:15","nodeType":"VariableDeclaration","scope":16400,"src":"83206:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16392,"name":"uint256","nodeType":"ElementaryTypeName","src":"83206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16395,"mutability":"mutable","name":"right","nameLocation":"83228:5:15","nodeType":"VariableDeclaration","scope":16400,"src":"83220:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16394,"name":"uint256","nodeType":"ElementaryTypeName","src":"83220:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16397,"mutability":"mutable","name":"error","nameLocation":"83251:5:15","nodeType":"VariableDeclaration","scope":16400,"src":"83235:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16396,"name":"string","nodeType":"ElementaryTypeName","src":"83235:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83205:52:15"},"returnParameters":{"id":16399,"nodeType":"ParameterList","parameters":[],"src":"83271:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16408,"nodeType":"FunctionDefinition","src":"83360:59:15","nodes":[],"documentation":{"id":16401,"nodeType":"StructuredDocumentation","src":"83278:77:15","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"83369:8:15","parameters":{"id":16406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16403,"mutability":"mutable","name":"left","nameLocation":"83385:4:15","nodeType":"VariableDeclaration","scope":16408,"src":"83378:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16402,"name":"int256","nodeType":"ElementaryTypeName","src":"83378:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16405,"mutability":"mutable","name":"right","nameLocation":"83398:5:15","nodeType":"VariableDeclaration","scope":16408,"src":"83391:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16404,"name":"int256","nodeType":"ElementaryTypeName","src":"83391:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"83377:27:15"},"returnParameters":{"id":16407,"nodeType":"ParameterList","parameters":[],"src":"83418:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16418,"nodeType":"FunctionDefinition","src":"83569:82:15","nodes":[],"documentation":{"id":16409,"nodeType":"StructuredDocumentation","src":"83425:139:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"83578:8:15","parameters":{"id":16416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16411,"mutability":"mutable","name":"left","nameLocation":"83594:4:15","nodeType":"VariableDeclaration","scope":16418,"src":"83587:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16410,"name":"int256","nodeType":"ElementaryTypeName","src":"83587:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16413,"mutability":"mutable","name":"right","nameLocation":"83607:5:15","nodeType":"VariableDeclaration","scope":16418,"src":"83600:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16412,"name":"int256","nodeType":"ElementaryTypeName","src":"83600:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16415,"mutability":"mutable","name":"error","nameLocation":"83630:5:15","nodeType":"VariableDeclaration","scope":16418,"src":"83614:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16414,"name":"string","nodeType":"ElementaryTypeName","src":"83614:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83586:50:15"},"returnParameters":{"id":16417,"nodeType":"ParameterList","parameters":[],"src":"83650:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16428,"nodeType":"FunctionDefinition","src":"83764:89:15","nodes":[],"documentation":{"id":16419,"nodeType":"StructuredDocumentation","src":"83657:102:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"83773:18:15","parameters":{"id":16426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16421,"mutability":"mutable","name":"left","nameLocation":"83800:4:15","nodeType":"VariableDeclaration","scope":16428,"src":"83792:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16420,"name":"uint256","nodeType":"ElementaryTypeName","src":"83792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16423,"mutability":"mutable","name":"right","nameLocation":"83814:5:15","nodeType":"VariableDeclaration","scope":16428,"src":"83806:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16422,"name":"uint256","nodeType":"ElementaryTypeName","src":"83806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16425,"mutability":"mutable","name":"decimals","nameLocation":"83829:8:15","nodeType":"VariableDeclaration","scope":16428,"src":"83821:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16424,"name":"uint256","nodeType":"ElementaryTypeName","src":"83821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83791:47:15"},"returnParameters":{"id":16427,"nodeType":"ParameterList","parameters":[],"src":"83852:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16440,"nodeType":"FunctionDefinition","src":"84028:112:15","nodes":[],"documentation":{"id":16429,"nodeType":"StructuredDocumentation","src":"83859:164:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"84037:18:15","parameters":{"id":16438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16431,"mutability":"mutable","name":"left","nameLocation":"84064:4:15","nodeType":"VariableDeclaration","scope":16440,"src":"84056:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16430,"name":"uint256","nodeType":"ElementaryTypeName","src":"84056:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16433,"mutability":"mutable","name":"right","nameLocation":"84078:5:15","nodeType":"VariableDeclaration","scope":16440,"src":"84070:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16432,"name":"uint256","nodeType":"ElementaryTypeName","src":"84070:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16435,"mutability":"mutable","name":"decimals","nameLocation":"84093:8:15","nodeType":"VariableDeclaration","scope":16440,"src":"84085:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16434,"name":"uint256","nodeType":"ElementaryTypeName","src":"84085:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16437,"mutability":"mutable","name":"error","nameLocation":"84119:5:15","nodeType":"VariableDeclaration","scope":16440,"src":"84103:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16436,"name":"string","nodeType":"ElementaryTypeName","src":"84103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84055:70:15"},"returnParameters":{"id":16439,"nodeType":"ParameterList","parameters":[],"src":"84139:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16450,"nodeType":"FunctionDefinition","src":"84252:87:15","nodes":[],"documentation":{"id":16441,"nodeType":"StructuredDocumentation","src":"84146:101:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"84261:18:15","parameters":{"id":16448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16443,"mutability":"mutable","name":"left","nameLocation":"84287:4:15","nodeType":"VariableDeclaration","scope":16450,"src":"84280:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16442,"name":"int256","nodeType":"ElementaryTypeName","src":"84280:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16445,"mutability":"mutable","name":"right","nameLocation":"84300:5:15","nodeType":"VariableDeclaration","scope":16450,"src":"84293:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16444,"name":"int256","nodeType":"ElementaryTypeName","src":"84293:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16447,"mutability":"mutable","name":"decimals","nameLocation":"84315:8:15","nodeType":"VariableDeclaration","scope":16450,"src":"84307:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16446,"name":"uint256","nodeType":"ElementaryTypeName","src":"84307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84279:45:15"},"returnParameters":{"id":16449,"nodeType":"ParameterList","parameters":[],"src":"84338:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16462,"nodeType":"FunctionDefinition","src":"84513:110:15","nodes":[],"documentation":{"id":16451,"nodeType":"StructuredDocumentation","src":"84345:163:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"84522:18:15","parameters":{"id":16460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16453,"mutability":"mutable","name":"left","nameLocation":"84548:4:15","nodeType":"VariableDeclaration","scope":16462,"src":"84541:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16452,"name":"int256","nodeType":"ElementaryTypeName","src":"84541:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16455,"mutability":"mutable","name":"right","nameLocation":"84561:5:15","nodeType":"VariableDeclaration","scope":16462,"src":"84554:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16454,"name":"int256","nodeType":"ElementaryTypeName","src":"84554:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16457,"mutability":"mutable","name":"decimals","nameLocation":"84576:8:15","nodeType":"VariableDeclaration","scope":16462,"src":"84568:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16456,"name":"uint256","nodeType":"ElementaryTypeName","src":"84568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16459,"mutability":"mutable","name":"error","nameLocation":"84602:5:15","nodeType":"VariableDeclaration","scope":16462,"src":"84586:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16458,"name":"string","nodeType":"ElementaryTypeName","src":"84586:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84540:68:15"},"returnParameters":{"id":16461,"nodeType":"ParameterList","parameters":[],"src":"84622:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16470,"nodeType":"FunctionDefinition","src":"84683:58:15","nodes":[],"documentation":{"id":16463,"nodeType":"StructuredDocumentation","src":"84629:49:15","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84692:11:15","parameters":{"id":16468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16465,"mutability":"mutable","name":"left","nameLocation":"84709:4:15","nodeType":"VariableDeclaration","scope":16470,"src":"84704:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16464,"name":"bool","nodeType":"ElementaryTypeName","src":"84704:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16467,"mutability":"mutable","name":"right","nameLocation":"84720:5:15","nodeType":"VariableDeclaration","scope":16470,"src":"84715:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16466,"name":"bool","nodeType":"ElementaryTypeName","src":"84715:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84703:23:15"},"returnParameters":{"id":16469,"nodeType":"ParameterList","parameters":[],"src":"84740:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16480,"nodeType":"FunctionDefinition","src":"84858:81:15","nodes":[],"documentation":{"id":16471,"nodeType":"StructuredDocumentation","src":"84747:106:15","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"84867:11:15","parameters":{"id":16478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16473,"mutability":"mutable","name":"left","nameLocation":"84884:4:15","nodeType":"VariableDeclaration","scope":16480,"src":"84879:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16472,"name":"bool","nodeType":"ElementaryTypeName","src":"84879:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16475,"mutability":"mutable","name":"right","nameLocation":"84895:5:15","nodeType":"VariableDeclaration","scope":16480,"src":"84890:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16474,"name":"bool","nodeType":"ElementaryTypeName","src":"84890:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16477,"mutability":"mutable","name":"error","nameLocation":"84918:5:15","nodeType":"VariableDeclaration","scope":16480,"src":"84902:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16476,"name":"string","nodeType":"ElementaryTypeName","src":"84902:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"84878:46:15"},"returnParameters":{"id":16479,"nodeType":"ParameterList","parameters":[],"src":"84938:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16488,"nodeType":"FunctionDefinition","src":"85001:80:15","nodes":[],"documentation":{"id":16481,"nodeType":"StructuredDocumentation","src":"84945:51:15","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85010:11:15","parameters":{"id":16486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16483,"mutability":"mutable","name":"left","nameLocation":"85038:4:15","nodeType":"VariableDeclaration","scope":16488,"src":"85022:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16482,"name":"string","nodeType":"ElementaryTypeName","src":"85022:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16485,"mutability":"mutable","name":"right","nameLocation":"85060:5:15","nodeType":"VariableDeclaration","scope":16488,"src":"85044:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16484,"name":"string","nodeType":"ElementaryTypeName","src":"85044:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85021:45:15"},"returnParameters":{"id":16487,"nodeType":"ParameterList","parameters":[],"src":"85080:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16498,"nodeType":"FunctionDefinition","src":"85200:103:15","nodes":[],"documentation":{"id":16489,"nodeType":"StructuredDocumentation","src":"85087:108:15","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85209:11:15","parameters":{"id":16496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16491,"mutability":"mutable","name":"left","nameLocation":"85237:4:15","nodeType":"VariableDeclaration","scope":16498,"src":"85221:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16490,"name":"string","nodeType":"ElementaryTypeName","src":"85221:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16493,"mutability":"mutable","name":"right","nameLocation":"85259:5:15","nodeType":"VariableDeclaration","scope":16498,"src":"85243:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16492,"name":"string","nodeType":"ElementaryTypeName","src":"85243:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16495,"mutability":"mutable","name":"error","nameLocation":"85282:5:15","nodeType":"VariableDeclaration","scope":16498,"src":"85266:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16494,"name":"string","nodeType":"ElementaryTypeName","src":"85266:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85220:68:15"},"returnParameters":{"id":16497,"nodeType":"ParameterList","parameters":[],"src":"85302:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16506,"nodeType":"FunctionDefinition","src":"85364:78:15","nodes":[],"documentation":{"id":16499,"nodeType":"StructuredDocumentation","src":"85309:50:15","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85373:11:15","parameters":{"id":16504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16501,"mutability":"mutable","name":"left","nameLocation":"85400:4:15","nodeType":"VariableDeclaration","scope":16506,"src":"85385:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16500,"name":"bytes","nodeType":"ElementaryTypeName","src":"85385:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16503,"mutability":"mutable","name":"right","nameLocation":"85421:5:15","nodeType":"VariableDeclaration","scope":16506,"src":"85406:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16502,"name":"bytes","nodeType":"ElementaryTypeName","src":"85406:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"85384:43:15"},"returnParameters":{"id":16505,"nodeType":"ParameterList","parameters":[],"src":"85441:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16516,"nodeType":"FunctionDefinition","src":"85560:101:15","nodes":[],"documentation":{"id":16507,"nodeType":"StructuredDocumentation","src":"85448:107:15","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85569:11:15","parameters":{"id":16514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16509,"mutability":"mutable","name":"left","nameLocation":"85596:4:15","nodeType":"VariableDeclaration","scope":16516,"src":"85581:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16508,"name":"bytes","nodeType":"ElementaryTypeName","src":"85581:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16511,"mutability":"mutable","name":"right","nameLocation":"85617:5:15","nodeType":"VariableDeclaration","scope":16516,"src":"85602:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16510,"name":"bytes","nodeType":"ElementaryTypeName","src":"85602:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16513,"mutability":"mutable","name":"error","nameLocation":"85640:5:15","nodeType":"VariableDeclaration","scope":16516,"src":"85624:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16512,"name":"string","nodeType":"ElementaryTypeName","src":"85624:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85580:66:15"},"returnParameters":{"id":16515,"nodeType":"ParameterList","parameters":[],"src":"85660:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16526,"nodeType":"FunctionDefinition","src":"85731:80:15","nodes":[],"documentation":{"id":16517,"nodeType":"StructuredDocumentation","src":"85667:59:15","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85740:11:15","parameters":{"id":16524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16520,"mutability":"mutable","name":"left","nameLocation":"85768:4:15","nodeType":"VariableDeclaration","scope":16526,"src":"85752:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16518,"name":"bool","nodeType":"ElementaryTypeName","src":"85752:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16519,"nodeType":"ArrayTypeName","src":"85752:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":16523,"mutability":"mutable","name":"right","nameLocation":"85790:5:15","nodeType":"VariableDeclaration","scope":16526,"src":"85774:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16521,"name":"bool","nodeType":"ElementaryTypeName","src":"85774:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16522,"nodeType":"ArrayTypeName","src":"85774:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"85751:45:15"},"returnParameters":{"id":16525,"nodeType":"ParameterList","parameters":[],"src":"85810:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16538,"nodeType":"FunctionDefinition","src":"85938:103:15","nodes":[],"documentation":{"id":16527,"nodeType":"StructuredDocumentation","src":"85817:116:15","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"85947:11:15","parameters":{"id":16536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16530,"mutability":"mutable","name":"left","nameLocation":"85975:4:15","nodeType":"VariableDeclaration","scope":16538,"src":"85959:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16528,"name":"bool","nodeType":"ElementaryTypeName","src":"85959:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16529,"nodeType":"ArrayTypeName","src":"85959:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":16533,"mutability":"mutable","name":"right","nameLocation":"85997:5:15","nodeType":"VariableDeclaration","scope":16538,"src":"85981:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16531,"name":"bool","nodeType":"ElementaryTypeName","src":"85981:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16532,"nodeType":"ArrayTypeName","src":"85981:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":16535,"mutability":"mutable","name":"error","nameLocation":"86020:5:15","nodeType":"VariableDeclaration","scope":16538,"src":"86004:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16534,"name":"string","nodeType":"ElementaryTypeName","src":"86004:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"85958:68:15"},"returnParameters":{"id":16537,"nodeType":"ParameterList","parameters":[],"src":"86040:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16548,"nodeType":"FunctionDefinition","src":"86114:86:15","nodes":[],"documentation":{"id":16539,"nodeType":"StructuredDocumentation","src":"86047:62:15","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86123:11:15","parameters":{"id":16546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16542,"mutability":"mutable","name":"left","nameLocation":"86154:4:15","nodeType":"VariableDeclaration","scope":16548,"src":"86135:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16540,"name":"uint256","nodeType":"ElementaryTypeName","src":"86135:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16541,"nodeType":"ArrayTypeName","src":"86135:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16545,"mutability":"mutable","name":"right","nameLocation":"86179:5:15","nodeType":"VariableDeclaration","scope":16548,"src":"86160:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16543,"name":"uint256","nodeType":"ElementaryTypeName","src":"86160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16544,"nodeType":"ArrayTypeName","src":"86160:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"86134:51:15"},"returnParameters":{"id":16547,"nodeType":"ParameterList","parameters":[],"src":"86199:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16560,"nodeType":"FunctionDefinition","src":"86330:109:15","nodes":[],"documentation":{"id":16549,"nodeType":"StructuredDocumentation","src":"86206:119:15","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86339:11:15","parameters":{"id":16558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16552,"mutability":"mutable","name":"left","nameLocation":"86370:4:15","nodeType":"VariableDeclaration","scope":16560,"src":"86351:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16550,"name":"uint256","nodeType":"ElementaryTypeName","src":"86351:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16551,"nodeType":"ArrayTypeName","src":"86351:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16555,"mutability":"mutable","name":"right","nameLocation":"86395:5:15","nodeType":"VariableDeclaration","scope":16560,"src":"86376:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":16553,"name":"uint256","nodeType":"ElementaryTypeName","src":"86376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16554,"nodeType":"ArrayTypeName","src":"86376:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":16557,"mutability":"mutable","name":"error","nameLocation":"86418:5:15","nodeType":"VariableDeclaration","scope":16560,"src":"86402:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16556,"name":"string","nodeType":"ElementaryTypeName","src":"86402:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86350:74:15"},"returnParameters":{"id":16559,"nodeType":"ParameterList","parameters":[],"src":"86438:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16570,"nodeType":"FunctionDefinition","src":"86511:84:15","nodes":[],"documentation":{"id":16561,"nodeType":"StructuredDocumentation","src":"86445:61:15","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86520:11:15","parameters":{"id":16568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16564,"mutability":"mutable","name":"left","nameLocation":"86550:4:15","nodeType":"VariableDeclaration","scope":16570,"src":"86532:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16562,"name":"int256","nodeType":"ElementaryTypeName","src":"86532:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16563,"nodeType":"ArrayTypeName","src":"86532:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16567,"mutability":"mutable","name":"right","nameLocation":"86574:5:15","nodeType":"VariableDeclaration","scope":16570,"src":"86556:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16565,"name":"int256","nodeType":"ElementaryTypeName","src":"86556:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16566,"nodeType":"ArrayTypeName","src":"86556:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"86531:49:15"},"returnParameters":{"id":16569,"nodeType":"ParameterList","parameters":[],"src":"86594:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16582,"nodeType":"FunctionDefinition","src":"86724:107:15","nodes":[],"documentation":{"id":16571,"nodeType":"StructuredDocumentation","src":"86601:118:15","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86733:11:15","parameters":{"id":16580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16574,"mutability":"mutable","name":"left","nameLocation":"86763:4:15","nodeType":"VariableDeclaration","scope":16582,"src":"86745:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16572,"name":"int256","nodeType":"ElementaryTypeName","src":"86745:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16573,"nodeType":"ArrayTypeName","src":"86745:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16577,"mutability":"mutable","name":"right","nameLocation":"86787:5:15","nodeType":"VariableDeclaration","scope":16582,"src":"86769:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16575,"name":"int256","nodeType":"ElementaryTypeName","src":"86769:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16576,"nodeType":"ArrayTypeName","src":"86769:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":16579,"mutability":"mutable","name":"error","nameLocation":"86810:5:15","nodeType":"VariableDeclaration","scope":16582,"src":"86794:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16578,"name":"string","nodeType":"ElementaryTypeName","src":"86794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"86744:72:15"},"returnParameters":{"id":16581,"nodeType":"ParameterList","parameters":[],"src":"86830:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16590,"nodeType":"FunctionDefinition","src":"86894:64:15","nodes":[],"documentation":{"id":16583,"nodeType":"StructuredDocumentation","src":"86837:52:15","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"86903:11:15","parameters":{"id":16588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16585,"mutability":"mutable","name":"left","nameLocation":"86923:4:15","nodeType":"VariableDeclaration","scope":16590,"src":"86915:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16584,"name":"uint256","nodeType":"ElementaryTypeName","src":"86915:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16587,"mutability":"mutable","name":"right","nameLocation":"86937:5:15","nodeType":"VariableDeclaration","scope":16590,"src":"86929:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16586,"name":"uint256","nodeType":"ElementaryTypeName","src":"86929:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86914:29:15"},"returnParameters":{"id":16589,"nodeType":"ParameterList","parameters":[],"src":"86957:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16600,"nodeType":"FunctionDefinition","src":"87031:86:15","nodes":[],"documentation":{"id":16591,"nodeType":"StructuredDocumentation","src":"86964:62:15","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87040:11:15","parameters":{"id":16598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16594,"mutability":"mutable","name":"left","nameLocation":"87071:4:15","nodeType":"VariableDeclaration","scope":16600,"src":"87052:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16592,"name":"address","nodeType":"ElementaryTypeName","src":"87052:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16593,"nodeType":"ArrayTypeName","src":"87052:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16597,"mutability":"mutable","name":"right","nameLocation":"87096:5:15","nodeType":"VariableDeclaration","scope":16600,"src":"87077:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16595,"name":"address","nodeType":"ElementaryTypeName","src":"87077:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16596,"nodeType":"ArrayTypeName","src":"87077:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"87051:51:15"},"returnParameters":{"id":16599,"nodeType":"ParameterList","parameters":[],"src":"87116:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16612,"nodeType":"FunctionDefinition","src":"87247:109:15","nodes":[],"documentation":{"id":16601,"nodeType":"StructuredDocumentation","src":"87123:119:15","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87256:11:15","parameters":{"id":16610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16604,"mutability":"mutable","name":"left","nameLocation":"87287:4:15","nodeType":"VariableDeclaration","scope":16612,"src":"87268:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16602,"name":"address","nodeType":"ElementaryTypeName","src":"87268:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16603,"nodeType":"ArrayTypeName","src":"87268:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16607,"mutability":"mutable","name":"right","nameLocation":"87312:5:15","nodeType":"VariableDeclaration","scope":16612,"src":"87293:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16605,"name":"address","nodeType":"ElementaryTypeName","src":"87293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16606,"nodeType":"ArrayTypeName","src":"87293:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":16609,"mutability":"mutable","name":"error","nameLocation":"87335:5:15","nodeType":"VariableDeclaration","scope":16612,"src":"87319:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16608,"name":"string","nodeType":"ElementaryTypeName","src":"87319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87267:74:15"},"returnParameters":{"id":16611,"nodeType":"ParameterList","parameters":[],"src":"87355:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16622,"nodeType":"FunctionDefinition","src":"87429:86:15","nodes":[],"documentation":{"id":16613,"nodeType":"StructuredDocumentation","src":"87362:62:15","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87438:11:15","parameters":{"id":16620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16616,"mutability":"mutable","name":"left","nameLocation":"87469:4:15","nodeType":"VariableDeclaration","scope":16622,"src":"87450:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87450:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16615,"nodeType":"ArrayTypeName","src":"87450:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16619,"mutability":"mutable","name":"right","nameLocation":"87494:5:15","nodeType":"VariableDeclaration","scope":16622,"src":"87475:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87475:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16618,"nodeType":"ArrayTypeName","src":"87475:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"87449:51:15"},"returnParameters":{"id":16621,"nodeType":"ParameterList","parameters":[],"src":"87514:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16634,"nodeType":"FunctionDefinition","src":"87645:109:15","nodes":[],"documentation":{"id":16623,"nodeType":"StructuredDocumentation","src":"87521:119:15","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87654:11:15","parameters":{"id":16632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16626,"mutability":"mutable","name":"left","nameLocation":"87685:4:15","nodeType":"VariableDeclaration","scope":16634,"src":"87666:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87666:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16625,"nodeType":"ArrayTypeName","src":"87666:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16629,"mutability":"mutable","name":"right","nameLocation":"87710:5:15","nodeType":"VariableDeclaration","scope":16634,"src":"87691:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87691:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16628,"nodeType":"ArrayTypeName","src":"87691:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":16631,"mutability":"mutable","name":"error","nameLocation":"87733:5:15","nodeType":"VariableDeclaration","scope":16634,"src":"87717:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16630,"name":"string","nodeType":"ElementaryTypeName","src":"87717:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"87665:74:15"},"returnParameters":{"id":16633,"nodeType":"ParameterList","parameters":[],"src":"87753:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16644,"nodeType":"FunctionDefinition","src":"87826:84:15","nodes":[],"documentation":{"id":16635,"nodeType":"StructuredDocumentation","src":"87760:61:15","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"87835:11:15","parameters":{"id":16642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16638,"mutability":"mutable","name":"left","nameLocation":"87865:4:15","nodeType":"VariableDeclaration","scope":16644,"src":"87847:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16636,"name":"string","nodeType":"ElementaryTypeName","src":"87847:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16637,"nodeType":"ArrayTypeName","src":"87847:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16641,"mutability":"mutable","name":"right","nameLocation":"87889:5:15","nodeType":"VariableDeclaration","scope":16644,"src":"87871:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16639,"name":"string","nodeType":"ElementaryTypeName","src":"87871:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16640,"nodeType":"ArrayTypeName","src":"87871:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"87846:49:15"},"returnParameters":{"id":16643,"nodeType":"ParameterList","parameters":[],"src":"87909:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16656,"nodeType":"FunctionDefinition","src":"88039:107:15","nodes":[],"documentation":{"id":16645,"nodeType":"StructuredDocumentation","src":"87916:118:15","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88048:11:15","parameters":{"id":16654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16648,"mutability":"mutable","name":"left","nameLocation":"88078:4:15","nodeType":"VariableDeclaration","scope":16656,"src":"88060:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16646,"name":"string","nodeType":"ElementaryTypeName","src":"88060:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16647,"nodeType":"ArrayTypeName","src":"88060:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16651,"mutability":"mutable","name":"right","nameLocation":"88102:5:15","nodeType":"VariableDeclaration","scope":16656,"src":"88084:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16649,"name":"string","nodeType":"ElementaryTypeName","src":"88084:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16650,"nodeType":"ArrayTypeName","src":"88084:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":16653,"mutability":"mutable","name":"error","nameLocation":"88125:5:15","nodeType":"VariableDeclaration","scope":16656,"src":"88109:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16652,"name":"string","nodeType":"ElementaryTypeName","src":"88109:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88059:72:15"},"returnParameters":{"id":16655,"nodeType":"ParameterList","parameters":[],"src":"88145:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16666,"nodeType":"FunctionDefinition","src":"88217:82:15","nodes":[],"documentation":{"id":16657,"nodeType":"StructuredDocumentation","src":"88152:60:15","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88226:11:15","parameters":{"id":16664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16660,"mutability":"mutable","name":"left","nameLocation":"88255:4:15","nodeType":"VariableDeclaration","scope":16666,"src":"88238:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16658,"name":"bytes","nodeType":"ElementaryTypeName","src":"88238:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16659,"nodeType":"ArrayTypeName","src":"88238:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16663,"mutability":"mutable","name":"right","nameLocation":"88278:5:15","nodeType":"VariableDeclaration","scope":16666,"src":"88261:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16661,"name":"bytes","nodeType":"ElementaryTypeName","src":"88261:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16662,"nodeType":"ArrayTypeName","src":"88261:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"88237:47:15"},"returnParameters":{"id":16665,"nodeType":"ParameterList","parameters":[],"src":"88298:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16678,"nodeType":"FunctionDefinition","src":"88427:105:15","nodes":[],"documentation":{"id":16667,"nodeType":"StructuredDocumentation","src":"88305:117:15","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88436:11:15","parameters":{"id":16676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16670,"mutability":"mutable","name":"left","nameLocation":"88465:4:15","nodeType":"VariableDeclaration","scope":16678,"src":"88448:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16668,"name":"bytes","nodeType":"ElementaryTypeName","src":"88448:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16669,"nodeType":"ArrayTypeName","src":"88448:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16673,"mutability":"mutable","name":"right","nameLocation":"88488:5:15","nodeType":"VariableDeclaration","scope":16678,"src":"88471:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16671,"name":"bytes","nodeType":"ElementaryTypeName","src":"88471:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16672,"nodeType":"ArrayTypeName","src":"88471:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":16675,"mutability":"mutable","name":"error","nameLocation":"88511:5:15","nodeType":"VariableDeclaration","scope":16678,"src":"88495:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16674,"name":"string","nodeType":"ElementaryTypeName","src":"88495:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88447:70:15"},"returnParameters":{"id":16677,"nodeType":"ParameterList","parameters":[],"src":"88531:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16688,"nodeType":"FunctionDefinition","src":"88652:87:15","nodes":[],"documentation":{"id":16679,"nodeType":"StructuredDocumentation","src":"88538:109:15","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88661:11:15","parameters":{"id":16686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16681,"mutability":"mutable","name":"left","nameLocation":"88681:4:15","nodeType":"VariableDeclaration","scope":16688,"src":"88673:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16680,"name":"uint256","nodeType":"ElementaryTypeName","src":"88673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16683,"mutability":"mutable","name":"right","nameLocation":"88695:5:15","nodeType":"VariableDeclaration","scope":16688,"src":"88687:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16682,"name":"uint256","nodeType":"ElementaryTypeName","src":"88687:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16685,"mutability":"mutable","name":"error","nameLocation":"88718:5:15","nodeType":"VariableDeclaration","scope":16688,"src":"88702:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16684,"name":"string","nodeType":"ElementaryTypeName","src":"88702:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"88672:52:15"},"returnParameters":{"id":16687,"nodeType":"ParameterList","parameters":[],"src":"88738:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16696,"nodeType":"FunctionDefinition","src":"88801:62:15","nodes":[],"documentation":{"id":16689,"nodeType":"StructuredDocumentation","src":"88745:51:15","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88810:11:15","parameters":{"id":16694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16691,"mutability":"mutable","name":"left","nameLocation":"88829:4:15","nodeType":"VariableDeclaration","scope":16696,"src":"88822:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16690,"name":"int256","nodeType":"ElementaryTypeName","src":"88822:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16693,"mutability":"mutable","name":"right","nameLocation":"88842:5:15","nodeType":"VariableDeclaration","scope":16696,"src":"88835:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16692,"name":"int256","nodeType":"ElementaryTypeName","src":"88835:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"88821:27:15"},"returnParameters":{"id":16695,"nodeType":"ParameterList","parameters":[],"src":"88862:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16706,"nodeType":"FunctionDefinition","src":"88982:85:15","nodes":[],"documentation":{"id":16697,"nodeType":"StructuredDocumentation","src":"88869:108:15","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"88991:11:15","parameters":{"id":16704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16699,"mutability":"mutable","name":"left","nameLocation":"89010:4:15","nodeType":"VariableDeclaration","scope":16706,"src":"89003:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16698,"name":"int256","nodeType":"ElementaryTypeName","src":"89003:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16701,"mutability":"mutable","name":"right","nameLocation":"89023:5:15","nodeType":"VariableDeclaration","scope":16706,"src":"89016:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16700,"name":"int256","nodeType":"ElementaryTypeName","src":"89016:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":16703,"mutability":"mutable","name":"error","nameLocation":"89046:5:15","nodeType":"VariableDeclaration","scope":16706,"src":"89030:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16702,"name":"string","nodeType":"ElementaryTypeName","src":"89030:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89002:50:15"},"returnParameters":{"id":16705,"nodeType":"ParameterList","parameters":[],"src":"89066:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16714,"nodeType":"FunctionDefinition","src":"89130:64:15","nodes":[],"documentation":{"id":16707,"nodeType":"StructuredDocumentation","src":"89073:52:15","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89139:11:15","parameters":{"id":16712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16709,"mutability":"mutable","name":"left","nameLocation":"89159:4:15","nodeType":"VariableDeclaration","scope":16714,"src":"89151:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16708,"name":"address","nodeType":"ElementaryTypeName","src":"89151:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16711,"mutability":"mutable","name":"right","nameLocation":"89173:5:15","nodeType":"VariableDeclaration","scope":16714,"src":"89165:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16710,"name":"address","nodeType":"ElementaryTypeName","src":"89165:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89150:29:15"},"returnParameters":{"id":16713,"nodeType":"ParameterList","parameters":[],"src":"89193:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16724,"nodeType":"FunctionDefinition","src":"89314:87:15","nodes":[],"documentation":{"id":16715,"nodeType":"StructuredDocumentation","src":"89200:109:15","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89323:11:15","parameters":{"id":16722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16717,"mutability":"mutable","name":"left","nameLocation":"89343:4:15","nodeType":"VariableDeclaration","scope":16724,"src":"89335:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16716,"name":"address","nodeType":"ElementaryTypeName","src":"89335:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16719,"mutability":"mutable","name":"right","nameLocation":"89357:5:15","nodeType":"VariableDeclaration","scope":16724,"src":"89349:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16718,"name":"address","nodeType":"ElementaryTypeName","src":"89349:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16721,"mutability":"mutable","name":"error","nameLocation":"89380:5:15","nodeType":"VariableDeclaration","scope":16724,"src":"89364:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16720,"name":"string","nodeType":"ElementaryTypeName","src":"89364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89334:52:15"},"returnParameters":{"id":16723,"nodeType":"ParameterList","parameters":[],"src":"89400:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16732,"nodeType":"FunctionDefinition","src":"89464:64:15","nodes":[],"documentation":{"id":16725,"nodeType":"StructuredDocumentation","src":"89407:52:15","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89473:11:15","parameters":{"id":16730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16727,"mutability":"mutable","name":"left","nameLocation":"89493:4:15","nodeType":"VariableDeclaration","scope":16732,"src":"89485:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89485:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16729,"mutability":"mutable","name":"right","nameLocation":"89507:5:15","nodeType":"VariableDeclaration","scope":16732,"src":"89499:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89499:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89484:29:15"},"returnParameters":{"id":16731,"nodeType":"ParameterList","parameters":[],"src":"89527:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16742,"nodeType":"FunctionDefinition","src":"89648:87:15","nodes":[],"documentation":{"id":16733,"nodeType":"StructuredDocumentation","src":"89534:109:15","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"89657:11:15","parameters":{"id":16740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16735,"mutability":"mutable","name":"left","nameLocation":"89677:4:15","nodeType":"VariableDeclaration","scope":16742,"src":"89669:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89669:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16737,"mutability":"mutable","name":"right","nameLocation":"89691:5:15","nodeType":"VariableDeclaration","scope":16742,"src":"89683:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89683:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16739,"mutability":"mutable","name":"error","nameLocation":"89714:5:15","nodeType":"VariableDeclaration","scope":16742,"src":"89698:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16738,"name":"string","nodeType":"ElementaryTypeName","src":"89698:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89668:52:15"},"returnParameters":{"id":16741,"nodeType":"ParameterList","parameters":[],"src":"89734:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16748,"nodeType":"FunctionDefinition","src":"89791:50:15","nodes":[],"documentation":{"id":16743,"nodeType":"StructuredDocumentation","src":"89741:45:15","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"89800:10:15","parameters":{"id":16746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16745,"mutability":"mutable","name":"condition","nameLocation":"89816:9:15","nodeType":"VariableDeclaration","scope":16748,"src":"89811:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16744,"name":"bool","nodeType":"ElementaryTypeName","src":"89811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"89810:16:15"},"returnParameters":{"id":16747,"nodeType":"ParameterList","parameters":[],"src":"89840:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16756,"nodeType":"FunctionDefinition","src":"89954:73:15","nodes":[],"documentation":{"id":16749,"nodeType":"StructuredDocumentation","src":"89847:102:15","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"89963:10:15","parameters":{"id":16754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16751,"mutability":"mutable","name":"condition","nameLocation":"89979:9:15","nodeType":"VariableDeclaration","scope":16756,"src":"89974:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16750,"name":"bool","nodeType":"ElementaryTypeName","src":"89974:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16753,"mutability":"mutable","name":"error","nameLocation":"90006:5:15","nodeType":"VariableDeclaration","scope":16756,"src":"89990:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16752,"name":"string","nodeType":"ElementaryTypeName","src":"89990:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"89973:39:15"},"returnParameters":{"id":16755,"nodeType":"ParameterList","parameters":[],"src":"90026:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16762,"nodeType":"FunctionDefinition","src":"90122:46:15","nodes":[],"documentation":{"id":16757,"nodeType":"StructuredDocumentation","src":"90033:84:15","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"90131:6:15","parameters":{"id":16760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16759,"mutability":"mutable","name":"condition","nameLocation":"90143:9:15","nodeType":"VariableDeclaration","scope":16762,"src":"90138:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16758,"name":"bool","nodeType":"ElementaryTypeName","src":"90138:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90137:16:15"},"returnParameters":{"id":16761,"nodeType":"ParameterList","parameters":[],"src":"90167:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16766,"nodeType":"FunctionDefinition","src":"90258:40:15","nodes":[],"documentation":{"id":16763,"nodeType":"StructuredDocumentation","src":"90174:79:15","text":"Discard this run's fuzz inputs and generate new ones if next call reverted."},"functionSelector":"285b366a","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"90267:14:15","parameters":{"id":16764,"nodeType":"ParameterList","parameters":[],"src":"90281:2:15"},"returnParameters":{"id":16765,"nodeType":"ParameterList","parameters":[],"src":"90297:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16773,"nodeType":"FunctionDefinition","src":"90424:80:15","nodes":[],"documentation":{"id":16767,"nodeType":"StructuredDocumentation","src":"90304:115:15","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the potential revert parameters."},"functionSelector":"d8591eeb","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"90433:14:15","parameters":{"id":16771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16770,"mutability":"mutable","name":"potentialRevert","nameLocation":"90473:15:15","nodeType":"VariableDeclaration","scope":16773,"src":"90448:40:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13505_calldata_ptr","typeString":"struct VmSafe.PotentialRevert"},"typeName":{"id":16769,"nodeType":"UserDefinedTypeName","pathNode":{"id":16768,"name":"PotentialRevert","nameLocations":["90448:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13505,"src":"90448:15:15"},"referencedDeclaration":13505,"src":"90448:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13505_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"visibility":"internal"}],"src":"90447:42:15"},"returnParameters":{"id":16772,"nodeType":"ParameterList","parameters":[],"src":"90503:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16781,"nodeType":"FunctionDefinition","src":"90641:83:15","nodes":[],"documentation":{"id":16774,"nodeType":"StructuredDocumentation","src":"90510:126:15","text":"Discard this run's fuzz inputs and generate new ones if next call reverts with the any of the potential revert parameters."},"functionSelector":"8a4592cc","implemented":false,"kind":"function","modifiers":[],"name":"assumeNoRevert","nameLocation":"90650:14:15","parameters":{"id":16779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16778,"mutability":"mutable","name":"potentialReverts","nameLocation":"90692:16:15","nodeType":"VariableDeclaration","scope":16781,"src":"90665:43:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$13505_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.PotentialRevert[]"},"typeName":{"baseType":{"id":16776,"nodeType":"UserDefinedTypeName","pathNode":{"id":16775,"name":"PotentialRevert","nameLocations":["90665:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":13505,"src":"90665:15:15"},"referencedDeclaration":13505,"src":"90665:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_PotentialRevert_$13505_storage_ptr","typeString":"struct VmSafe.PotentialRevert"}},"id":16777,"nodeType":"ArrayTypeName","src":"90665:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PotentialRevert_$13505_storage_$dyn_storage_ptr","typeString":"struct VmSafe.PotentialRevert[]"}},"visibility":"internal"}],"src":"90664:45:15"},"returnParameters":{"id":16780,"nodeType":"ParameterList","parameters":[],"src":"90723:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16787,"nodeType":"FunctionDefinition","src":"90786:56:15","nodes":[],"documentation":{"id":16782,"nodeType":"StructuredDocumentation","src":"90730:51:15","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"90795:10:15","parameters":{"id":16785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16784,"mutability":"mutable","name":"char","nameLocation":"90822:4:15","nodeType":"VariableDeclaration","scope":16787,"src":"90806:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16783,"name":"string","nodeType":"ElementaryTypeName","src":"90806:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"90805:22:15"},"returnParameters":{"id":16786,"nodeType":"ParameterList","parameters":[],"src":"90841:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16795,"nodeType":"FunctionDefinition","src":"90916:68:15","nodes":[],"documentation":{"id":16788,"nodeType":"StructuredDocumentation","src":"90848:63:15","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"90925:10:15","parameters":{"id":16793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16790,"mutability":"mutable","name":"char","nameLocation":"90952:4:15","nodeType":"VariableDeclaration","scope":16795,"src":"90936:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16789,"name":"string","nodeType":"ElementaryTypeName","src":"90936:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16792,"mutability":"mutable","name":"value","nameLocation":"90963:5:15","nodeType":"VariableDeclaration","scope":16795,"src":"90958:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16791,"name":"bool","nodeType":"ElementaryTypeName","src":"90958:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90935:34:15"},"returnParameters":{"id":16794,"nodeType":"ParameterList","parameters":[],"src":"90983:0:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16803,"nodeType":"FunctionDefinition","src":"91230:85:15","nodes":[],"documentation":{"id":16796,"nodeType":"StructuredDocumentation","src":"90990:235:15","text":"Returns true if the current Foundry version is greater than or equal to the given version.\n The given version string must be in the format `major.minor.patch`.\n This is equivalent to `foundryVersionCmp(version) >= 0`."},"functionSelector":"6248be1f","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionAtLeast","nameLocation":"91239:21:15","parameters":{"id":16799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16798,"mutability":"mutable","name":"version","nameLocation":"91277:7:15","nodeType":"VariableDeclaration","scope":16803,"src":"91261:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16797,"name":"string","nodeType":"ElementaryTypeName","src":"91261:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91260:25:15"},"returnParameters":{"id":16802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16803,"src":"91309:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16800,"name":"bool","nodeType":"ElementaryTypeName","src":"91309:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91308:6:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16811,"nodeType":"FunctionDefinition","src":"91922:83:15","nodes":[],"documentation":{"id":16804,"nodeType":"StructuredDocumentation","src":"91321:596:15","text":"Compares the current Foundry version with the given version string.\n The given version string must be in the format `major.minor.patch`.\n Returns:\n -1 if current Foundry version is less than the given version\n 0 if current Foundry version equals the given version\n 1 if current Foundry version is greater than the given version\n This result can then be used with a comparison operator against `0`.\n For example, to check if the current Foundry version is greater than or equal to `1.0.0`:\n `if (foundryVersionCmp(\"1.0.0\") >= 0) { ... }`"},"functionSelector":"ca7b0a09","implemented":false,"kind":"function","modifiers":[],"name":"foundryVersionCmp","nameLocation":"91931:17:15","parameters":{"id":16807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16806,"mutability":"mutable","name":"version","nameLocation":"91965:7:15","nodeType":"VariableDeclaration","scope":16811,"src":"91949:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16805,"name":"string","nodeType":"ElementaryTypeName","src":"91949:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"91948:25:15"},"returnParameters":{"id":16810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16811,"src":"91997:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16808,"name":"int256","nodeType":"ElementaryTypeName","src":"91997:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"91996:8:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16820,"nodeType":"FunctionDefinition","src":"92061:89:15","nodes":[],"documentation":{"id":16812,"nodeType":"StructuredDocumentation","src":"92011:45:15","text":"Returns a Chain struct for specific alias"},"functionSelector":"4cc1c2bb","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"92070:8:15","parameters":{"id":16815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16814,"mutability":"mutable","name":"chainAlias","nameLocation":"92095:10:15","nodeType":"VariableDeclaration","scope":16820,"src":"92079:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16813,"name":"string","nodeType":"ElementaryTypeName","src":"92079:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92078:28:15"},"returnParameters":{"id":16819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16818,"mutability":"mutable","name":"chain","nameLocation":"92143:5:15","nodeType":"VariableDeclaration","scope":16820,"src":"92130:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13395_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":16817,"nodeType":"UserDefinedTypeName","pathNode":{"id":16816,"name":"Chain","nameLocations":["92130:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":13395,"src":"92130:5:15"},"referencedDeclaration":13395,"src":"92130:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13395_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"92129:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16829,"nodeType":"FunctionDefinition","src":"92208:78:15","nodes":[],"documentation":{"id":16821,"nodeType":"StructuredDocumentation","src":"92156:47:15","text":"Returns a Chain struct for specific chainId"},"functionSelector":"b6791ad4","implemented":false,"kind":"function","modifiers":[],"name":"getChain","nameLocation":"92217:8:15","parameters":{"id":16824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16823,"mutability":"mutable","name":"chainId","nameLocation":"92234:7:15","nodeType":"VariableDeclaration","scope":16829,"src":"92226:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16822,"name":"uint256","nodeType":"ElementaryTypeName","src":"92226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"92225:17:15"},"returnParameters":{"id":16828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16827,"mutability":"mutable","name":"chain","nameLocation":"92279:5:15","nodeType":"VariableDeclaration","scope":16829,"src":"92266:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13395_memory_ptr","typeString":"struct VmSafe.Chain"},"typeName":{"id":16826,"nodeType":"UserDefinedTypeName","pathNode":{"id":16825,"name":"Chain","nameLocations":["92266:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":13395,"src":"92266:5:15"},"referencedDeclaration":13395,"src":"92266:5:15","typeDescriptions":{"typeIdentifier":"t_struct$_Chain_$13395_storage_ptr","typeString":"struct VmSafe.Chain"}},"visibility":"internal"}],"src":"92265:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16835,"nodeType":"FunctionDefinition","src":"92721:75:15","nodes":[],"documentation":{"id":16830,"nodeType":"StructuredDocumentation","src":"92292:424:15","text":"Returns the Foundry version.\n Format: <cargo_version>-<tag>+<git_sha_short>.<unix_build_timestamp>.<profile>\n Sample output: 0.3.0-nightly+3cb96bde9b.1737036656.debug\n Note: Build timestamps may vary slightly across platforms due to separate CI jobs.\n For reliable version comparisons, use UNIX format (e.g., >= 1700000000)\n to compare timestamps while ignoring minor time differences."},"functionSelector":"ea991bb5","implemented":false,"kind":"function","modifiers":[],"name":"getFoundryVersion","nameLocation":"92730:17:15","parameters":{"id":16831,"nodeType":"ParameterList","parameters":[],"src":"92747:2:15"},"returnParameters":{"id":16834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16833,"mutability":"mutable","name":"version","nameLocation":"92787:7:15","nodeType":"VariableDeclaration","scope":16835,"src":"92773:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16832,"name":"string","nodeType":"ElementaryTypeName","src":"92773:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92772:23:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16843,"nodeType":"FunctionDefinition","src":"92851:85:15","nodes":[],"documentation":{"id":16836,"nodeType":"StructuredDocumentation","src":"92802:44:15","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"92860:6:15","parameters":{"id":16839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16838,"mutability":"mutable","name":"rpcAlias","nameLocation":"92883:8:15","nodeType":"VariableDeclaration","scope":16843,"src":"92867:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16837,"name":"string","nodeType":"ElementaryTypeName","src":"92867:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92866:26:15"},"returnParameters":{"id":16842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16841,"mutability":"mutable","name":"json","nameLocation":"92930:4:15","nodeType":"VariableDeclaration","scope":16843,"src":"92916:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16840,"name":"string","nodeType":"ElementaryTypeName","src":"92916:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"92915:20:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16851,"nodeType":"FunctionDefinition","src":"93001:67:15","nodes":[],"documentation":{"id":16844,"nodeType":"StructuredDocumentation","src":"92942:54:15","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"93010:13:15","parameters":{"id":16845,"nodeType":"ParameterList","parameters":[],"src":"93023:2:15"},"returnParameters":{"id":16850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16849,"mutability":"mutable","name":"urls","nameLocation":"93062:4:15","nodeType":"VariableDeclaration","scope":16851,"src":"93049:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$13312_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":16847,"nodeType":"UserDefinedTypeName","pathNode":{"id":16846,"name":"Rpc","nameLocations":["93049:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13312,"src":"93049:3:15"},"referencedDeclaration":13312,"src":"93049:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$13312_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":16848,"nodeType":"ArrayTypeName","src":"93049:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$13312_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"93048:19:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16860,"nodeType":"FunctionDefinition","src":"93139:67:15","nodes":[],"documentation":{"id":16852,"nodeType":"StructuredDocumentation","src":"93074:60:15","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"93148:7:15","parameters":{"id":16853,"nodeType":"ParameterList","parameters":[],"src":"93155:2:15"},"returnParameters":{"id":16859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16858,"mutability":"mutable","name":"urls","nameLocation":"93200:4:15","nodeType":"VariableDeclaration","scope":16860,"src":"93181:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":16854,"name":"string","nodeType":"ElementaryTypeName","src":"93181:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16856,"length":{"hexValue":"32","id":16855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"93188:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"93181:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":16857,"nodeType":"ArrayTypeName","src":"93181:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"93180:25:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16866,"nodeType":"FunctionDefinition","src":"93287:42:15","nodes":[],"documentation":{"id":16861,"nodeType":"StructuredDocumentation","src":"93212:70:15","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"93296:5:15","parameters":{"id":16864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16863,"mutability":"mutable","name":"duration","nameLocation":"93310:8:15","nodeType":"VariableDeclaration","scope":16866,"src":"93302:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16862,"name":"uint256","nodeType":"ElementaryTypeName","src":"93302:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"93301:18:15"},"returnParameters":{"id":16865,"nodeType":"ParameterList","parameters":[],"src":"93328:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16876,"nodeType":"FunctionDefinition","src":"93414:95:15","nodes":[],"documentation":{"id":16867,"nodeType":"StructuredDocumentation","src":"93366:43:15","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"93423:13:15","parameters":{"id":16872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16869,"mutability":"mutable","name":"toml","nameLocation":"93453:4:15","nodeType":"VariableDeclaration","scope":16876,"src":"93437:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16868,"name":"string","nodeType":"ElementaryTypeName","src":"93437:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16871,"mutability":"mutable","name":"key","nameLocation":"93475:3:15","nodeType":"VariableDeclaration","scope":16876,"src":"93459:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16870,"name":"string","nodeType":"ElementaryTypeName","src":"93459:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93436:43:15"},"returnParameters":{"id":16875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16876,"src":"93503:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16873,"name":"bool","nodeType":"ElementaryTypeName","src":"93503:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"93502:6:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16886,"nodeType":"FunctionDefinition","src":"93590:101:15","nodes":[],"documentation":{"id":16877,"nodeType":"StructuredDocumentation","src":"93515:70:15","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"93599:16:15","parameters":{"id":16882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16879,"mutability":"mutable","name":"toml","nameLocation":"93632:4:15","nodeType":"VariableDeclaration","scope":16886,"src":"93616:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16878,"name":"string","nodeType":"ElementaryTypeName","src":"93616:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16881,"mutability":"mutable","name":"key","nameLocation":"93654:3:15","nodeType":"VariableDeclaration","scope":16886,"src":"93638:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16880,"name":"string","nodeType":"ElementaryTypeName","src":"93638:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93615:43:15"},"returnParameters":{"id":16885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16886,"src":"93682:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16883,"name":"address","nodeType":"ElementaryTypeName","src":"93682:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93681:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16897,"nodeType":"FunctionDefinition","src":"93774:139:15","nodes":[],"documentation":{"id":16887,"nodeType":"StructuredDocumentation","src":"93697:72:15","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"93783:21:15","parameters":{"id":16892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16889,"mutability":"mutable","name":"toml","nameLocation":"93821:4:15","nodeType":"VariableDeclaration","scope":16897,"src":"93805:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16888,"name":"string","nodeType":"ElementaryTypeName","src":"93805:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16891,"mutability":"mutable","name":"key","nameLocation":"93843:3:15","nodeType":"VariableDeclaration","scope":16897,"src":"93827:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16890,"name":"string","nodeType":"ElementaryTypeName","src":"93827:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"93804:43:15"},"returnParameters":{"id":16896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16897,"src":"93895:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16893,"name":"address","nodeType":"ElementaryTypeName","src":"93895:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16894,"nodeType":"ArrayTypeName","src":"93895:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"93894:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16907,"nodeType":"FunctionDefinition","src":"93991:95:15","nodes":[],"documentation":{"id":16898,"nodeType":"StructuredDocumentation","src":"93919:67:15","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"94000:13:15","parameters":{"id":16903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16900,"mutability":"mutable","name":"toml","nameLocation":"94030:4:15","nodeType":"VariableDeclaration","scope":16907,"src":"94014:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16899,"name":"string","nodeType":"ElementaryTypeName","src":"94014:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16902,"mutability":"mutable","name":"key","nameLocation":"94052:3:15","nodeType":"VariableDeclaration","scope":16907,"src":"94036:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16901,"name":"string","nodeType":"ElementaryTypeName","src":"94036:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94013:43:15"},"returnParameters":{"id":16906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16907,"src":"94080:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16904,"name":"bool","nodeType":"ElementaryTypeName","src":"94080:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94079:6:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16918,"nodeType":"FunctionDefinition","src":"94166:109:15","nodes":[],"documentation":{"id":16908,"nodeType":"StructuredDocumentation","src":"94092:69:15","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"94175:18:15","parameters":{"id":16913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16910,"mutability":"mutable","name":"toml","nameLocation":"94210:4:15","nodeType":"VariableDeclaration","scope":16918,"src":"94194:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16909,"name":"string","nodeType":"ElementaryTypeName","src":"94194:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16912,"mutability":"mutable","name":"key","nameLocation":"94232:3:15","nodeType":"VariableDeclaration","scope":16918,"src":"94216:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16911,"name":"string","nodeType":"ElementaryTypeName","src":"94216:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94193:43:15"},"returnParameters":{"id":16917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16918,"src":"94260:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":16914,"name":"bool","nodeType":"ElementaryTypeName","src":"94260:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":16915,"nodeType":"ArrayTypeName","src":"94260:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"94259:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16928,"nodeType":"FunctionDefinition","src":"94354:104:15","nodes":[],"documentation":{"id":16919,"nodeType":"StructuredDocumentation","src":"94281:68:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"94363:14:15","parameters":{"id":16924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16921,"mutability":"mutable","name":"toml","nameLocation":"94394:4:15","nodeType":"VariableDeclaration","scope":16928,"src":"94378:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16920,"name":"string","nodeType":"ElementaryTypeName","src":"94378:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16923,"mutability":"mutable","name":"key","nameLocation":"94416:3:15","nodeType":"VariableDeclaration","scope":16928,"src":"94400:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16922,"name":"string","nodeType":"ElementaryTypeName","src":"94400:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94377:43:15"},"returnParameters":{"id":16927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16928,"src":"94444:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16925,"name":"bytes","nodeType":"ElementaryTypeName","src":"94444:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94443:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16938,"nodeType":"FunctionDefinition","src":"94539:101:15","nodes":[],"documentation":{"id":16929,"nodeType":"StructuredDocumentation","src":"94464:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"94548:16:15","parameters":{"id":16934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16931,"mutability":"mutable","name":"toml","nameLocation":"94581:4:15","nodeType":"VariableDeclaration","scope":16938,"src":"94565:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16930,"name":"string","nodeType":"ElementaryTypeName","src":"94565:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16933,"mutability":"mutable","name":"key","nameLocation":"94603:3:15","nodeType":"VariableDeclaration","scope":16938,"src":"94587:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16932,"name":"string","nodeType":"ElementaryTypeName","src":"94587:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94564:43:15"},"returnParameters":{"id":16937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16938,"src":"94631:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94631:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"94630:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16949,"nodeType":"FunctionDefinition","src":"94723:139:15","nodes":[],"documentation":{"id":16939,"nodeType":"StructuredDocumentation","src":"94646:72:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"94732:21:15","parameters":{"id":16944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16941,"mutability":"mutable","name":"toml","nameLocation":"94770:4:15","nodeType":"VariableDeclaration","scope":16949,"src":"94754:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16940,"name":"string","nodeType":"ElementaryTypeName","src":"94754:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16943,"mutability":"mutable","name":"key","nameLocation":"94792:3:15","nodeType":"VariableDeclaration","scope":16949,"src":"94776:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16942,"name":"string","nodeType":"ElementaryTypeName","src":"94776:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94753:43:15"},"returnParameters":{"id":16948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16949,"src":"94844:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"94844:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16946,"nodeType":"ArrayTypeName","src":"94844:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"94843:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16960,"nodeType":"FunctionDefinition","src":"94943:111:15","nodes":[],"documentation":{"id":16950,"nodeType":"StructuredDocumentation","src":"94868:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"94952:19:15","parameters":{"id":16955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16952,"mutability":"mutable","name":"toml","nameLocation":"94988:4:15","nodeType":"VariableDeclaration","scope":16960,"src":"94972:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16951,"name":"string","nodeType":"ElementaryTypeName","src":"94972:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16954,"mutability":"mutable","name":"key","nameLocation":"95010:3:15","nodeType":"VariableDeclaration","scope":16960,"src":"94994:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16953,"name":"string","nodeType":"ElementaryTypeName","src":"94994:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"94971:43:15"},"returnParameters":{"id":16959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16960,"src":"95038:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":16956,"name":"bytes","nodeType":"ElementaryTypeName","src":"95038:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":16957,"nodeType":"ArrayTypeName","src":"95038:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"95037:16:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16970,"nodeType":"FunctionDefinition","src":"95134:96:15","nodes":[],"documentation":{"id":16961,"nodeType":"StructuredDocumentation","src":"95060:69:15","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"95143:12:15","parameters":{"id":16966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16963,"mutability":"mutable","name":"toml","nameLocation":"95172:4:15","nodeType":"VariableDeclaration","scope":16970,"src":"95156:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16962,"name":"string","nodeType":"ElementaryTypeName","src":"95156:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16965,"mutability":"mutable","name":"key","nameLocation":"95194:3:15","nodeType":"VariableDeclaration","scope":16970,"src":"95178:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16964,"name":"string","nodeType":"ElementaryTypeName","src":"95178:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95155:43:15"},"returnParameters":{"id":16969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16970,"src":"95222:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":16967,"name":"int256","nodeType":"ElementaryTypeName","src":"95222:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"95221:8:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16981,"nodeType":"FunctionDefinition","src":"95312:110:15","nodes":[],"documentation":{"id":16971,"nodeType":"StructuredDocumentation","src":"95236:71:15","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"95321:17:15","parameters":{"id":16976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16973,"mutability":"mutable","name":"toml","nameLocation":"95355:4:15","nodeType":"VariableDeclaration","scope":16981,"src":"95339:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16972,"name":"string","nodeType":"ElementaryTypeName","src":"95339:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16975,"mutability":"mutable","name":"key","nameLocation":"95377:3:15","nodeType":"VariableDeclaration","scope":16981,"src":"95361:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16974,"name":"string","nodeType":"ElementaryTypeName","src":"95361:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95338:43:15"},"returnParameters":{"id":16980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16981,"src":"95405:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":16977,"name":"int256","nodeType":"ElementaryTypeName","src":"95405:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":16978,"nodeType":"ArrayTypeName","src":"95405:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"95404:17:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16992,"nodeType":"FunctionDefinition","src":"95486:111:15","nodes":[],"documentation":{"id":16982,"nodeType":"StructuredDocumentation","src":"95428:53:15","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"95495:13:15","parameters":{"id":16987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16984,"mutability":"mutable","name":"toml","nameLocation":"95525:4:15","nodeType":"VariableDeclaration","scope":16992,"src":"95509:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16983,"name":"string","nodeType":"ElementaryTypeName","src":"95509:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16986,"mutability":"mutable","name":"key","nameLocation":"95547:3:15","nodeType":"VariableDeclaration","scope":16992,"src":"95531:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16985,"name":"string","nodeType":"ElementaryTypeName","src":"95531:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95508:43:15"},"returnParameters":{"id":16991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16990,"mutability":"mutable","name":"keys","nameLocation":"95591:4:15","nodeType":"VariableDeclaration","scope":16992,"src":"95575:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":16988,"name":"string","nodeType":"ElementaryTypeName","src":"95575:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":16989,"nodeType":"ArrayTypeName","src":"95575:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"95574:22:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17002,"nodeType":"FunctionDefinition","src":"95677:106:15","nodes":[],"documentation":{"id":16993,"nodeType":"StructuredDocumentation","src":"95603:69:15","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"95686:15:15","parameters":{"id":16998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16995,"mutability":"mutable","name":"toml","nameLocation":"95718:4:15","nodeType":"VariableDeclaration","scope":17002,"src":"95702:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16994,"name":"string","nodeType":"ElementaryTypeName","src":"95702:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16997,"mutability":"mutable","name":"key","nameLocation":"95740:3:15","nodeType":"VariableDeclaration","scope":17002,"src":"95724:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16996,"name":"string","nodeType":"ElementaryTypeName","src":"95724:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95701:43:15"},"returnParameters":{"id":17001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17002,"src":"95768:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16999,"name":"string","nodeType":"ElementaryTypeName","src":"95768:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95767:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17013,"nodeType":"FunctionDefinition","src":"95865:113:15","nodes":[],"documentation":{"id":17003,"nodeType":"StructuredDocumentation","src":"95789:71:15","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"95874:20:15","parameters":{"id":17008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17005,"mutability":"mutable","name":"toml","nameLocation":"95911:4:15","nodeType":"VariableDeclaration","scope":17013,"src":"95895:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17004,"name":"string","nodeType":"ElementaryTypeName","src":"95895:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17007,"mutability":"mutable","name":"key","nameLocation":"95933:3:15","nodeType":"VariableDeclaration","scope":17013,"src":"95917:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17006,"name":"string","nodeType":"ElementaryTypeName","src":"95917:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"95894:43:15"},"returnParameters":{"id":17012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17013,"src":"95961:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":17009,"name":"string","nodeType":"ElementaryTypeName","src":"95961:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":17010,"nodeType":"ArrayTypeName","src":"95961:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"95960:17:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17025,"nodeType":"FunctionDefinition","src":"96095:165:15","nodes":[],"documentation":{"id":17014,"nodeType":"StructuredDocumentation","src":"95984:106:15","text":"Parses a string of TOML data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"49be3743","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlTypeArray","nameLocation":"96104:18:15","parameters":{"id":17021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17016,"mutability":"mutable","name":"toml","nameLocation":"96139:4:15","nodeType":"VariableDeclaration","scope":17025,"src":"96123:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17015,"name":"string","nodeType":"ElementaryTypeName","src":"96123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17018,"mutability":"mutable","name":"key","nameLocation":"96161:3:15","nodeType":"VariableDeclaration","scope":17025,"src":"96145:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17017,"name":"string","nodeType":"ElementaryTypeName","src":"96145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17020,"mutability":"mutable","name":"typeDescription","nameLocation":"96182:15:15","nodeType":"VariableDeclaration","scope":17025,"src":"96166:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17019,"name":"string","nodeType":"ElementaryTypeName","src":"96166:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96122:76:15"},"returnParameters":{"id":17024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17025,"src":"96246:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17022,"name":"bytes","nodeType":"ElementaryTypeName","src":"96246:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96245:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17035,"nodeType":"FunctionDefinition","src":"96362:139:15","nodes":[],"documentation":{"id":17026,"nodeType":"StructuredDocumentation","src":"96266:91:15","text":"Parses a string of TOML data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"47fa5e11","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"96371:13:15","parameters":{"id":17031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17028,"mutability":"mutable","name":"toml","nameLocation":"96401:4:15","nodeType":"VariableDeclaration","scope":17035,"src":"96385:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17027,"name":"string","nodeType":"ElementaryTypeName","src":"96385:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17030,"mutability":"mutable","name":"typeDescription","nameLocation":"96423:15:15","nodeType":"VariableDeclaration","scope":17035,"src":"96407:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17029,"name":"string","nodeType":"ElementaryTypeName","src":"96407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96384:55:15"},"returnParameters":{"id":17034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17035,"src":"96487:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17032,"name":"bytes","nodeType":"ElementaryTypeName","src":"96487:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96486:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17047,"nodeType":"FunctionDefinition","src":"96612:160:15","nodes":[],"documentation":{"id":17036,"nodeType":"StructuredDocumentation","src":"96507:100:15","text":"Parses a string of TOML data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"f9fa5cdb","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlType","nameLocation":"96621:13:15","parameters":{"id":17043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17038,"mutability":"mutable","name":"toml","nameLocation":"96651:4:15","nodeType":"VariableDeclaration","scope":17047,"src":"96635:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17037,"name":"string","nodeType":"ElementaryTypeName","src":"96635:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17040,"mutability":"mutable","name":"key","nameLocation":"96673:3:15","nodeType":"VariableDeclaration","scope":17047,"src":"96657:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17039,"name":"string","nodeType":"ElementaryTypeName","src":"96657:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17042,"mutability":"mutable","name":"typeDescription","nameLocation":"96694:15:15","nodeType":"VariableDeclaration","scope":17047,"src":"96678:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17041,"name":"string","nodeType":"ElementaryTypeName","src":"96678:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96634:76:15"},"returnParameters":{"id":17046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17047,"src":"96758:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17044,"name":"bytes","nodeType":"ElementaryTypeName","src":"96758:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"96757:14:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17057,"nodeType":"FunctionDefinition","src":"96853:98:15","nodes":[],"documentation":{"id":17048,"nodeType":"StructuredDocumentation","src":"96778:70:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"96862:13:15","parameters":{"id":17053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17050,"mutability":"mutable","name":"toml","nameLocation":"96892:4:15","nodeType":"VariableDeclaration","scope":17057,"src":"96876:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17049,"name":"string","nodeType":"ElementaryTypeName","src":"96876:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17052,"mutability":"mutable","name":"key","nameLocation":"96914:3:15","nodeType":"VariableDeclaration","scope":17057,"src":"96898:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17051,"name":"string","nodeType":"ElementaryTypeName","src":"96898:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"96875:43:15"},"returnParameters":{"id":17056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17057,"src":"96942:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17054,"name":"uint256","nodeType":"ElementaryTypeName","src":"96942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"96941:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17068,"nodeType":"FunctionDefinition","src":"97034:112:15","nodes":[],"documentation":{"id":17058,"nodeType":"StructuredDocumentation","src":"96957:72:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"97043:18:15","parameters":{"id":17063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17060,"mutability":"mutable","name":"toml","nameLocation":"97078:4:15","nodeType":"VariableDeclaration","scope":17068,"src":"97062:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17059,"name":"string","nodeType":"ElementaryTypeName","src":"97062:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17062,"mutability":"mutable","name":"key","nameLocation":"97100:3:15","nodeType":"VariableDeclaration","scope":17068,"src":"97084:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17061,"name":"string","nodeType":"ElementaryTypeName","src":"97084:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97061:43:15"},"returnParameters":{"id":17067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17068,"src":"97128:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17064,"name":"uint256","nodeType":"ElementaryTypeName","src":"97128:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17065,"nodeType":"ArrayTypeName","src":"97128:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"97127:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17076,"nodeType":"FunctionDefinition","src":"97186:93:15","nodes":[],"documentation":{"id":17069,"nodeType":"StructuredDocumentation","src":"97152:29:15","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"97195:9:15","parameters":{"id":17072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17071,"mutability":"mutable","name":"toml","nameLocation":"97221:4:15","nodeType":"VariableDeclaration","scope":17076,"src":"97205:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17070,"name":"string","nodeType":"ElementaryTypeName","src":"97205:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97204:22:15"},"returnParameters":{"id":17075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17074,"mutability":"mutable","name":"abiEncodedData","nameLocation":"97263:14:15","nodeType":"VariableDeclaration","scope":17076,"src":"97250:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17073,"name":"bytes","nodeType":"ElementaryTypeName","src":"97250:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97249:29:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17086,"nodeType":"FunctionDefinition","src":"97328:114:15","nodes":[],"documentation":{"id":17077,"nodeType":"StructuredDocumentation","src":"97285:38:15","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"97337:9:15","parameters":{"id":17082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17079,"mutability":"mutable","name":"toml","nameLocation":"97363:4:15","nodeType":"VariableDeclaration","scope":17086,"src":"97347:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17078,"name":"string","nodeType":"ElementaryTypeName","src":"97347:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17081,"mutability":"mutable","name":"key","nameLocation":"97385:3:15","nodeType":"VariableDeclaration","scope":17086,"src":"97369:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17080,"name":"string","nodeType":"ElementaryTypeName","src":"97369:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97346:43:15"},"returnParameters":{"id":17085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17084,"mutability":"mutable","name":"abiEncodedData","nameLocation":"97426:14:15","nodeType":"VariableDeclaration","scope":17086,"src":"97413:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17083,"name":"bytes","nodeType":"ElementaryTypeName","src":"97413:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"97412:29:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17094,"nodeType":"FunctionDefinition","src":"97535:72:15","nodes":[],"documentation":{"id":17087,"nodeType":"StructuredDocumentation","src":"97448:82:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"97544:9:15","parameters":{"id":17092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17089,"mutability":"mutable","name":"json","nameLocation":"97570:4:15","nodeType":"VariableDeclaration","scope":17094,"src":"97554:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17088,"name":"string","nodeType":"ElementaryTypeName","src":"97554:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17091,"mutability":"mutable","name":"path","nameLocation":"97592:4:15","nodeType":"VariableDeclaration","scope":17094,"src":"97576:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17090,"name":"string","nodeType":"ElementaryTypeName","src":"97576:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97553:44:15"},"returnParameters":{"id":17093,"nodeType":"ParameterList","parameters":[],"src":"97606:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17104,"nodeType":"FunctionDefinition","src":"97953:98:15","nodes":[],"documentation":{"id":17095,"nodeType":"StructuredDocumentation","src":"97613:335:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\n This cheatcode will create new keys if they didn't previously exist."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"97962:9:15","parameters":{"id":17102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17097,"mutability":"mutable","name":"json","nameLocation":"97988:4:15","nodeType":"VariableDeclaration","scope":17104,"src":"97972:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17096,"name":"string","nodeType":"ElementaryTypeName","src":"97972:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17099,"mutability":"mutable","name":"path","nameLocation":"98010:4:15","nodeType":"VariableDeclaration","scope":17104,"src":"97994:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17098,"name":"string","nodeType":"ElementaryTypeName","src":"97994:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17101,"mutability":"mutable","name":"valueKey","nameLocation":"98032:8:15","nodeType":"VariableDeclaration","scope":17104,"src":"98016:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17100,"name":"string","nodeType":"ElementaryTypeName","src":"98016:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"97971:70:15"},"returnParameters":{"id":17103,"nodeType":"ParameterList","parameters":[],"src":"98050:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17116,"nodeType":"FunctionDefinition","src":"98185:90:15","nodes":[],"documentation":{"id":17105,"nodeType":"StructuredDocumentation","src":"98093:87:15","text":"Returns an uint256 value bounded in given range and different from the current one."},"functionSelector":"5a6c1eed","implemented":false,"kind":"function","modifiers":[],"name":"bound","nameLocation":"98194:5:15","parameters":{"id":17112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17107,"mutability":"mutable","name":"current","nameLocation":"98208:7:15","nodeType":"VariableDeclaration","scope":17116,"src":"98200:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17106,"name":"uint256","nodeType":"ElementaryTypeName","src":"98200:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17109,"mutability":"mutable","name":"min","nameLocation":"98225:3:15","nodeType":"VariableDeclaration","scope":17116,"src":"98217:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17108,"name":"uint256","nodeType":"ElementaryTypeName","src":"98217:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17111,"mutability":"mutable","name":"max","nameLocation":"98238:3:15","nodeType":"VariableDeclaration","scope":17116,"src":"98230:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17110,"name":"uint256","nodeType":"ElementaryTypeName","src":"98230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98199:43:15"},"returnParameters":{"id":17115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17116,"src":"98266:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17113,"name":"uint256","nodeType":"ElementaryTypeName","src":"98266:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"98265:9:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17128,"nodeType":"FunctionDefinition","src":"98372:86:15","nodes":[],"documentation":{"id":17117,"nodeType":"StructuredDocumentation","src":"98281:86:15","text":"Returns an int256 value bounded in given range and different from the current one."},"functionSelector":"8f48fc07","implemented":false,"kind":"function","modifiers":[],"name":"bound","nameLocation":"98381:5:15","parameters":{"id":17124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17119,"mutability":"mutable","name":"current","nameLocation":"98394:7:15","nodeType":"VariableDeclaration","scope":17128,"src":"98387:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17118,"name":"int256","nodeType":"ElementaryTypeName","src":"98387:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17121,"mutability":"mutable","name":"min","nameLocation":"98410:3:15","nodeType":"VariableDeclaration","scope":17128,"src":"98403:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17120,"name":"int256","nodeType":"ElementaryTypeName","src":"98403:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":17123,"mutability":"mutable","name":"max","nameLocation":"98422:3:15","nodeType":"VariableDeclaration","scope":17128,"src":"98415:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17122,"name":"int256","nodeType":"ElementaryTypeName","src":"98415:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"98386:40:15"},"returnParameters":{"id":17127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17128,"src":"98450:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17125,"name":"int256","nodeType":"ElementaryTypeName","src":"98450:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"98449:8:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17140,"nodeType":"FunctionDefinition","src":"98561:141:15","nodes":[],"documentation":{"id":17129,"nodeType":"StructuredDocumentation","src":"98464:92:15","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"98570:21:15","parameters":{"id":17136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17131,"mutability":"mutable","name":"salt","nameLocation":"98600:4:15","nodeType":"VariableDeclaration","scope":17140,"src":"98592:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98592:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17133,"mutability":"mutable","name":"initCodeHash","nameLocation":"98614:12:15","nodeType":"VariableDeclaration","scope":17140,"src":"98606:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98606:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17135,"mutability":"mutable","name":"deployer","nameLocation":"98636:8:15","nodeType":"VariableDeclaration","scope":17140,"src":"98628:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17134,"name":"address","nodeType":"ElementaryTypeName","src":"98628:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98591:54:15"},"returnParameters":{"id":17139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17140,"src":"98693:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17137,"name":"address","nodeType":"ElementaryTypeName","src":"98693:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98692:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17150,"nodeType":"FunctionDefinition","src":"98807:99:15","nodes":[],"documentation":{"id":17141,"nodeType":"StructuredDocumentation","src":"98708:94:15","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"98816:21:15","parameters":{"id":17146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17143,"mutability":"mutable","name":"salt","nameLocation":"98846:4:15","nodeType":"VariableDeclaration","scope":17150,"src":"98838:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98838:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17145,"mutability":"mutable","name":"initCodeHash","nameLocation":"98860:12:15","nodeType":"VariableDeclaration","scope":17150,"src":"98852:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"98852:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"98837:36:15"},"returnParameters":{"id":17149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17150,"src":"98897:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17147,"name":"address","nodeType":"ElementaryTypeName","src":"98897:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"98896:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17160,"nodeType":"FunctionDefinition","src":"99011:95:15","nodes":[],"documentation":{"id":17151,"nodeType":"StructuredDocumentation","src":"98912:94:15","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"99020:20:15","parameters":{"id":17156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17153,"mutability":"mutable","name":"deployer","nameLocation":"99049:8:15","nodeType":"VariableDeclaration","scope":17160,"src":"99041:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17152,"name":"address","nodeType":"ElementaryTypeName","src":"99041:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17155,"mutability":"mutable","name":"nonce","nameLocation":"99067:5:15","nodeType":"VariableDeclaration","scope":17160,"src":"99059:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17154,"name":"uint256","nodeType":"ElementaryTypeName","src":"99059:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"99040:33:15"},"returnParameters":{"id":17159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17160,"src":"99097:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17157,"name":"address","nodeType":"ElementaryTypeName","src":"99097:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99096:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17168,"nodeType":"FunctionDefinition","src":"99199:56:15","nodes":[],"documentation":{"id":17161,"nodeType":"StructuredDocumentation","src":"99112:82:15","text":"Utility cheatcode to copy storage of `from` contract to another `to` contract."},"functionSelector":"203dac0d","implemented":false,"kind":"function","modifiers":[],"name":"copyStorage","nameLocation":"99208:11:15","parameters":{"id":17166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17163,"mutability":"mutable","name":"from","nameLocation":"99228:4:15","nodeType":"VariableDeclaration","scope":17168,"src":"99220:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17162,"name":"address","nodeType":"ElementaryTypeName","src":"99220:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17165,"mutability":"mutable","name":"to","nameLocation":"99242:2:15","nodeType":"VariableDeclaration","scope":17168,"src":"99234:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17164,"name":"address","nodeType":"ElementaryTypeName","src":"99234:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"99219:26:15"},"returnParameters":{"id":17167,"nodeType":"ParameterList","parameters":[],"src":"99254:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17178,"nodeType":"FunctionDefinition","src":"99850:160:15","nodes":[],"documentation":{"id":17169,"nodeType":"StructuredDocumentation","src":"99261:584:15","text":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data.\n Supports 2 different inputs:\n 1. Name of the type (i.e. \"PermitSingle\"):\n * requires previous binding generation with `forge bind-json`.\n * bindings will be retrieved from the path configured in `foundry.toml`.\n 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\").\n * Note: the cheatcode will use the canonical type even if the input is malformated\n with the wrong order of elements or with extra whitespaces."},"functionSelector":"aedeaebc","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashStruct","nameLocation":"99859:16:15","parameters":{"id":17174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17171,"mutability":"mutable","name":"typeNameOrDefinition","nameLocation":"99892:20:15","nodeType":"VariableDeclaration","scope":17178,"src":"99876:36:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17170,"name":"string","nodeType":"ElementaryTypeName","src":"99876:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17173,"mutability":"mutable","name":"abiEncodedData","nameLocation":"99929:14:15","nodeType":"VariableDeclaration","scope":17178,"src":"99914:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17172,"name":"bytes","nodeType":"ElementaryTypeName","src":"99914:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"99875:69:15"},"returnParameters":{"id":17177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17176,"mutability":"mutable","name":"typeHash","nameLocation":"100000:8:15","nodeType":"VariableDeclaration","scope":17178,"src":"99992:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"99992:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"99991:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17190,"nodeType":"FunctionDefinition","src":"100430:178:15","nodes":[],"documentation":{"id":17179,"nodeType":"StructuredDocumentation","src":"100016:409:15","text":"Generates the struct hash of the canonical EIP-712 type representation and its abi-encoded data.\n Requires previous binding generation with `forge bind-json`.\n Params:\n * `bindingsPath`: path where the output of `forge bind-json` is stored.\n * `typeName`: Name of the type (i.e. \"PermitSingle\").\n * `abiEncodedData`: ABI-encoded data for the struct that is being hashed."},"functionSelector":"6d06c57c","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashStruct","nameLocation":"100439:16:15","parameters":{"id":17186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17181,"mutability":"mutable","name":"bindingsPath","nameLocation":"100472:12:15","nodeType":"VariableDeclaration","scope":17190,"src":"100456:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17180,"name":"string","nodeType":"ElementaryTypeName","src":"100456:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17183,"mutability":"mutable","name":"typeName","nameLocation":"100502:8:15","nodeType":"VariableDeclaration","scope":17190,"src":"100486:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17182,"name":"string","nodeType":"ElementaryTypeName","src":"100486:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17185,"mutability":"mutable","name":"abiEncodedData","nameLocation":"100527:14:15","nodeType":"VariableDeclaration","scope":17190,"src":"100512:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17184,"name":"bytes","nodeType":"ElementaryTypeName","src":"100512:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"100455:87:15"},"returnParameters":{"id":17189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17188,"mutability":"mutable","name":"typeHash","nameLocation":"100598:8:15","nodeType":"VariableDeclaration","scope":17190,"src":"100590:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"100590:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"100589:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17198,"nodeType":"FunctionDefinition","src":"101173:103:15","nodes":[],"documentation":{"id":17191,"nodeType":"StructuredDocumentation","src":"100614:554:15","text":"Generates the hash of the canonical EIP-712 type representation.\n Supports 2 different inputs:\n 1. Name of the type (i.e. \"Transaction\"):\n * requires previous binding generation with `forge bind-json`.\n * bindings will be retrieved from the path configured in `foundry.toml`.\n 2. String representation of the type (i.e. \"Foo(Bar bar) Bar(uint256 baz)\").\n * Note: the cheatcode will output the canonical type even if the input is malformated\n with the wrong order of elements or with extra whitespaces."},"functionSelector":"6792e9e2","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashType","nameLocation":"101182:14:15","parameters":{"id":17194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17193,"mutability":"mutable","name":"typeNameOrDefinition","nameLocation":"101213:20:15","nodeType":"VariableDeclaration","scope":17198,"src":"101197:36:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17192,"name":"string","nodeType":"ElementaryTypeName","src":"101197:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101196:38:15"},"returnParameters":{"id":17197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17196,"mutability":"mutable","name":"typeHash","nameLocation":"101266:8:15","nodeType":"VariableDeclaration","scope":17198,"src":"101258:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101258:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"101257:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17208,"nodeType":"FunctionDefinition","src":"101581:145:15","nodes":[],"documentation":{"id":17199,"nodeType":"StructuredDocumentation","src":"101282:294:15","text":"Generates the hash of the canonical EIP-712 type representation.\n Requires previous binding generation with `forge bind-json`.\n Params:\n * `bindingsPath`: path where the output of `forge bind-json` is stored.\n * `typeName`: Name of the type (i.e. \"Transaction\")."},"functionSelector":"18fb6406","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashType","nameLocation":"101590:14:15","parameters":{"id":17204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17201,"mutability":"mutable","name":"bindingsPath","nameLocation":"101621:12:15","nodeType":"VariableDeclaration","scope":17208,"src":"101605:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17200,"name":"string","nodeType":"ElementaryTypeName","src":"101605:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17203,"mutability":"mutable","name":"typeName","nameLocation":"101651:8:15","nodeType":"VariableDeclaration","scope":17208,"src":"101635:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17202,"name":"string","nodeType":"ElementaryTypeName","src":"101635:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101604:56:15"},"returnParameters":{"id":17207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17206,"mutability":"mutable","name":"typeHash","nameLocation":"101716:8:15","nodeType":"VariableDeclaration","scope":17208,"src":"101708:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101708:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"101707:18:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17216,"nodeType":"FunctionDefinition","src":"101834:94:15","nodes":[],"documentation":{"id":17209,"nodeType":"StructuredDocumentation","src":"101732:97:15","text":"Generates a ready-to-sign digest of human-readable typed data following the EIP-712 standard."},"functionSelector":"ea25e615","implemented":false,"kind":"function","modifiers":[],"name":"eip712HashTypedData","nameLocation":"101843:19:15","parameters":{"id":17212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17211,"mutability":"mutable","name":"jsonData","nameLocation":"101879:8:15","nodeType":"VariableDeclaration","scope":17216,"src":"101863:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17210,"name":"string","nodeType":"ElementaryTypeName","src":"101863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"101862:26:15"},"returnParameters":{"id":17215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17214,"mutability":"mutable","name":"digest","nameLocation":"101920:6:15","nodeType":"VariableDeclaration","scope":17216,"src":"101912:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"101912:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"101911:16:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17224,"nodeType":"FunctionDefinition","src":"101984:75:15","nodes":[],"documentation":{"id":17217,"nodeType":"StructuredDocumentation","src":"101934:45:15","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"101993:11:15","parameters":{"id":17220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17219,"mutability":"mutable","name":"name","nameLocation":"102021:4:15","nodeType":"VariableDeclaration","scope":17224,"src":"102005:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17218,"name":"string","nodeType":"ElementaryTypeName","src":"102005:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102004:22:15"},"returnParameters":{"id":17223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17224,"src":"102050:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"102050:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"102049:9:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17232,"nodeType":"FunctionDefinition","src":"102115:86:15","nodes":[],"documentation":{"id":17225,"nodeType":"StructuredDocumentation","src":"102065:45:15","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"102124:8:15","parameters":{"id":17228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17227,"mutability":"mutable","name":"account","nameLocation":"102141:7:15","nodeType":"VariableDeclaration","scope":17232,"src":"102133:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17226,"name":"address","nodeType":"ElementaryTypeName","src":"102133:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102132:17:15"},"returnParameters":{"id":17231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17230,"mutability":"mutable","name":"currentLabel","nameLocation":"102187:12:15","nodeType":"VariableDeclaration","scope":17232,"src":"102173:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17229,"name":"string","nodeType":"ElementaryTypeName","src":"102173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102172:28:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17240,"nodeType":"FunctionDefinition","src":"102249:67:15","nodes":[],"documentation":{"id":17233,"nodeType":"StructuredDocumentation","src":"102207:37:15","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"102258:5:15","parameters":{"id":17238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17235,"mutability":"mutable","name":"account","nameLocation":"102272:7:15","nodeType":"VariableDeclaration","scope":17240,"src":"102264:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17234,"name":"address","nodeType":"ElementaryTypeName","src":"102264:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17237,"mutability":"mutable","name":"newLabel","nameLocation":"102297:8:15","nodeType":"VariableDeclaration","scope":17240,"src":"102281:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17236,"name":"string","nodeType":"ElementaryTypeName","src":"102281:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"102263:43:15"},"returnParameters":{"id":17239,"nodeType":"ParameterList","parameters":[],"src":"102315:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17244,"nodeType":"FunctionDefinition","src":"102471:38:15","nodes":[],"documentation":{"id":17241,"nodeType":"StructuredDocumentation","src":"102322:144:15","text":"Pauses collection of call traces. Useful in cases when you want to skip tracing of\n complex calls which are not useful for debugging."},"functionSelector":"c94d1f90","implemented":false,"kind":"function","modifiers":[],"name":"pauseTracing","nameLocation":"102480:12:15","parameters":{"id":17242,"nodeType":"ParameterList","parameters":[],"src":"102492:2:15"},"returnParameters":{"id":17243,"nodeType":"ParameterList","parameters":[],"src":"102508:0:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17250,"nodeType":"FunctionDefinition","src":"102551:57:15","nodes":[],"documentation":{"id":17245,"nodeType":"StructuredDocumentation","src":"102515:31:15","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"102560:13:15","parameters":{"id":17246,"nodeType":"ParameterList","parameters":[],"src":"102573:2:15"},"returnParameters":{"id":17249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17250,"src":"102599:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17247,"name":"address","nodeType":"ElementaryTypeName","src":"102599:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102598:9:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17256,"nodeType":"FunctionDefinition","src":"102647:51:15","nodes":[],"documentation":{"id":17251,"nodeType":"StructuredDocumentation","src":"102614:28:15","text":"Returns a random `bool`."},"functionSelector":"cdc126bd","implemented":false,"kind":"function","modifiers":[],"name":"randomBool","nameLocation":"102656:10:15","parameters":{"id":17252,"nodeType":"ParameterList","parameters":[],"src":"102666:2:15"},"returnParameters":{"id":17255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17256,"src":"102692:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17253,"name":"bool","nodeType":"ElementaryTypeName","src":"102692:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"102691:6:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17264,"nodeType":"FunctionDefinition","src":"102767:71:15","nodes":[],"documentation":{"id":17257,"nodeType":"StructuredDocumentation","src":"102704:58:15","text":"Returns a random byte array value of the given length."},"functionSelector":"6c5d32a9","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes","nameLocation":"102776:11:15","parameters":{"id":17260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17259,"mutability":"mutable","name":"len","nameLocation":"102796:3:15","nodeType":"VariableDeclaration","scope":17264,"src":"102788:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17258,"name":"uint256","nodeType":"ElementaryTypeName","src":"102788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"102787:13:15"},"returnParameters":{"id":17263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17264,"src":"102824:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":17261,"name":"bytes","nodeType":"ElementaryTypeName","src":"102824:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"102823:14:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17270,"nodeType":"FunctionDefinition","src":"102904:55:15","nodes":[],"documentation":{"id":17265,"nodeType":"StructuredDocumentation","src":"102844:55:15","text":"Returns a random fixed-size byte array of length 4."},"functionSelector":"9b7cd579","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes4","nameLocation":"102913:12:15","parameters":{"id":17266,"nodeType":"ParameterList","parameters":[],"src":"102925:2:15"},"returnParameters":{"id":17269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17270,"src":"102951:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17267,"name":"bytes4","nodeType":"ElementaryTypeName","src":"102951:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"102950:8:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17276,"nodeType":"FunctionDefinition","src":"103025:55:15","nodes":[],"documentation":{"id":17271,"nodeType":"StructuredDocumentation","src":"102965:55:15","text":"Returns a random fixed-size byte array of length 8."},"functionSelector":"0497b0a5","implemented":false,"kind":"function","modifiers":[],"name":"randomBytes8","nameLocation":"103034:12:15","parameters":{"id":17272,"nodeType":"ParameterList","parameters":[],"src":"103046:2:15"},"returnParameters":{"id":17275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17276,"src":"103072:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":17273,"name":"bytes8","nodeType":"ElementaryTypeName","src":"103072:6:15","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"visibility":"internal"}],"src":"103071:8:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17282,"nodeType":"FunctionDefinition","src":"103127:52:15","nodes":[],"documentation":{"id":17277,"nodeType":"StructuredDocumentation","src":"103086:36:15","text":"Returns a random `int256` value."},"functionSelector":"111f1202","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"103136:9:15","parameters":{"id":17278,"nodeType":"ParameterList","parameters":[],"src":"103145:2:15"},"returnParameters":{"id":17281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17282,"src":"103171:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17279,"name":"int256","nodeType":"ElementaryTypeName","src":"103171:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"103170:8:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17290,"nodeType":"FunctionDefinition","src":"103240:64:15","nodes":[],"documentation":{"id":17283,"nodeType":"StructuredDocumentation","src":"103185:50:15","text":"Returns a random `int256` value of given bits."},"functionSelector":"12845966","implemented":false,"kind":"function","modifiers":[],"name":"randomInt","nameLocation":"103249:9:15","parameters":{"id":17286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17285,"mutability":"mutable","name":"bits","nameLocation":"103267:4:15","nodeType":"VariableDeclaration","scope":17290,"src":"103259:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17284,"name":"uint256","nodeType":"ElementaryTypeName","src":"103259:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103258:14:15"},"returnParameters":{"id":17289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17290,"src":"103296:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":17287,"name":"int256","nodeType":"ElementaryTypeName","src":"103296:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"103295:8:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17296,"nodeType":"FunctionDefinition","src":"103350:54:15","nodes":[],"documentation":{"id":17291,"nodeType":"StructuredDocumentation","src":"103310:35:15","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"103359:10:15","parameters":{"id":17292,"nodeType":"ParameterList","parameters":[],"src":"103369:2:15"},"returnParameters":{"id":17295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17296,"src":"103395:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17293,"name":"uint256","nodeType":"ElementaryTypeName","src":"103395:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103394:9:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17306,"nodeType":"FunctionDefinition","src":"103488:78:15","nodes":[],"documentation":{"id":17297,"nodeType":"StructuredDocumentation","src":"103410:73:15","text":"Returns random uint256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"103497:10:15","parameters":{"id":17302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17299,"mutability":"mutable","name":"min","nameLocation":"103516:3:15","nodeType":"VariableDeclaration","scope":17306,"src":"103508:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17298,"name":"uint256","nodeType":"ElementaryTypeName","src":"103508:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17301,"mutability":"mutable","name":"max","nameLocation":"103529:3:15","nodeType":"VariableDeclaration","scope":17306,"src":"103521:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17300,"name":"uint256","nodeType":"ElementaryTypeName","src":"103521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103507:26:15"},"returnParameters":{"id":17305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17306,"src":"103557:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17303,"name":"uint256","nodeType":"ElementaryTypeName","src":"103557:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103556:9:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17314,"nodeType":"FunctionDefinition","src":"103628:66:15","nodes":[],"documentation":{"id":17307,"nodeType":"StructuredDocumentation","src":"103572:51:15","text":"Returns a random `uint256` value of given bits."},"functionSelector":"cf81e69c","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"103637:10:15","parameters":{"id":17310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17309,"mutability":"mutable","name":"bits","nameLocation":"103656:4:15","nodeType":"VariableDeclaration","scope":17314,"src":"103648:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17308,"name":"uint256","nodeType":"ElementaryTypeName","src":"103648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103647:14:15"},"returnParameters":{"id":17313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17314,"src":"103685:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17311,"name":"uint256","nodeType":"ElementaryTypeName","src":"103685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"103684:9:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17318,"nodeType":"FunctionDefinition","src":"103744:39:15","nodes":[],"documentation":{"id":17315,"nodeType":"StructuredDocumentation","src":"103700:39:15","text":"Unpauses collection of call traces."},"functionSelector":"72a09ccb","implemented":false,"kind":"function","modifiers":[],"name":"resumeTracing","nameLocation":"103753:13:15","parameters":{"id":17316,"nodeType":"ParameterList","parameters":[],"src":"103766:2:15"},"returnParameters":{"id":17317,"nodeType":"ParameterList","parameters":[],"src":"103782:0:15"},"scope":17391,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17324,"nodeType":"FunctionDefinition","src":"103866:54:15","nodes":[],"documentation":{"id":17319,"nodeType":"StructuredDocumentation","src":"103789:72:15","text":"Utility cheatcode to set arbitrary storage for given target address."},"functionSelector":"e1631837","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"103875:19:15","parameters":{"id":17322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17321,"mutability":"mutable","name":"target","nameLocation":"103903:6:15","nodeType":"VariableDeclaration","scope":17324,"src":"103895:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17320,"name":"address","nodeType":"ElementaryTypeName","src":"103895:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"103894:16:15"},"returnParameters":{"id":17323,"nodeType":"ParameterList","parameters":[],"src":"103919:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17332,"nodeType":"FunctionDefinition","src":"104073:70:15","nodes":[],"documentation":{"id":17325,"nodeType":"StructuredDocumentation","src":"103926:142:15","text":"Utility cheatcode to set arbitrary storage for given target address and overwrite\n any storage slots that have been previously set."},"functionSelector":"d3ec2a0b","implemented":false,"kind":"function","modifiers":[],"name":"setArbitraryStorage","nameLocation":"104082:19:15","parameters":{"id":17330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17327,"mutability":"mutable","name":"target","nameLocation":"104110:6:15","nodeType":"VariableDeclaration","scope":17332,"src":"104102:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17326,"name":"address","nodeType":"ElementaryTypeName","src":"104102:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17329,"mutability":"mutable","name":"overwrite","nameLocation":"104123:9:15","nodeType":"VariableDeclaration","scope":17332,"src":"104118:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17328,"name":"bool","nodeType":"ElementaryTypeName","src":"104118:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"104101:32:15"},"returnParameters":{"id":17331,"nodeType":"ParameterList","parameters":[],"src":"104142:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17338,"nodeType":"FunctionDefinition","src":"104171:40:15","nodes":[],"documentation":{"id":17333,"nodeType":"StructuredDocumentation","src":"104149:17:15","text":"Set RNG seed."},"functionSelector":"c32a50f9","implemented":false,"kind":"function","modifiers":[],"name":"setSeed","nameLocation":"104180:7:15","parameters":{"id":17336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17335,"mutability":"mutable","name":"seed","nameLocation":"104196:4:15","nodeType":"VariableDeclaration","scope":17338,"src":"104188:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17334,"name":"uint256","nodeType":"ElementaryTypeName","src":"104188:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"104187:14:15"},"returnParameters":{"id":17337,"nodeType":"ParameterList","parameters":[],"src":"104210:0:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17348,"nodeType":"FunctionDefinition","src":"104253:79:15","nodes":[],"documentation":{"id":17339,"nodeType":"StructuredDocumentation","src":"104217:31:15","text":"Randomly shuffles an array."},"functionSelector":"54f1469c","implemented":false,"kind":"function","modifiers":[],"name":"shuffle","nameLocation":"104262:7:15","parameters":{"id":17343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17342,"mutability":"mutable","name":"array","nameLocation":"104289:5:15","nodeType":"VariableDeclaration","scope":17348,"src":"104270:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17340,"name":"uint256","nodeType":"ElementaryTypeName","src":"104270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17341,"nodeType":"ArrayTypeName","src":"104270:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"104269:26:15"},"returnParameters":{"id":17347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17348,"src":"104314:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17344,"name":"uint256","nodeType":"ElementaryTypeName","src":"104314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17345,"nodeType":"ArrayTypeName","src":"104314:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"104313:18:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17358,"nodeType":"FunctionDefinition","src":"104381:76:15","nodes":[],"documentation":{"id":17349,"nodeType":"StructuredDocumentation","src":"104338:38:15","text":"Sorts an array in ascending order."},"functionSelector":"9ec8b026","implemented":false,"kind":"function","modifiers":[],"name":"sort","nameLocation":"104390:4:15","parameters":{"id":17353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17352,"mutability":"mutable","name":"array","nameLocation":"104414:5:15","nodeType":"VariableDeclaration","scope":17358,"src":"104395:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17350,"name":"uint256","nodeType":"ElementaryTypeName","src":"104395:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17351,"nodeType":"ArrayTypeName","src":"104395:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"104394:26:15"},"returnParameters":{"id":17357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17358,"src":"104439:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":17354,"name":"uint256","nodeType":"ElementaryTypeName","src":"104439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":17355,"nodeType":"ArrayTypeName","src":"104439:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"104438:18:15"},"scope":17391,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17366,"nodeType":"FunctionDefinition","src":"104518:80:15","nodes":[],"documentation":{"id":17359,"nodeType":"StructuredDocumentation","src":"104463:50:15","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"104527:11:15","parameters":{"id":17362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17361,"mutability":"mutable","name":"data","nameLocation":"104554:4:15","nodeType":"VariableDeclaration","scope":17366,"src":"104539:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17360,"name":"bytes","nodeType":"ElementaryTypeName","src":"104539:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"104538:21:15"},"returnParameters":{"id":17365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17366,"src":"104583:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17363,"name":"string","nodeType":"ElementaryTypeName","src":"104583:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104582:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17374,"nodeType":"FunctionDefinition","src":"104660:81:15","nodes":[],"documentation":{"id":17367,"nodeType":"StructuredDocumentation","src":"104604:51:15","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"104669:11:15","parameters":{"id":17370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17369,"mutability":"mutable","name":"data","nameLocation":"104697:4:15","nodeType":"VariableDeclaration","scope":17374,"src":"104681:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17368,"name":"string","nodeType":"ElementaryTypeName","src":"104681:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104680:22:15"},"returnParameters":{"id":17373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17374,"src":"104726:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17371,"name":"string","nodeType":"ElementaryTypeName","src":"104726:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104725:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17382,"nodeType":"FunctionDefinition","src":"104799:77:15","nodes":[],"documentation":{"id":17375,"nodeType":"StructuredDocumentation","src":"104747:47:15","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"104808:8:15","parameters":{"id":17378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17377,"mutability":"mutable","name":"data","nameLocation":"104832:4:15","nodeType":"VariableDeclaration","scope":17382,"src":"104817:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17376,"name":"bytes","nodeType":"ElementaryTypeName","src":"104817:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"104816:21:15"},"returnParameters":{"id":17381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17382,"src":"104861:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17379,"name":"string","nodeType":"ElementaryTypeName","src":"104861:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104860:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":17390,"nodeType":"FunctionDefinition","src":"104935:78:15","nodes":[],"documentation":{"id":17383,"nodeType":"StructuredDocumentation","src":"104882:48:15","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"104944:8:15","parameters":{"id":17386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17385,"mutability":"mutable","name":"data","nameLocation":"104969:4:15","nodeType":"VariableDeclaration","scope":17390,"src":"104953:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17384,"name":"string","nodeType":"ElementaryTypeName","src":"104953:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104952:22:15"},"returnParameters":{"id":17389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":17390,"src":"104998:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":17387,"name":"string","nodeType":"ElementaryTypeName","src":"104998:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"104997:15:15"},"scope":17391,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":13261,"nodeType":"StructuredDocumentation","src":"184:225:15","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[17391],"name":"VmSafe","nameLocation":"419:6:15","scope":18463,"usedErrors":[],"usedEvents":[]},{"id":18462,"nodeType":"ContractDefinition","src":"105188:26592:15","nodes":[{"id":17402,"nodeType":"FunctionDefinition","src":"105337:63:15","nodes":[],"documentation":{"id":17395,"nodeType":"StructuredDocumentation","src":"105247:85:15","text":"Utility cheatcode to set an EIP-2930 access list for all subsequent transactions."},"functionSelector":"743e4cb7","implemented":false,"kind":"function","modifiers":[],"name":"accessList","nameLocation":"105346:10:15","parameters":{"id":17400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17399,"mutability":"mutable","name":"access","nameLocation":"105383:6:15","nodeType":"VariableDeclaration","scope":17402,"src":"105357:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$13512_calldata_ptr_$dyn_calldata_ptr","typeString":"struct VmSafe.AccessListItem[]"},"typeName":{"baseType":{"id":17397,"nodeType":"UserDefinedTypeName","pathNode":{"id":17396,"name":"AccessListItem","nameLocations":["105357:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":13512,"src":"105357:14:15"},"referencedDeclaration":13512,"src":"105357:14:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccessListItem_$13512_storage_ptr","typeString":"struct VmSafe.AccessListItem"}},"id":17398,"nodeType":"ArrayTypeName","src":"105357:16:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccessListItem_$13512_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccessListItem[]"}},"visibility":"internal"}],"src":"105356:34:15"},"returnParameters":{"id":17401,"nodeType":"ParameterList","parameters":[],"src":"105399:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17408,"nodeType":"FunctionDefinition","src":"105507:61:15","nodes":[],"documentation":{"id":17403,"nodeType":"StructuredDocumentation","src":"105406:96:15","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"105516:10:15","parameters":{"id":17404,"nodeType":"ParameterList","parameters":[],"src":"105526:2:15"},"returnParameters":{"id":17407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17406,"mutability":"mutable","name":"forkId","nameLocation":"105560:6:15","nodeType":"VariableDeclaration","scope":17408,"src":"105552:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17405,"name":"uint256","nodeType":"ElementaryTypeName","src":"105552:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105551:16:15"},"scope":18462,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17414,"nodeType":"FunctionDefinition","src":"105652:51:15","nodes":[],"documentation":{"id":17409,"nodeType":"StructuredDocumentation","src":"105574:73:15","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"105661:15:15","parameters":{"id":17412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17411,"mutability":"mutable","name":"account","nameLocation":"105685:7:15","nodeType":"VariableDeclaration","scope":17414,"src":"105677:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17410,"name":"address","nodeType":"ElementaryTypeName","src":"105677:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"105676:17:15"},"returnParameters":{"id":17413,"nodeType":"ParameterList","parameters":[],"src":"105702:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17420,"nodeType":"FunctionDefinition","src":"105742:54:15","nodes":[],"documentation":{"id":17415,"nodeType":"StructuredDocumentation","src":"105709:28:15","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"105751:11:15","parameters":{"id":17418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17417,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"105771:14:15","nodeType":"VariableDeclaration","scope":17420,"src":"105763:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17416,"name":"uint256","nodeType":"ElementaryTypeName","src":"105763:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"105762:24:15"},"returnParameters":{"id":17419,"nodeType":"ParameterList","parameters":[],"src":"105795:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17427,"nodeType":"FunctionDefinition","src":"105963:56:15","nodes":[],"documentation":{"id":17421,"nodeType":"StructuredDocumentation","src":"105802:156:15","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"105972:10:15","parameters":{"id":17425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17424,"mutability":"mutable","name":"hashes","nameLocation":"106002:6:15","nodeType":"VariableDeclaration","scope":17427,"src":"105983:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"105983:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17423,"nodeType":"ArrayTypeName","src":"105983:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"105982:27:15"},"returnParameters":{"id":17426,"nodeType":"ParameterList","parameters":[],"src":"106018:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17433,"nodeType":"FunctionDefinition","src":"106055:46:15","nodes":[],"documentation":{"id":17428,"nodeType":"StructuredDocumentation","src":"106025:25:15","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"106064:7:15","parameters":{"id":17431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17430,"mutability":"mutable","name":"newChainId","nameLocation":"106080:10:15","nodeType":"VariableDeclaration","scope":17433,"src":"106072:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17429,"name":"uint256","nodeType":"ElementaryTypeName","src":"106072:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106071:20:15"},"returnParameters":{"id":17432,"nodeType":"ParameterList","parameters":[],"src":"106100:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17437,"nodeType":"FunctionDefinition","src":"106140:37:15","nodes":[],"documentation":{"id":17434,"nodeType":"StructuredDocumentation","src":"106107:28:15","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"106149:16:15","parameters":{"id":17435,"nodeType":"ParameterList","parameters":[],"src":"106165:2:15"},"returnParameters":{"id":17436,"nodeType":"ParameterList","parameters":[],"src":"106176:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17445,"nodeType":"FunctionDefinition","src":"106299:63:15","nodes":[],"documentation":{"id":17438,"nodeType":"StructuredDocumentation","src":"106183:111:15","text":"Clones a source account code, state, balance and nonce to a target account and updates in-memory EVM state."},"functionSelector":"533d61c9","implemented":false,"kind":"function","modifiers":[],"name":"cloneAccount","nameLocation":"106308:12:15","parameters":{"id":17443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17440,"mutability":"mutable","name":"source","nameLocation":"106329:6:15","nodeType":"VariableDeclaration","scope":17445,"src":"106321:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17439,"name":"address","nodeType":"ElementaryTypeName","src":"106321:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17442,"mutability":"mutable","name":"target","nameLocation":"106345:6:15","nodeType":"VariableDeclaration","scope":17445,"src":"106337:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17441,"name":"address","nodeType":"ElementaryTypeName","src":"106337:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106320:32:15"},"returnParameters":{"id":17444,"nodeType":"ParameterList","parameters":[],"src":"106361:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17451,"nodeType":"FunctionDefinition","src":"106399:48:15","nodes":[],"documentation":{"id":17446,"nodeType":"StructuredDocumentation","src":"106368:26:15","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"106408:8:15","parameters":{"id":17449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17448,"mutability":"mutable","name":"newCoinbase","nameLocation":"106425:11:15","nodeType":"VariableDeclaration","scope":17451,"src":"106417:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17447,"name":"address","nodeType":"ElementaryTypeName","src":"106417:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106416:21:15"},"returnParameters":{"id":17450,"nodeType":"ParameterList","parameters":[],"src":"106446:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17457,"nodeType":"FunctionDefinition","src":"106524:39:15","nodes":[],"documentation":{"id":17452,"nodeType":"StructuredDocumentation","src":"106453:66:15","text":"Marks the slots of an account and the account address as cold."},"functionSelector":"40ff9f21","implemented":false,"kind":"function","modifiers":[],"name":"cool","nameLocation":"106533:4:15","parameters":{"id":17455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17454,"mutability":"mutable","name":"target","nameLocation":"106546:6:15","nodeType":"VariableDeclaration","scope":17457,"src":"106538:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17453,"name":"address","nodeType":"ElementaryTypeName","src":"106538:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"106537:16:15"},"returnParameters":{"id":17456,"nodeType":"ParameterList","parameters":[],"src":"106562:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17465,"nodeType":"FunctionDefinition","src":"106660:57:15","nodes":[],"documentation":{"id":17458,"nodeType":"StructuredDocumentation","src":"106569:86:15","text":"Utility cheatcode to mark specific storage slot as cold, simulating no prior read."},"functionSelector":"8c78e654","implemented":false,"kind":"function","modifiers":[],"name":"coolSlot","nameLocation":"106669:8:15","parameters":{"id":17463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17460,"mutability":"mutable","name":"target","nameLocation":"106686:6:15","nodeType":"VariableDeclaration","scope":17465,"src":"106678:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17459,"name":"address","nodeType":"ElementaryTypeName","src":"106678:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17462,"mutability":"mutable","name":"slot","nameLocation":"106702:4:15","nodeType":"VariableDeclaration","scope":17465,"src":"106694:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"106694:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"106677:30:15"},"returnParameters":{"id":17464,"nodeType":"ParameterList","parameters":[],"src":"106716:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17473,"nodeType":"FunctionDefinition","src":"106837:82:15","nodes":[],"documentation":{"id":17466,"nodeType":"StructuredDocumentation","src":"106723:109:15","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"106846:10:15","parameters":{"id":17469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17468,"mutability":"mutable","name":"urlOrAlias","nameLocation":"106873:10:15","nodeType":"VariableDeclaration","scope":17473,"src":"106857:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17467,"name":"string","nodeType":"ElementaryTypeName","src":"106857:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"106856:28:15"},"returnParameters":{"id":17472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17471,"mutability":"mutable","name":"forkId","nameLocation":"106911:6:15","nodeType":"VariableDeclaration","scope":17473,"src":"106903:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17470,"name":"uint256","nodeType":"ElementaryTypeName","src":"106903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"106902:16:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17483,"nodeType":"FunctionDefinition","src":"107026:103:15","nodes":[],"documentation":{"id":17474,"nodeType":"StructuredDocumentation","src":"106925:96:15","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"107035:10:15","parameters":{"id":17479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17476,"mutability":"mutable","name":"urlOrAlias","nameLocation":"107062:10:15","nodeType":"VariableDeclaration","scope":17483,"src":"107046:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17475,"name":"string","nodeType":"ElementaryTypeName","src":"107046:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17478,"mutability":"mutable","name":"blockNumber","nameLocation":"107082:11:15","nodeType":"VariableDeclaration","scope":17483,"src":"107074:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17477,"name":"uint256","nodeType":"ElementaryTypeName","src":"107074:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107045:49:15"},"returnParameters":{"id":17482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17481,"mutability":"mutable","name":"forkId","nameLocation":"107121:6:15","nodeType":"VariableDeclaration","scope":17483,"src":"107113:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17480,"name":"uint256","nodeType":"ElementaryTypeName","src":"107113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107112:16:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17493,"nodeType":"FunctionDefinition","src":"107354:98:15","nodes":[],"documentation":{"id":17484,"nodeType":"StructuredDocumentation","src":"107135:214:15","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"107363:10:15","parameters":{"id":17489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17486,"mutability":"mutable","name":"urlOrAlias","nameLocation":"107390:10:15","nodeType":"VariableDeclaration","scope":17493,"src":"107374:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17485,"name":"string","nodeType":"ElementaryTypeName","src":"107374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17488,"mutability":"mutable","name":"txHash","nameLocation":"107410:6:15","nodeType":"VariableDeclaration","scope":17493,"src":"107402:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"107402:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"107373:44:15"},"returnParameters":{"id":17492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17491,"mutability":"mutable","name":"forkId","nameLocation":"107444:6:15","nodeType":"VariableDeclaration","scope":17493,"src":"107436:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17490,"name":"uint256","nodeType":"ElementaryTypeName","src":"107436:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107435:16:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17501,"nodeType":"FunctionDefinition","src":"107587:88:15","nodes":[],"documentation":{"id":17494,"nodeType":"StructuredDocumentation","src":"107458:124:15","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"107596:16:15","parameters":{"id":17497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17496,"mutability":"mutable","name":"urlOrAlias","nameLocation":"107629:10:15","nodeType":"VariableDeclaration","scope":17501,"src":"107613:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17495,"name":"string","nodeType":"ElementaryTypeName","src":"107613:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"107612:28:15"},"returnParameters":{"id":17500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17499,"mutability":"mutable","name":"forkId","nameLocation":"107667:6:15","nodeType":"VariableDeclaration","scope":17501,"src":"107659:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17498,"name":"uint256","nodeType":"ElementaryTypeName","src":"107659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107658:16:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17511,"nodeType":"FunctionDefinition","src":"107799:109:15","nodes":[],"documentation":{"id":17502,"nodeType":"StructuredDocumentation","src":"107681:113:15","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"107808:16:15","parameters":{"id":17507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17504,"mutability":"mutable","name":"urlOrAlias","nameLocation":"107841:10:15","nodeType":"VariableDeclaration","scope":17511,"src":"107825:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17503,"name":"string","nodeType":"ElementaryTypeName","src":"107825:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17506,"mutability":"mutable","name":"blockNumber","nameLocation":"107861:11:15","nodeType":"VariableDeclaration","scope":17511,"src":"107853:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17505,"name":"uint256","nodeType":"ElementaryTypeName","src":"107853:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107824:49:15"},"returnParameters":{"id":17510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17509,"mutability":"mutable","name":"forkId","nameLocation":"107900:6:15","nodeType":"VariableDeclaration","scope":17511,"src":"107892:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17508,"name":"uint256","nodeType":"ElementaryTypeName","src":"107892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"107891:16:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17521,"nodeType":"FunctionDefinition","src":"108144:104:15","nodes":[],"documentation":{"id":17512,"nodeType":"StructuredDocumentation","src":"107914:225:15","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"108153:16:15","parameters":{"id":17517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17514,"mutability":"mutable","name":"urlOrAlias","nameLocation":"108186:10:15","nodeType":"VariableDeclaration","scope":17521,"src":"108170:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17513,"name":"string","nodeType":"ElementaryTypeName","src":"108170:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17516,"mutability":"mutable","name":"txHash","nameLocation":"108206:6:15","nodeType":"VariableDeclaration","scope":17521,"src":"108198:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17515,"name":"bytes32","nodeType":"ElementaryTypeName","src":"108198:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"108169:44:15"},"returnParameters":{"id":17520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17519,"mutability":"mutable","name":"forkId","nameLocation":"108240:6:15","nodeType":"VariableDeclaration","scope":17521,"src":"108232:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17518,"name":"uint256","nodeType":"ElementaryTypeName","src":"108232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108231:16:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17529,"nodeType":"FunctionDefinition","src":"108288:60:15","nodes":[],"documentation":{"id":17522,"nodeType":"StructuredDocumentation","src":"108254:29:15","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"108297:4:15","parameters":{"id":17527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17524,"mutability":"mutable","name":"account","nameLocation":"108310:7:15","nodeType":"VariableDeclaration","scope":17529,"src":"108302:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17523,"name":"address","nodeType":"ElementaryTypeName","src":"108302:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17526,"mutability":"mutable","name":"newBalance","nameLocation":"108327:10:15","nodeType":"VariableDeclaration","scope":17529,"src":"108319:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17525,"name":"uint256","nodeType":"ElementaryTypeName","src":"108319:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108301:37:15"},"returnParameters":{"id":17528,"nodeType":"ParameterList","parameters":[],"src":"108347:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17537,"nodeType":"FunctionDefinition","src":"108586:81:15","nodes":[],"documentation":{"id":17530,"nodeType":"StructuredDocumentation","src":"108354:227:15","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"08d6b37a","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshot","nameLocation":"108595:19:15","parameters":{"id":17533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17532,"mutability":"mutable","name":"snapshotId","nameLocation":"108623:10:15","nodeType":"VariableDeclaration","scope":17537,"src":"108615:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17531,"name":"uint256","nodeType":"ElementaryTypeName","src":"108615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108614:20:15"},"returnParameters":{"id":17536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17535,"mutability":"mutable","name":"success","nameLocation":"108658:7:15","nodeType":"VariableDeclaration","scope":17537,"src":"108653:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17534,"name":"bool","nodeType":"ElementaryTypeName","src":"108653:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"108652:14:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17541,"nodeType":"FunctionDefinition","src":"108739:41:15","nodes":[],"documentation":{"id":17538,"nodeType":"StructuredDocumentation","src":"108673:61:15","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"e0933c74","implemented":false,"kind":"function","modifiers":[],"name":"deleteStateSnapshots","nameLocation":"108748:20:15","parameters":{"id":17539,"nodeType":"ParameterList","parameters":[],"src":"108768:2:15"},"returnParameters":{"id":17540,"nodeType":"ParameterList","parameters":[],"src":"108779:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17547,"nodeType":"FunctionDefinition","src":"108956:52:15","nodes":[],"documentation":{"id":17542,"nodeType":"StructuredDocumentation","src":"108786:165:15","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"108965:10:15","parameters":{"id":17545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17544,"mutability":"mutable","name":"newDifficulty","nameLocation":"108984:13:15","nodeType":"VariableDeclaration","scope":17547,"src":"108976:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17543,"name":"uint256","nodeType":"ElementaryTypeName","src":"108976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"108975:23:15"},"returnParameters":{"id":17546,"nodeType":"ParameterList","parameters":[],"src":"109007:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17553,"nodeType":"FunctionDefinition","src":"109067:61:15","nodes":[],"documentation":{"id":17548,"nodeType":"StructuredDocumentation","src":"109014:48:15","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"109076:9:15","parameters":{"id":17551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17550,"mutability":"mutable","name":"pathToStateJson","nameLocation":"109102:15:15","nodeType":"VariableDeclaration","scope":17553,"src":"109086:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17549,"name":"string","nodeType":"ElementaryTypeName","src":"109086:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"109085:33:15"},"returnParameters":{"id":17552,"nodeType":"ParameterList","parameters":[],"src":"109127:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17561,"nodeType":"FunctionDefinition","src":"109165:74:15","nodes":[],"documentation":{"id":17554,"nodeType":"StructuredDocumentation","src":"109134:26:15","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"109174:4:15","parameters":{"id":17559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17556,"mutability":"mutable","name":"target","nameLocation":"109187:6:15","nodeType":"VariableDeclaration","scope":17561,"src":"109179:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17555,"name":"address","nodeType":"ElementaryTypeName","src":"109179:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17558,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"109210:18:15","nodeType":"VariableDeclaration","scope":17561,"src":"109195:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17557,"name":"bytes","nodeType":"ElementaryTypeName","src":"109195:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"109178:51:15"},"returnParameters":{"id":17560,"nodeType":"ParameterList","parameters":[],"src":"109238:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17567,"nodeType":"FunctionDefinition","src":"109275:42:15","nodes":[],"documentation":{"id":17562,"nodeType":"StructuredDocumentation","src":"109245:25:15","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"109284:3:15","parameters":{"id":17565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17564,"mutability":"mutable","name":"newBasefee","nameLocation":"109296:10:15","nodeType":"VariableDeclaration","scope":17567,"src":"109288:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17563,"name":"uint256","nodeType":"ElementaryTypeName","src":"109288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"109287:20:15"},"returnParameters":{"id":17566,"nodeType":"ParameterList","parameters":[],"src":"109316:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17574,"nodeType":"FunctionDefinition","src":"109495:73:15","nodes":[],"documentation":{"id":17568,"nodeType":"StructuredDocumentation","src":"109323:167:15","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"109504:13:15","parameters":{"id":17569,"nodeType":"ParameterList","parameters":[],"src":"109517:2:15"},"returnParameters":{"id":17573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17572,"mutability":"mutable","name":"hashes","nameLocation":"109560:6:15","nodeType":"VariableDeclaration","scope":17574,"src":"109543:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":17570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"109543:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":17571,"nodeType":"ArrayTypeName","src":"109543:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"109542:25:15"},"scope":18462,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17582,"nodeType":"FunctionDefinition","src":"109635:79:15","nodes":[],"documentation":{"id":17575,"nodeType":"StructuredDocumentation","src":"109574:56:15","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"109644:12:15","parameters":{"id":17578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17577,"mutability":"mutable","name":"account","nameLocation":"109665:7:15","nodeType":"VariableDeclaration","scope":17582,"src":"109657:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17576,"name":"address","nodeType":"ElementaryTypeName","src":"109657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"109656:17:15"},"returnParameters":{"id":17581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17580,"mutability":"mutable","name":"persistent","nameLocation":"109702:10:15","nodeType":"VariableDeclaration","scope":17582,"src":"109697:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17579,"name":"bool","nodeType":"ElementaryTypeName","src":"109697:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"109696:17:15"},"scope":18462,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17588,"nodeType":"FunctionDefinition","src":"109794:63:15","nodes":[],"documentation":{"id":17583,"nodeType":"StructuredDocumentation","src":"109720:69:15","text":"Load a genesis JSON file's `allocs` into the in-memory EVM state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"109803:10:15","parameters":{"id":17586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17585,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"109830:16:15","nodeType":"VariableDeclaration","scope":17588,"src":"109814:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17584,"name":"string","nodeType":"ElementaryTypeName","src":"109814:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"109813:34:15"},"returnParameters":{"id":17587,"nodeType":"ParameterList","parameters":[],"src":"109856:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17594,"nodeType":"FunctionDefinition","src":"110060:50:15","nodes":[],"documentation":{"id":17589,"nodeType":"StructuredDocumentation","src":"109863:192:15","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"110069:14:15","parameters":{"id":17592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17591,"mutability":"mutable","name":"account","nameLocation":"110092:7:15","nodeType":"VariableDeclaration","scope":17594,"src":"110084:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17590,"name":"address","nodeType":"ElementaryTypeName","src":"110084:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"110083:17:15"},"returnParameters":{"id":17593,"nodeType":"ParameterList","parameters":[],"src":"110109:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17602,"nodeType":"FunctionDefinition","src":"110155:69:15","nodes":[],"documentation":{"id":17595,"nodeType":"StructuredDocumentation","src":"110116:34:15","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"110164:14:15","parameters":{"id":17600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17597,"mutability":"mutable","name":"account0","nameLocation":"110187:8:15","nodeType":"VariableDeclaration","scope":17602,"src":"110179:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17596,"name":"address","nodeType":"ElementaryTypeName","src":"110179:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17599,"mutability":"mutable","name":"account1","nameLocation":"110205:8:15","nodeType":"VariableDeclaration","scope":17602,"src":"110197:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17598,"name":"address","nodeType":"ElementaryTypeName","src":"110197:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"110178:36:15"},"returnParameters":{"id":17601,"nodeType":"ParameterList","parameters":[],"src":"110223:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17612,"nodeType":"FunctionDefinition","src":"110269:87:15","nodes":[],"documentation":{"id":17603,"nodeType":"StructuredDocumentation","src":"110230:34:15","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"110278:14:15","parameters":{"id":17610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17605,"mutability":"mutable","name":"account0","nameLocation":"110301:8:15","nodeType":"VariableDeclaration","scope":17612,"src":"110293:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17604,"name":"address","nodeType":"ElementaryTypeName","src":"110293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17607,"mutability":"mutable","name":"account1","nameLocation":"110319:8:15","nodeType":"VariableDeclaration","scope":17612,"src":"110311:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17606,"name":"address","nodeType":"ElementaryTypeName","src":"110311:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17609,"mutability":"mutable","name":"account2","nameLocation":"110337:8:15","nodeType":"VariableDeclaration","scope":17612,"src":"110329:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17608,"name":"address","nodeType":"ElementaryTypeName","src":"110329:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"110292:54:15"},"returnParameters":{"id":17611,"nodeType":"ParameterList","parameters":[],"src":"110355:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17619,"nodeType":"FunctionDefinition","src":"110401:62:15","nodes":[],"documentation":{"id":17613,"nodeType":"StructuredDocumentation","src":"110362:34:15","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"110410:14:15","parameters":{"id":17617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17616,"mutability":"mutable","name":"accounts","nameLocation":"110444:8:15","nodeType":"VariableDeclaration","scope":17619,"src":"110425:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17614,"name":"address","nodeType":"ElementaryTypeName","src":"110425:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17615,"nodeType":"ArrayTypeName","src":"110425:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"110424:29:15"},"returnParameters":{"id":17618,"nodeType":"ParameterList","parameters":[],"src":"110462:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17629,"nodeType":"FunctionDefinition","src":"110534:97:15","nodes":[],"documentation":{"id":17620,"nodeType":"StructuredDocumentation","src":"110469:60:15","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"110543:14:15","parameters":{"id":17627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17622,"mutability":"mutable","name":"callee","nameLocation":"110566:6:15","nodeType":"VariableDeclaration","scope":17629,"src":"110558:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17621,"name":"address","nodeType":"ElementaryTypeName","src":"110558:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17624,"mutability":"mutable","name":"data","nameLocation":"110589:4:15","nodeType":"VariableDeclaration","scope":17629,"src":"110574:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17623,"name":"bytes","nodeType":"ElementaryTypeName","src":"110574:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17626,"mutability":"mutable","name":"revertData","nameLocation":"110610:10:15","nodeType":"VariableDeclaration","scope":17629,"src":"110595:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17625,"name":"bytes","nodeType":"ElementaryTypeName","src":"110595:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110557:64:15"},"returnParameters":{"id":17628,"nodeType":"ParameterList","parameters":[],"src":"110630:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17641,"nodeType":"FunctionDefinition","src":"110731:123:15","nodes":[],"documentation":{"id":17630,"nodeType":"StructuredDocumentation","src":"110637:89:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"110740:14:15","parameters":{"id":17639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17632,"mutability":"mutable","name":"callee","nameLocation":"110763:6:15","nodeType":"VariableDeclaration","scope":17641,"src":"110755:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17631,"name":"address","nodeType":"ElementaryTypeName","src":"110755:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17634,"mutability":"mutable","name":"msgValue","nameLocation":"110779:8:15","nodeType":"VariableDeclaration","scope":17641,"src":"110771:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17633,"name":"uint256","nodeType":"ElementaryTypeName","src":"110771:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17636,"mutability":"mutable","name":"data","nameLocation":"110804:4:15","nodeType":"VariableDeclaration","scope":17641,"src":"110789:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17635,"name":"bytes","nodeType":"ElementaryTypeName","src":"110789:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17638,"mutability":"mutable","name":"revertData","nameLocation":"110825:10:15","nodeType":"VariableDeclaration","scope":17641,"src":"110810:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17637,"name":"bytes","nodeType":"ElementaryTypeName","src":"110810:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"110754:82:15"},"returnParameters":{"id":17640,"nodeType":"ParameterList","parameters":[],"src":"110853:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17651,"nodeType":"FunctionDefinition","src":"111067:89:15","nodes":[],"documentation":{"id":17642,"nodeType":"StructuredDocumentation","src":"110860:202:15","text":"Reverts a call to an address with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"2dfba5df","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"111076:14:15","parameters":{"id":17649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17644,"mutability":"mutable","name":"callee","nameLocation":"111099:6:15","nodeType":"VariableDeclaration","scope":17651,"src":"111091:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17643,"name":"address","nodeType":"ElementaryTypeName","src":"111091:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17646,"mutability":"mutable","name":"data","nameLocation":"111114:4:15","nodeType":"VariableDeclaration","scope":17651,"src":"111107:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17645,"name":"bytes4","nodeType":"ElementaryTypeName","src":"111107:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17648,"mutability":"mutable","name":"revertData","nameLocation":"111135:10:15","nodeType":"VariableDeclaration","scope":17651,"src":"111120:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17647,"name":"bytes","nodeType":"ElementaryTypeName","src":"111120:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111090:56:15"},"returnParameters":{"id":17650,"nodeType":"ParameterList","parameters":[],"src":"111155:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17663,"nodeType":"FunctionDefinition","src":"111398:107:15","nodes":[],"documentation":{"id":17652,"nodeType":"StructuredDocumentation","src":"111162:231:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"596c8f04","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"111407:14:15","parameters":{"id":17661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17654,"mutability":"mutable","name":"callee","nameLocation":"111430:6:15","nodeType":"VariableDeclaration","scope":17663,"src":"111422:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17653,"name":"address","nodeType":"ElementaryTypeName","src":"111422:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17656,"mutability":"mutable","name":"msgValue","nameLocation":"111446:8:15","nodeType":"VariableDeclaration","scope":17663,"src":"111438:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17655,"name":"uint256","nodeType":"ElementaryTypeName","src":"111438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17658,"mutability":"mutable","name":"data","nameLocation":"111463:4:15","nodeType":"VariableDeclaration","scope":17663,"src":"111456:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17657,"name":"bytes4","nodeType":"ElementaryTypeName","src":"111456:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17660,"mutability":"mutable","name":"revertData","nameLocation":"111484:10:15","nodeType":"VariableDeclaration","scope":17663,"src":"111469:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17659,"name":"bytes","nodeType":"ElementaryTypeName","src":"111469:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111421:74:15"},"returnParameters":{"id":17662,"nodeType":"ParameterList","parameters":[],"src":"111504:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17673,"nodeType":"FunctionDefinition","src":"111765:91:15","nodes":[],"documentation":{"id":17664,"nodeType":"StructuredDocumentation","src":"111511:249:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"111774:8:15","parameters":{"id":17671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17666,"mutability":"mutable","name":"callee","nameLocation":"111791:6:15","nodeType":"VariableDeclaration","scope":17673,"src":"111783:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17665,"name":"address","nodeType":"ElementaryTypeName","src":"111783:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17668,"mutability":"mutable","name":"data","nameLocation":"111814:4:15","nodeType":"VariableDeclaration","scope":17673,"src":"111799:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17667,"name":"bytes","nodeType":"ElementaryTypeName","src":"111799:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17670,"mutability":"mutable","name":"returnData","nameLocation":"111835:10:15","nodeType":"VariableDeclaration","scope":17673,"src":"111820:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17669,"name":"bytes","nodeType":"ElementaryTypeName","src":"111820:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111782:64:15"},"returnParameters":{"id":17672,"nodeType":"ParameterList","parameters":[],"src":"111855:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17685,"nodeType":"FunctionDefinition","src":"112031:109:15","nodes":[],"documentation":{"id":17674,"nodeType":"StructuredDocumentation","src":"111862:164:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"112040:8:15","parameters":{"id":17683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17676,"mutability":"mutable","name":"callee","nameLocation":"112057:6:15","nodeType":"VariableDeclaration","scope":17685,"src":"112049:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17675,"name":"address","nodeType":"ElementaryTypeName","src":"112049:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17678,"mutability":"mutable","name":"msgValue","nameLocation":"112073:8:15","nodeType":"VariableDeclaration","scope":17685,"src":"112065:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17677,"name":"uint256","nodeType":"ElementaryTypeName","src":"112065:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17680,"mutability":"mutable","name":"data","nameLocation":"112098:4:15","nodeType":"VariableDeclaration","scope":17685,"src":"112083:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17679,"name":"bytes","nodeType":"ElementaryTypeName","src":"112083:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17682,"mutability":"mutable","name":"returnData","nameLocation":"112119:10:15","nodeType":"VariableDeclaration","scope":17685,"src":"112104:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17681,"name":"bytes","nodeType":"ElementaryTypeName","src":"112104:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"112048:82:15"},"returnParameters":{"id":17684,"nodeType":"ParameterList","parameters":[],"src":"112139:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17695,"nodeType":"FunctionDefinition","src":"112542:83:15","nodes":[],"documentation":{"id":17686,"nodeType":"StructuredDocumentation","src":"112146:391:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"08e0c537","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"112551:8:15","parameters":{"id":17693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17688,"mutability":"mutable","name":"callee","nameLocation":"112568:6:15","nodeType":"VariableDeclaration","scope":17695,"src":"112560:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17687,"name":"address","nodeType":"ElementaryTypeName","src":"112560:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17690,"mutability":"mutable","name":"data","nameLocation":"112583:4:15","nodeType":"VariableDeclaration","scope":17695,"src":"112576:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17689,"name":"bytes4","nodeType":"ElementaryTypeName","src":"112576:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17692,"mutability":"mutable","name":"returnData","nameLocation":"112604:10:15","nodeType":"VariableDeclaration","scope":17695,"src":"112589:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17691,"name":"bytes","nodeType":"ElementaryTypeName","src":"112589:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"112559:56:15"},"returnParameters":{"id":17694,"nodeType":"ParameterList","parameters":[],"src":"112624:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17707,"nodeType":"FunctionDefinition","src":"112942:101:15","nodes":[],"documentation":{"id":17696,"nodeType":"StructuredDocumentation","src":"112631:306:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity.\n Overload to pass the function selector directly `token.approve.selector` instead of `abi.encodeWithSelector(token.approve.selector)`."},"functionSelector":"e7b36a3d","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"112951:8:15","parameters":{"id":17705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17698,"mutability":"mutable","name":"callee","nameLocation":"112968:6:15","nodeType":"VariableDeclaration","scope":17707,"src":"112960:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17697,"name":"address","nodeType":"ElementaryTypeName","src":"112960:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17700,"mutability":"mutable","name":"msgValue","nameLocation":"112984:8:15","nodeType":"VariableDeclaration","scope":17707,"src":"112976:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17699,"name":"uint256","nodeType":"ElementaryTypeName","src":"112976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17702,"mutability":"mutable","name":"data","nameLocation":"113001:4:15","nodeType":"VariableDeclaration","scope":17707,"src":"112994:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":17701,"name":"bytes4","nodeType":"ElementaryTypeName","src":"112994:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":17704,"mutability":"mutable","name":"returnData","nameLocation":"113022:10:15","nodeType":"VariableDeclaration","scope":17707,"src":"113007:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17703,"name":"bytes","nodeType":"ElementaryTypeName","src":"113007:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"112959:74:15"},"returnParameters":{"id":17706,"nodeType":"ParameterList","parameters":[],"src":"113042:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17718,"nodeType":"FunctionDefinition","src":"113133:94:15","nodes":[],"documentation":{"id":17708,"nodeType":"StructuredDocumentation","src":"113049:79:15","text":"Mocks multiple calls to an address, returning specified data for each call."},"functionSelector":"5c5c3de9","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"113142:9:15","parameters":{"id":17716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17710,"mutability":"mutable","name":"callee","nameLocation":"113160:6:15","nodeType":"VariableDeclaration","scope":17718,"src":"113152:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17709,"name":"address","nodeType":"ElementaryTypeName","src":"113152:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17712,"mutability":"mutable","name":"data","nameLocation":"113183:4:15","nodeType":"VariableDeclaration","scope":17718,"src":"113168:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17711,"name":"bytes","nodeType":"ElementaryTypeName","src":"113168:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17715,"mutability":"mutable","name":"returnData","nameLocation":"113206:10:15","nodeType":"VariableDeclaration","scope":17718,"src":"113189:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17713,"name":"bytes","nodeType":"ElementaryTypeName","src":"113189:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17714,"nodeType":"ArrayTypeName","src":"113189:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"113151:66:15"},"returnParameters":{"id":17717,"nodeType":"ParameterList","parameters":[],"src":"113226:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17731,"nodeType":"FunctionDefinition","src":"113345:112:15","nodes":[],"documentation":{"id":17719,"nodeType":"StructuredDocumentation","src":"113233:107:15","text":"Mocks multiple calls to an address with a specific `msg.value`, returning specified data for each call."},"functionSelector":"08bcbae1","implemented":false,"kind":"function","modifiers":[],"name":"mockCalls","nameLocation":"113354:9:15","parameters":{"id":17729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17721,"mutability":"mutable","name":"callee","nameLocation":"113372:6:15","nodeType":"VariableDeclaration","scope":17731,"src":"113364:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17720,"name":"address","nodeType":"ElementaryTypeName","src":"113364:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17723,"mutability":"mutable","name":"msgValue","nameLocation":"113388:8:15","nodeType":"VariableDeclaration","scope":17731,"src":"113380:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17722,"name":"uint256","nodeType":"ElementaryTypeName","src":"113380:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17725,"mutability":"mutable","name":"data","nameLocation":"113413:4:15","nodeType":"VariableDeclaration","scope":17731,"src":"113398:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17724,"name":"bytes","nodeType":"ElementaryTypeName","src":"113398:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":17728,"mutability":"mutable","name":"returnData","nameLocation":"113436:10:15","nodeType":"VariableDeclaration","scope":17731,"src":"113419:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":17726,"name":"bytes","nodeType":"ElementaryTypeName","src":"113419:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":17727,"nodeType":"ArrayTypeName","src":"113419:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"113363:84:15"},"returnParameters":{"id":17730,"nodeType":"ParameterList","parameters":[],"src":"113456:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17741,"nodeType":"FunctionDefinition","src":"113963:84:15","nodes":[],"documentation":{"id":17732,"nodeType":"StructuredDocumentation","src":"113463:495:15","text":"Whenever a call is made to `callee` with calldata `data`, this cheatcode instead calls\n `target` with the same calldata. This functionality is similar to a delegate call made to\n `target` contract from `callee`.\n Can be used to substitute a call to a function with another implementation that captures\n the primary logic of the original function but is easier to reason about.\n If calldata is not a strict match then partial match by selector is attempted."},"functionSelector":"adf84d21","implemented":false,"kind":"function","modifiers":[],"name":"mockFunction","nameLocation":"113972:12:15","parameters":{"id":17739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17734,"mutability":"mutable","name":"callee","nameLocation":"113993:6:15","nodeType":"VariableDeclaration","scope":17741,"src":"113985:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17733,"name":"address","nodeType":"ElementaryTypeName","src":"113985:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17736,"mutability":"mutable","name":"target","nameLocation":"114009:6:15","nodeType":"VariableDeclaration","scope":17741,"src":"114001:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17735,"name":"address","nodeType":"ElementaryTypeName","src":"114001:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17738,"mutability":"mutable","name":"data","nameLocation":"114032:4:15","nodeType":"VariableDeclaration","scope":17741,"src":"114017:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":17737,"name":"bytes","nodeType":"ElementaryTypeName","src":"114017:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"113984:53:15"},"returnParameters":{"id":17740,"nodeType":"ParameterList","parameters":[],"src":"114046:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17745,"nodeType":"FunctionDefinition","src":"114145:33:15","nodes":[],"documentation":{"id":17742,"nodeType":"StructuredDocumentation","src":"114053:87:15","text":"Utility cheatcode to remove any EIP-2930 access list set by `accessList` cheatcode."},"functionSelector":"238ad778","implemented":false,"kind":"function","modifiers":[],"name":"noAccessList","nameLocation":"114154:12:15","parameters":{"id":17743,"nodeType":"ParameterList","parameters":[],"src":"114166:2:15"},"returnParameters":{"id":17744,"nodeType":"ParameterList","parameters":[],"src":"114177:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17751,"nodeType":"FunctionDefinition","src":"114253:43:15","nodes":[],"documentation":{"id":17746,"nodeType":"StructuredDocumentation","src":"114184:64:15","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"114262:5:15","parameters":{"id":17749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17748,"mutability":"mutable","name":"msgSender","nameLocation":"114276:9:15","nodeType":"VariableDeclaration","scope":17751,"src":"114268:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17747,"name":"address","nodeType":"ElementaryTypeName","src":"114268:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114267:19:15"},"returnParameters":{"id":17750,"nodeType":"ParameterList","parameters":[],"src":"114295:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17759,"nodeType":"FunctionDefinition","src":"114415:61:15","nodes":[],"documentation":{"id":17752,"nodeType":"StructuredDocumentation","src":"114302:108:15","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"114424:5:15","parameters":{"id":17757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17754,"mutability":"mutable","name":"msgSender","nameLocation":"114438:9:15","nodeType":"VariableDeclaration","scope":17759,"src":"114430:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17753,"name":"address","nodeType":"ElementaryTypeName","src":"114430:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17756,"mutability":"mutable","name":"txOrigin","nameLocation":"114457:8:15","nodeType":"VariableDeclaration","scope":17759,"src":"114449:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17755,"name":"address","nodeType":"ElementaryTypeName","src":"114449:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114429:37:15"},"returnParameters":{"id":17758,"nodeType":"ParameterList","parameters":[],"src":"114475:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17767,"nodeType":"FunctionDefinition","src":"114560:62:15","nodes":[],"documentation":{"id":17760,"nodeType":"StructuredDocumentation","src":"114482:73:15","text":"Sets the *next* delegate call's `msg.sender` to be the input address."},"functionSelector":"a7f8bf5c","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"114569:5:15","parameters":{"id":17765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17762,"mutability":"mutable","name":"msgSender","nameLocation":"114583:9:15","nodeType":"VariableDeclaration","scope":17767,"src":"114575:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17761,"name":"address","nodeType":"ElementaryTypeName","src":"114575:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17764,"mutability":"mutable","name":"delegateCall","nameLocation":"114599:12:15","nodeType":"VariableDeclaration","scope":17767,"src":"114594:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17763,"name":"bool","nodeType":"ElementaryTypeName","src":"114594:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"114574:38:15"},"returnParameters":{"id":17766,"nodeType":"ParameterList","parameters":[],"src":"114621:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17777,"nodeType":"FunctionDefinition","src":"114750:80:15","nodes":[],"documentation":{"id":17768,"nodeType":"StructuredDocumentation","src":"114628:117:15","text":"Sets the *next* delegate call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"7d73d042","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"114759:5:15","parameters":{"id":17775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17770,"mutability":"mutable","name":"msgSender","nameLocation":"114773:9:15","nodeType":"VariableDeclaration","scope":17777,"src":"114765:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17769,"name":"address","nodeType":"ElementaryTypeName","src":"114765:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17772,"mutability":"mutable","name":"txOrigin","nameLocation":"114792:8:15","nodeType":"VariableDeclaration","scope":17777,"src":"114784:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17771,"name":"address","nodeType":"ElementaryTypeName","src":"114784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17774,"mutability":"mutable","name":"delegateCall","nameLocation":"114807:12:15","nodeType":"VariableDeclaration","scope":17777,"src":"114802:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17773,"name":"bool","nodeType":"ElementaryTypeName","src":"114802:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"114764:56:15"},"returnParameters":{"id":17776,"nodeType":"ParameterList","parameters":[],"src":"114829:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17783,"nodeType":"FunctionDefinition","src":"115007:52:15","nodes":[],"documentation":{"id":17778,"nodeType":"StructuredDocumentation","src":"114836:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"115016:10:15","parameters":{"id":17781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17780,"mutability":"mutable","name":"newPrevrandao","nameLocation":"115035:13:15","nodeType":"VariableDeclaration","scope":17783,"src":"115027:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"115027:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"115026:23:15"},"returnParameters":{"id":17782,"nodeType":"ParameterList","parameters":[],"src":"115058:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17789,"nodeType":"FunctionDefinition","src":"115236:52:15","nodes":[],"documentation":{"id":17784,"nodeType":"StructuredDocumentation","src":"115065:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"115245:10:15","parameters":{"id":17787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17786,"mutability":"mutable","name":"newPrevrandao","nameLocation":"115264:13:15","nodeType":"VariableDeclaration","scope":17789,"src":"115256:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17785,"name":"uint256","nodeType":"ElementaryTypeName","src":"115256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"115255:23:15"},"returnParameters":{"id":17788,"nodeType":"ParameterList","parameters":[],"src":"115287:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17800,"nodeType":"FunctionDefinition","src":"115416:106:15","nodes":[],"documentation":{"id":17790,"nodeType":"StructuredDocumentation","src":"115294:117:15","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"115425:11:15","parameters":{"id":17791,"nodeType":"ParameterList","parameters":[],"src":"115436:2:15"},"returnParameters":{"id":17799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17794,"mutability":"mutable","name":"callerMode","nameLocation":"115473:10:15","nodeType":"VariableDeclaration","scope":17800,"src":"115462:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$13268","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":17793,"nodeType":"UserDefinedTypeName","pathNode":{"id":17792,"name":"CallerMode","nameLocations":["115462:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":13268,"src":"115462:10:15"},"referencedDeclaration":13268,"src":"115462:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$13268","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":17796,"mutability":"mutable","name":"msgSender","nameLocation":"115493:9:15","nodeType":"VariableDeclaration","scope":17800,"src":"115485:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17795,"name":"address","nodeType":"ElementaryTypeName","src":"115485:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17798,"mutability":"mutable","name":"txOrigin","nameLocation":"115512:8:15","nodeType":"VariableDeclaration","scope":17800,"src":"115504:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17797,"name":"address","nodeType":"ElementaryTypeName","src":"115504:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"115461:60:15"},"scope":18462,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":17806,"nodeType":"FunctionDefinition","src":"115610:46:15","nodes":[],"documentation":{"id":17801,"nodeType":"StructuredDocumentation","src":"115528:77:15","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"115619:10:15","parameters":{"id":17804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17803,"mutability":"mutable","name":"account","nameLocation":"115638:7:15","nodeType":"VariableDeclaration","scope":17806,"src":"115630:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17802,"name":"address","nodeType":"ElementaryTypeName","src":"115630:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"115629:17:15"},"returnParameters":{"id":17805,"nodeType":"ParameterList","parameters":[],"src":"115655:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17814,"nodeType":"FunctionDefinition","src":"116004:75:15","nodes":[],"documentation":{"id":17807,"nodeType":"StructuredDocumentation","src":"115662:337:15","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteStateSnapshot`."},"functionSelector":"c2527405","implemented":false,"kind":"function","modifiers":[],"name":"revertToState","nameLocation":"116013:13:15","parameters":{"id":17810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17809,"mutability":"mutable","name":"snapshotId","nameLocation":"116035:10:15","nodeType":"VariableDeclaration","scope":17814,"src":"116027:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17808,"name":"uint256","nodeType":"ElementaryTypeName","src":"116027:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116026:20:15"},"returnParameters":{"id":17813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17812,"mutability":"mutable","name":"success","nameLocation":"116070:7:15","nodeType":"VariableDeclaration","scope":17814,"src":"116065:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17811,"name":"bool","nodeType":"ElementaryTypeName","src":"116065:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"116064:14:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17822,"nodeType":"FunctionDefinition","src":"116362:84:15","nodes":[],"documentation":{"id":17815,"nodeType":"StructuredDocumentation","src":"116085:272:15","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"3a1985dc","implemented":false,"kind":"function","modifiers":[],"name":"revertToStateAndDelete","nameLocation":"116371:22:15","parameters":{"id":17818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17817,"mutability":"mutable","name":"snapshotId","nameLocation":"116402:10:15","nodeType":"VariableDeclaration","scope":17822,"src":"116394:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17816,"name":"uint256","nodeType":"ElementaryTypeName","src":"116394:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116393:20:15"},"returnParameters":{"id":17821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17820,"mutability":"mutable","name":"success","nameLocation":"116437:7:15","nodeType":"VariableDeclaration","scope":17822,"src":"116432:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17819,"name":"bool","nodeType":"ElementaryTypeName","src":"116432:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"116431:14:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17828,"nodeType":"FunctionDefinition","src":"116543:52:15","nodes":[],"documentation":{"id":17823,"nodeType":"StructuredDocumentation","src":"116452:86:15","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"116552:16:15","parameters":{"id":17826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17825,"mutability":"mutable","name":"account","nameLocation":"116577:7:15","nodeType":"VariableDeclaration","scope":17828,"src":"116569:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17824,"name":"address","nodeType":"ElementaryTypeName","src":"116569:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116568:17:15"},"returnParameters":{"id":17827,"nodeType":"ParameterList","parameters":[],"src":"116594:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17835,"nodeType":"FunctionDefinition","src":"116642:64:15","nodes":[],"documentation":{"id":17829,"nodeType":"StructuredDocumentation","src":"116601:36:15","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"116651:16:15","parameters":{"id":17833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17832,"mutability":"mutable","name":"accounts","nameLocation":"116687:8:15","nodeType":"VariableDeclaration","scope":17835,"src":"116668:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":17830,"name":"address","nodeType":"ElementaryTypeName","src":"116668:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":17831,"nodeType":"ArrayTypeName","src":"116668:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"116667:29:15"},"returnParameters":{"id":17834,"nodeType":"ParameterList","parameters":[],"src":"116705:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17841,"nodeType":"FunctionDefinition","src":"116741:42:15","nodes":[],"documentation":{"id":17836,"nodeType":"StructuredDocumentation","src":"116712:24:15","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"116750:4:15","parameters":{"id":17839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17838,"mutability":"mutable","name":"newHeight","nameLocation":"116763:9:15","nodeType":"VariableDeclaration","scope":17841,"src":"116755:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17837,"name":"uint256","nodeType":"ElementaryTypeName","src":"116755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116754:19:15"},"returnParameters":{"id":17840,"nodeType":"ParameterList","parameters":[],"src":"116782:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17847,"nodeType":"FunctionDefinition","src":"116922:48:15","nodes":[],"documentation":{"id":17842,"nodeType":"StructuredDocumentation","src":"116789:128:15","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"116931:8:15","parameters":{"id":17845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17844,"mutability":"mutable","name":"blockNumber","nameLocation":"116948:11:15","nodeType":"VariableDeclaration","scope":17847,"src":"116940:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17843,"name":"uint256","nodeType":"ElementaryTypeName","src":"116940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116939:21:15"},"returnParameters":{"id":17846,"nodeType":"ParameterList","parameters":[],"src":"116969:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17853,"nodeType":"FunctionDefinition","src":"117185:43:15","nodes":[],"documentation":{"id":17848,"nodeType":"StructuredDocumentation","src":"116976:204:15","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"117194:8:15","parameters":{"id":17851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17850,"mutability":"mutable","name":"txHash","nameLocation":"117211:6:15","nodeType":"VariableDeclaration","scope":17853,"src":"117203:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"117203:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"117202:16:15"},"returnParameters":{"id":17852,"nodeType":"ParameterList","parameters":[],"src":"117227:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17861,"nodeType":"FunctionDefinition","src":"117288:64:15","nodes":[],"documentation":{"id":17854,"nodeType":"StructuredDocumentation","src":"117234:49:15","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"117297:8:15","parameters":{"id":17859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17856,"mutability":"mutable","name":"forkId","nameLocation":"117314:6:15","nodeType":"VariableDeclaration","scope":17861,"src":"117306:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17855,"name":"uint256","nodeType":"ElementaryTypeName","src":"117306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17858,"mutability":"mutable","name":"blockNumber","nameLocation":"117330:11:15","nodeType":"VariableDeclaration","scope":17861,"src":"117322:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17857,"name":"uint256","nodeType":"ElementaryTypeName","src":"117322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"117305:37:15"},"returnParameters":{"id":17860,"nodeType":"ParameterList","parameters":[],"src":"117351:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17869,"nodeType":"FunctionDefinition","src":"117488:59:15","nodes":[],"documentation":{"id":17862,"nodeType":"StructuredDocumentation","src":"117358:125:15","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"117497:8:15","parameters":{"id":17867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17864,"mutability":"mutable","name":"forkId","nameLocation":"117514:6:15","nodeType":"VariableDeclaration","scope":17869,"src":"117506:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17863,"name":"uint256","nodeType":"ElementaryTypeName","src":"117506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17866,"mutability":"mutable","name":"txHash","nameLocation":"117530:6:15","nodeType":"VariableDeclaration","scope":17869,"src":"117522:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"117522:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"117505:32:15"},"returnParameters":{"id":17868,"nodeType":"ParameterList","parameters":[],"src":"117546:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17875,"nodeType":"FunctionDefinition","src":"117660:45:15","nodes":[],"documentation":{"id":17870,"nodeType":"StructuredDocumentation","src":"117553:102:15","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"117669:10:15","parameters":{"id":17873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17872,"mutability":"mutable","name":"forkId","nameLocation":"117688:6:15","nodeType":"VariableDeclaration","scope":17875,"src":"117680:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17871,"name":"uint256","nodeType":"ElementaryTypeName","src":"117680:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"117679:16:15"},"returnParameters":{"id":17874,"nodeType":"ParameterList","parameters":[],"src":"117704:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17883,"nodeType":"FunctionDefinition","src":"117855:71:15","nodes":[],"documentation":{"id":17876,"nodeType":"StructuredDocumentation","src":"117711:139:15","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"117864:12:15","parameters":{"id":17881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17878,"mutability":"mutable","name":"blockNumber","nameLocation":"117885:11:15","nodeType":"VariableDeclaration","scope":17883,"src":"117877:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17877,"name":"uint256","nodeType":"ElementaryTypeName","src":"117877:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17880,"mutability":"mutable","name":"blockHash","nameLocation":"117906:9:15","nodeType":"VariableDeclaration","scope":17883,"src":"117898:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"117898:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"117876:40:15"},"returnParameters":{"id":17882,"nodeType":"ParameterList","parameters":[],"src":"117925:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17891,"nodeType":"FunctionDefinition","src":"118024:61:15","nodes":[],"documentation":{"id":17884,"nodeType":"StructuredDocumentation","src":"117932:87:15","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"118033:8:15","parameters":{"id":17889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17886,"mutability":"mutable","name":"account","nameLocation":"118050:7:15","nodeType":"VariableDeclaration","scope":17891,"src":"118042:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17885,"name":"address","nodeType":"ElementaryTypeName","src":"118042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17888,"mutability":"mutable","name":"newNonce","nameLocation":"118066:8:15","nodeType":"VariableDeclaration","scope":17891,"src":"118059:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17887,"name":"uint64","nodeType":"ElementaryTypeName","src":"118059:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"118041:34:15"},"returnParameters":{"id":17890,"nodeType":"ParameterList","parameters":[],"src":"118084:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17899,"nodeType":"FunctionDefinition","src":"118151:67:15","nodes":[],"documentation":{"id":17892,"nodeType":"StructuredDocumentation","src":"118091:55:15","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"118160:14:15","parameters":{"id":17897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17894,"mutability":"mutable","name":"account","nameLocation":"118183:7:15","nodeType":"VariableDeclaration","scope":17899,"src":"118175:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17893,"name":"address","nodeType":"ElementaryTypeName","src":"118175:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17896,"mutability":"mutable","name":"newNonce","nameLocation":"118199:8:15","nodeType":"VariableDeclaration","scope":17899,"src":"118192:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17895,"name":"uint64","nodeType":"ElementaryTypeName","src":"118192:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"118174:34:15"},"returnParameters":{"id":17898,"nodeType":"ParameterList","parameters":[],"src":"118217:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17907,"nodeType":"FunctionDefinition","src":"118317:86:15","nodes":[],"documentation":{"id":17900,"nodeType":"StructuredDocumentation","src":"118224:88:15","text":"Snapshot capture the gas usage of the last call by name from the callee perspective."},"functionSelector":"dd9fca12","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"118326:19:15","parameters":{"id":17903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17902,"mutability":"mutable","name":"name","nameLocation":"118362:4:15","nodeType":"VariableDeclaration","scope":17907,"src":"118346:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17901,"name":"string","nodeType":"ElementaryTypeName","src":"118346:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"118345:22:15"},"returnParameters":{"id":17906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17905,"mutability":"mutable","name":"gasUsed","nameLocation":"118394:7:15","nodeType":"VariableDeclaration","scope":17907,"src":"118386:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17904,"name":"uint256","nodeType":"ElementaryTypeName","src":"118386:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118385:17:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17917,"nodeType":"FunctionDefinition","src":"118513:109:15","nodes":[],"documentation":{"id":17908,"nodeType":"StructuredDocumentation","src":"118409:99:15","text":"Snapshot capture the gas usage of the last call by name in a group from the callee perspective."},"functionSelector":"200c6772","implemented":false,"kind":"function","modifiers":[],"name":"snapshotGasLastCall","nameLocation":"118522:19:15","parameters":{"id":17913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17910,"mutability":"mutable","name":"group","nameLocation":"118558:5:15","nodeType":"VariableDeclaration","scope":17917,"src":"118542:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17909,"name":"string","nodeType":"ElementaryTypeName","src":"118542:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17912,"mutability":"mutable","name":"name","nameLocation":"118581:4:15","nodeType":"VariableDeclaration","scope":17917,"src":"118565:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17911,"name":"string","nodeType":"ElementaryTypeName","src":"118565:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"118541:45:15"},"returnParameters":{"id":17916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17915,"mutability":"mutable","name":"gasUsed","nameLocation":"118613:7:15","nodeType":"VariableDeclaration","scope":17917,"src":"118605:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17914,"name":"uint256","nodeType":"ElementaryTypeName","src":"118605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118604:17:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17923,"nodeType":"FunctionDefinition","src":"118782:63:15","nodes":[],"documentation":{"id":17918,"nodeType":"StructuredDocumentation","src":"118628:149:15","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertToState`."},"functionSelector":"9cd23835","implemented":false,"kind":"function","modifiers":[],"name":"snapshotState","nameLocation":"118791:13:15","parameters":{"id":17919,"nodeType":"ParameterList","parameters":[],"src":"118804:2:15"},"returnParameters":{"id":17922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17921,"mutability":"mutable","name":"snapshotId","nameLocation":"118833:10:15","nodeType":"VariableDeclaration","scope":17923,"src":"118825:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17920,"name":"uint256","nodeType":"ElementaryTypeName","src":"118825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118824:20:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17931,"nodeType":"FunctionDefinition","src":"118972:69:15","nodes":[],"documentation":{"id":17924,"nodeType":"StructuredDocumentation","src":"118851:116:15","text":"Snapshot capture an arbitrary numerical value by name.\n The group name is derived from the contract name."},"functionSelector":"51db805a","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"118981:13:15","parameters":{"id":17929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17926,"mutability":"mutable","name":"name","nameLocation":"119011:4:15","nodeType":"VariableDeclaration","scope":17931,"src":"118995:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17925,"name":"string","nodeType":"ElementaryTypeName","src":"118995:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17928,"mutability":"mutable","name":"value","nameLocation":"119025:5:15","nodeType":"VariableDeclaration","scope":17931,"src":"119017:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17927,"name":"uint256","nodeType":"ElementaryTypeName","src":"119017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"118994:37:15"},"returnParameters":{"id":17930,"nodeType":"ParameterList","parameters":[],"src":"119040:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17941,"nodeType":"FunctionDefinition","src":"119121:92:15","nodes":[],"documentation":{"id":17932,"nodeType":"StructuredDocumentation","src":"119047:69:15","text":"Snapshot capture an arbitrary numerical value by name in a group."},"functionSelector":"6d2b27d8","implemented":false,"kind":"function","modifiers":[],"name":"snapshotValue","nameLocation":"119130:13:15","parameters":{"id":17939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17934,"mutability":"mutable","name":"group","nameLocation":"119160:5:15","nodeType":"VariableDeclaration","scope":17941,"src":"119144:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17933,"name":"string","nodeType":"ElementaryTypeName","src":"119144:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17936,"mutability":"mutable","name":"name","nameLocation":"119183:4:15","nodeType":"VariableDeclaration","scope":17941,"src":"119167:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17935,"name":"string","nodeType":"ElementaryTypeName","src":"119167:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17938,"mutability":"mutable","name":"value","nameLocation":"119197:5:15","nodeType":"VariableDeclaration","scope":17941,"src":"119189:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17937,"name":"uint256","nodeType":"ElementaryTypeName","src":"119189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"119143:60:15"},"returnParameters":{"id":17940,"nodeType":"ParameterList","parameters":[],"src":"119212:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17947,"nodeType":"FunctionDefinition","src":"119320:48:15","nodes":[],"documentation":{"id":17942,"nodeType":"StructuredDocumentation","src":"119219:96:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"119329:10:15","parameters":{"id":17945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17944,"mutability":"mutable","name":"msgSender","nameLocation":"119348:9:15","nodeType":"VariableDeclaration","scope":17947,"src":"119340:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17943,"name":"address","nodeType":"ElementaryTypeName","src":"119340:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"119339:19:15"},"returnParameters":{"id":17946,"nodeType":"ParameterList","parameters":[],"src":"119367:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17955,"nodeType":"FunctionDefinition","src":"119519:66:15","nodes":[],"documentation":{"id":17948,"nodeType":"StructuredDocumentation","src":"119374:140:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"119528:10:15","parameters":{"id":17953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17950,"mutability":"mutable","name":"msgSender","nameLocation":"119547:9:15","nodeType":"VariableDeclaration","scope":17955,"src":"119539:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17949,"name":"address","nodeType":"ElementaryTypeName","src":"119539:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17952,"mutability":"mutable","name":"txOrigin","nameLocation":"119566:8:15","nodeType":"VariableDeclaration","scope":17955,"src":"119558:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17951,"name":"address","nodeType":"ElementaryTypeName","src":"119558:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"119538:37:15"},"returnParameters":{"id":17954,"nodeType":"ParameterList","parameters":[],"src":"119584:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17963,"nodeType":"FunctionDefinition","src":"119701:67:15","nodes":[],"documentation":{"id":17956,"nodeType":"StructuredDocumentation","src":"119591:105:15","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"1cc0b435","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"119710:10:15","parameters":{"id":17961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17958,"mutability":"mutable","name":"msgSender","nameLocation":"119729:9:15","nodeType":"VariableDeclaration","scope":17963,"src":"119721:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17957,"name":"address","nodeType":"ElementaryTypeName","src":"119721:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17960,"mutability":"mutable","name":"delegateCall","nameLocation":"119745:12:15","nodeType":"VariableDeclaration","scope":17963,"src":"119740:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17959,"name":"bool","nodeType":"ElementaryTypeName","src":"119740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"119720:38:15"},"returnParameters":{"id":17962,"nodeType":"ParameterList","parameters":[],"src":"119767:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17973,"nodeType":"FunctionDefinition","src":"119928:85:15","nodes":[],"documentation":{"id":17964,"nodeType":"StructuredDocumentation","src":"119774:149:15","text":"Sets all subsequent delegate calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"4eb859b5","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"119937:10:15","parameters":{"id":17971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17966,"mutability":"mutable","name":"msgSender","nameLocation":"119956:9:15","nodeType":"VariableDeclaration","scope":17973,"src":"119948:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17965,"name":"address","nodeType":"ElementaryTypeName","src":"119948:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17968,"mutability":"mutable","name":"txOrigin","nameLocation":"119975:8:15","nodeType":"VariableDeclaration","scope":17973,"src":"119967:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17967,"name":"address","nodeType":"ElementaryTypeName","src":"119967:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":17970,"mutability":"mutable","name":"delegateCall","nameLocation":"119990:12:15","nodeType":"VariableDeclaration","scope":17973,"src":"119985:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17969,"name":"bool","nodeType":"ElementaryTypeName","src":"119985:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"119947:56:15"},"returnParameters":{"id":17972,"nodeType":"ParameterList","parameters":[],"src":"120012:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17979,"nodeType":"FunctionDefinition","src":"120144:57:15","nodes":[],"documentation":{"id":17974,"nodeType":"StructuredDocumentation","src":"120019:120:15","text":"Start a snapshot capture of the current gas usage by name.\n The group name is derived from the contract name."},"functionSelector":"3cad9d7b","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"120153:16:15","parameters":{"id":17977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17976,"mutability":"mutable","name":"name","nameLocation":"120186:4:15","nodeType":"VariableDeclaration","scope":17979,"src":"120170:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17975,"name":"string","nodeType":"ElementaryTypeName","src":"120170:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"120169:22:15"},"returnParameters":{"id":17978,"nodeType":"ParameterList","parameters":[],"src":"120200:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17987,"nodeType":"FunctionDefinition","src":"120285:80:15","nodes":[],"documentation":{"id":17980,"nodeType":"StructuredDocumentation","src":"120207:73:15","text":"Start a snapshot capture of the current gas usage by name in a group."},"functionSelector":"6cd0cc53","implemented":false,"kind":"function","modifiers":[],"name":"startSnapshotGas","nameLocation":"120294:16:15","parameters":{"id":17985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17982,"mutability":"mutable","name":"group","nameLocation":"120327:5:15","nodeType":"VariableDeclaration","scope":17987,"src":"120311:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17981,"name":"string","nodeType":"ElementaryTypeName","src":"120311:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":17984,"mutability":"mutable","name":"name","nameLocation":"120350:4:15","nodeType":"VariableDeclaration","scope":17987,"src":"120334:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17983,"name":"string","nodeType":"ElementaryTypeName","src":"120334:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"120310:45:15"},"returnParameters":{"id":17986,"nodeType":"ParameterList","parameters":[],"src":"120364:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17991,"nodeType":"FunctionDefinition","src":"120440:30:15","nodes":[],"documentation":{"id":17988,"nodeType":"StructuredDocumentation","src":"120371:64:15","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"120449:9:15","parameters":{"id":17989,"nodeType":"ParameterList","parameters":[],"src":"120458:2:15"},"returnParameters":{"id":17990,"nodeType":"ParameterList","parameters":[],"src":"120469:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":17997,"nodeType":"FunctionDefinition","src":"120594:62:15","nodes":[],"documentation":{"id":17992,"nodeType":"StructuredDocumentation","src":"120476:113:15","text":"Stop the snapshot capture of the current gas by latest snapshot name, capturing the gas used since the start."},"functionSelector":"f6402eda","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"120603:15:15","parameters":{"id":17993,"nodeType":"ParameterList","parameters":[],"src":"120618:2:15"},"returnParameters":{"id":17996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17995,"mutability":"mutable","name":"gasUsed","nameLocation":"120647:7:15","nodeType":"VariableDeclaration","scope":17997,"src":"120639:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17994,"name":"uint256","nodeType":"ElementaryTypeName","src":"120639:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120638:17:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18005,"nodeType":"FunctionDefinition","src":"120828:82:15","nodes":[],"documentation":{"id":17998,"nodeType":"StructuredDocumentation","src":"120662:161:15","text":"Stop the snapshot capture of the current gas usage by name, capturing the gas used since the start.\n The group name is derived from the contract name."},"functionSelector":"773b2805","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"120837:15:15","parameters":{"id":18001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18000,"mutability":"mutable","name":"name","nameLocation":"120869:4:15","nodeType":"VariableDeclaration","scope":18005,"src":"120853:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":17999,"name":"string","nodeType":"ElementaryTypeName","src":"120853:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"120852:22:15"},"returnParameters":{"id":18004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18003,"mutability":"mutable","name":"gasUsed","nameLocation":"120901:7:15","nodeType":"VariableDeclaration","scope":18005,"src":"120893:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18002,"name":"uint256","nodeType":"ElementaryTypeName","src":"120893:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"120892:17:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18015,"nodeType":"FunctionDefinition","src":"121035:105:15","nodes":[],"documentation":{"id":18006,"nodeType":"StructuredDocumentation","src":"120916:114:15","text":"Stop the snapshot capture of the current gas usage by name in a group, capturing the gas used since the start."},"functionSelector":"0c9db707","implemented":false,"kind":"function","modifiers":[],"name":"stopSnapshotGas","nameLocation":"121044:15:15","parameters":{"id":18011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18008,"mutability":"mutable","name":"group","nameLocation":"121076:5:15","nodeType":"VariableDeclaration","scope":18015,"src":"121060:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18007,"name":"string","nodeType":"ElementaryTypeName","src":"121060:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":18010,"mutability":"mutable","name":"name","nameLocation":"121099:4:15","nodeType":"VariableDeclaration","scope":18015,"src":"121083:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18009,"name":"string","nodeType":"ElementaryTypeName","src":"121083:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"121059:45:15"},"returnParameters":{"id":18014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18013,"mutability":"mutable","name":"gasUsed","nameLocation":"121131:7:15","nodeType":"VariableDeclaration","scope":18015,"src":"121123:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18012,"name":"uint256","nodeType":"ElementaryTypeName","src":"121123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121122:17:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18025,"nodeType":"FunctionDefinition","src":"121198:69:15","nodes":[],"documentation":{"id":18016,"nodeType":"StructuredDocumentation","src":"121146:47:15","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"121207:5:15","parameters":{"id":18023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18018,"mutability":"mutable","name":"target","nameLocation":"121221:6:15","nodeType":"VariableDeclaration","scope":18025,"src":"121213:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18017,"name":"address","nodeType":"ElementaryTypeName","src":"121213:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18020,"mutability":"mutable","name":"slot","nameLocation":"121237:4:15","nodeType":"VariableDeclaration","scope":18025,"src":"121229:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"121229:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":18022,"mutability":"mutable","name":"value","nameLocation":"121251:5:15","nodeType":"VariableDeclaration","scope":18025,"src":"121243:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"121243:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"121212:45:15"},"returnParameters":{"id":18024,"nodeType":"ParameterList","parameters":[],"src":"121266:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18031,"nodeType":"FunctionDefinition","src":"121370:43:15","nodes":[],"documentation":{"id":18026,"nodeType":"StructuredDocumentation","src":"121273:92:15","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"121379:8:15","parameters":{"id":18029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18028,"mutability":"mutable","name":"txHash","nameLocation":"121396:6:15","nodeType":"VariableDeclaration","scope":18031,"src":"121388:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"121388:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"121387:16:15"},"returnParameters":{"id":18030,"nodeType":"ParameterList","parameters":[],"src":"121412:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18039,"nodeType":"FunctionDefinition","src":"121515:59:15","nodes":[],"documentation":{"id":18032,"nodeType":"StructuredDocumentation","src":"121419:91:15","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"121524:8:15","parameters":{"id":18037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18034,"mutability":"mutable","name":"forkId","nameLocation":"121541:6:15","nodeType":"VariableDeclaration","scope":18039,"src":"121533:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18033,"name":"uint256","nodeType":"ElementaryTypeName","src":"121533:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18036,"mutability":"mutable","name":"txHash","nameLocation":"121557:6:15","nodeType":"VariableDeclaration","scope":18039,"src":"121549:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"121549:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"121532:32:15"},"returnParameters":{"id":18038,"nodeType":"ParameterList","parameters":[],"src":"121573:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18045,"nodeType":"FunctionDefinition","src":"121608:50:15","nodes":[],"documentation":{"id":18040,"nodeType":"StructuredDocumentation","src":"121580:23:15","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"121617:10:15","parameters":{"id":18043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18042,"mutability":"mutable","name":"newGasPrice","nameLocation":"121636:11:15","nodeType":"VariableDeclaration","scope":18045,"src":"121628:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18041,"name":"uint256","nodeType":"ElementaryTypeName","src":"121628:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121627:21:15"},"returnParameters":{"id":18044,"nodeType":"ParameterList","parameters":[],"src":"121657:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18053,"nodeType":"FunctionDefinition","src":"121754:57:15","nodes":[],"documentation":{"id":18046,"nodeType":"StructuredDocumentation","src":"121664:85:15","text":"Utility cheatcode to mark specific storage slot as warm, simulating a prior read."},"functionSelector":"b23184cf","implemented":false,"kind":"function","modifiers":[],"name":"warmSlot","nameLocation":"121763:8:15","parameters":{"id":18051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18048,"mutability":"mutable","name":"target","nameLocation":"121780:6:15","nodeType":"VariableDeclaration","scope":18053,"src":"121772:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18047,"name":"address","nodeType":"ElementaryTypeName","src":"121772:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18050,"mutability":"mutable","name":"slot","nameLocation":"121796:4:15","nodeType":"VariableDeclaration","scope":18053,"src":"121788:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"121788:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"121771:30:15"},"returnParameters":{"id":18052,"nodeType":"ParameterList","parameters":[],"src":"121810:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18059,"nodeType":"FunctionDefinition","src":"121849:45:15","nodes":[],"documentation":{"id":18054,"nodeType":"StructuredDocumentation","src":"121817:27:15","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"121858:4:15","parameters":{"id":18057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18056,"mutability":"mutable","name":"newTimestamp","nameLocation":"121871:12:15","nodeType":"VariableDeclaration","scope":18059,"src":"121863:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18055,"name":"uint256","nodeType":"ElementaryTypeName","src":"121863:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"121862:22:15"},"returnParameters":{"id":18058,"nodeType":"ParameterList","parameters":[],"src":"121893:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18067,"nodeType":"FunctionDefinition","src":"122019:76:15","nodes":[],"documentation":{"id":18060,"nodeType":"StructuredDocumentation","src":"121900:114:15","text":"`deleteSnapshot` is being deprecated in favor of `deleteStateSnapshot`. It will be removed in future versions."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"122028:14:15","parameters":{"id":18063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18062,"mutability":"mutable","name":"snapshotId","nameLocation":"122051:10:15","nodeType":"VariableDeclaration","scope":18067,"src":"122043:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18061,"name":"uint256","nodeType":"ElementaryTypeName","src":"122043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122042:20:15"},"returnParameters":{"id":18066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18065,"mutability":"mutable","name":"success","nameLocation":"122086:7:15","nodeType":"VariableDeclaration","scope":18067,"src":"122081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18064,"name":"bool","nodeType":"ElementaryTypeName","src":"122081:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"122080:14:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18071,"nodeType":"FunctionDefinition","src":"122222:36:15","nodes":[],"documentation":{"id":18068,"nodeType":"StructuredDocumentation","src":"122101:116:15","text":"`deleteSnapshots` is being deprecated in favor of `deleteStateSnapshots`. It will be removed in future versions."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"122231:15:15","parameters":{"id":18069,"nodeType":"ParameterList","parameters":[],"src":"122246:2:15"},"returnParameters":{"id":18070,"nodeType":"ParameterList","parameters":[],"src":"122257:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18079,"nodeType":"FunctionDefinition","src":"122389:79:15","nodes":[],"documentation":{"id":18072,"nodeType":"StructuredDocumentation","src":"122264:120:15","text":"`revertToAndDelete` is being deprecated in favor of `revertToStateAndDelete`. It will be removed in future versions."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"122398:17:15","parameters":{"id":18075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18074,"mutability":"mutable","name":"snapshotId","nameLocation":"122424:10:15","nodeType":"VariableDeclaration","scope":18079,"src":"122416:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18073,"name":"uint256","nodeType":"ElementaryTypeName","src":"122416:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122415:20:15"},"returnParameters":{"id":18078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18077,"mutability":"mutable","name":"success","nameLocation":"122459:7:15","nodeType":"VariableDeclaration","scope":18079,"src":"122454:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18076,"name":"bool","nodeType":"ElementaryTypeName","src":"122454:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"122453:14:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18087,"nodeType":"FunctionDefinition","src":"122581:70:15","nodes":[],"documentation":{"id":18080,"nodeType":"StructuredDocumentation","src":"122474:102:15","text":"`revertTo` is being deprecated in favor of `revertToState`. It will be removed in future versions."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"122590:8:15","parameters":{"id":18083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18082,"mutability":"mutable","name":"snapshotId","nameLocation":"122607:10:15","nodeType":"VariableDeclaration","scope":18087,"src":"122599:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18081,"name":"uint256","nodeType":"ElementaryTypeName","src":"122599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122598:20:15"},"returnParameters":{"id":18086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18085,"mutability":"mutable","name":"success","nameLocation":"122642:7:15","nodeType":"VariableDeclaration","scope":18087,"src":"122637:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18084,"name":"bool","nodeType":"ElementaryTypeName","src":"122637:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"122636:14:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18093,"nodeType":"FunctionDefinition","src":"122764:58:15","nodes":[],"documentation":{"id":18088,"nodeType":"StructuredDocumentation","src":"122657:102:15","text":"`snapshot` is being deprecated in favor of `snapshotState`. It will be removed in future versions."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"122773:8:15","parameters":{"id":18089,"nodeType":"ParameterList","parameters":[],"src":"122781:2:15"},"returnParameters":{"id":18092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18091,"mutability":"mutable","name":"snapshotId","nameLocation":"122810:10:15","nodeType":"VariableDeclaration","scope":18093,"src":"122802:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18090,"name":"uint256","nodeType":"ElementaryTypeName","src":"122802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"122801:20:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18105,"nodeType":"FunctionDefinition","src":"122974:105:15","nodes":[],"documentation":{"id":18094,"nodeType":"StructuredDocumentation","src":"122862:107:15","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"122983:16:15","parameters":{"id":18103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18096,"mutability":"mutable","name":"callee","nameLocation":"123008:6:15","nodeType":"VariableDeclaration","scope":18105,"src":"123000:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18095,"name":"address","nodeType":"ElementaryTypeName","src":"123000:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18098,"mutability":"mutable","name":"msgValue","nameLocation":"123024:8:15","nodeType":"VariableDeclaration","scope":18105,"src":"123016:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18097,"name":"uint256","nodeType":"ElementaryTypeName","src":"123016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18100,"mutability":"mutable","name":"minGas","nameLocation":"123041:6:15","nodeType":"VariableDeclaration","scope":18105,"src":"123034:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18099,"name":"uint64","nodeType":"ElementaryTypeName","src":"123034:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":18102,"mutability":"mutable","name":"data","nameLocation":"123064:4:15","nodeType":"VariableDeclaration","scope":18105,"src":"123049:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18101,"name":"bytes","nodeType":"ElementaryTypeName","src":"123049:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"122999:70:15"},"returnParameters":{"id":18104,"nodeType":"ParameterList","parameters":[],"src":"123078:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18119,"nodeType":"FunctionDefinition","src":"123212:127:15","nodes":[],"documentation":{"id":18106,"nodeType":"StructuredDocumentation","src":"123085:122:15","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"123221:16:15","parameters":{"id":18117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18108,"mutability":"mutable","name":"callee","nameLocation":"123246:6:15","nodeType":"VariableDeclaration","scope":18119,"src":"123238:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18107,"name":"address","nodeType":"ElementaryTypeName","src":"123238:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18110,"mutability":"mutable","name":"msgValue","nameLocation":"123262:8:15","nodeType":"VariableDeclaration","scope":18119,"src":"123254:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18109,"name":"uint256","nodeType":"ElementaryTypeName","src":"123254:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18112,"mutability":"mutable","name":"minGas","nameLocation":"123279:6:15","nodeType":"VariableDeclaration","scope":18119,"src":"123272:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18111,"name":"uint64","nodeType":"ElementaryTypeName","src":"123272:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":18114,"mutability":"mutable","name":"data","nameLocation":"123302:4:15","nodeType":"VariableDeclaration","scope":18119,"src":"123287:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18113,"name":"bytes","nodeType":"ElementaryTypeName","src":"123287:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18116,"mutability":"mutable","name":"count","nameLocation":"123315:5:15","nodeType":"VariableDeclaration","scope":18119,"src":"123308:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18115,"name":"uint64","nodeType":"ElementaryTypeName","src":"123308:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123237:84:15"},"returnParameters":{"id":18118,"nodeType":"ParameterList","parameters":[],"src":"123338:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18127,"nodeType":"FunctionDefinition","src":"123471:66:15","nodes":[],"documentation":{"id":18120,"nodeType":"StructuredDocumentation","src":"123345:121:15","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"123480:10:15","parameters":{"id":18125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18122,"mutability":"mutable","name":"callee","nameLocation":"123499:6:15","nodeType":"VariableDeclaration","scope":18127,"src":"123491:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18121,"name":"address","nodeType":"ElementaryTypeName","src":"123491:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18124,"mutability":"mutable","name":"data","nameLocation":"123522:4:15","nodeType":"VariableDeclaration","scope":18127,"src":"123507:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18123,"name":"bytes","nodeType":"ElementaryTypeName","src":"123507:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"123490:37:15"},"returnParameters":{"id":18126,"nodeType":"ParameterList","parameters":[],"src":"123536:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18137,"nodeType":"FunctionDefinition","src":"123624:80:15","nodes":[],"documentation":{"id":18128,"nodeType":"StructuredDocumentation","src":"123543:76:15","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"123633:10:15","parameters":{"id":18135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18130,"mutability":"mutable","name":"callee","nameLocation":"123652:6:15","nodeType":"VariableDeclaration","scope":18137,"src":"123644:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18129,"name":"address","nodeType":"ElementaryTypeName","src":"123644:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18132,"mutability":"mutable","name":"data","nameLocation":"123675:4:15","nodeType":"VariableDeclaration","scope":18137,"src":"123660:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18131,"name":"bytes","nodeType":"ElementaryTypeName","src":"123660:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18134,"mutability":"mutable","name":"count","nameLocation":"123688:5:15","nodeType":"VariableDeclaration","scope":18137,"src":"123681:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18133,"name":"uint64","nodeType":"ElementaryTypeName","src":"123681:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123643:51:15"},"returnParameters":{"id":18136,"nodeType":"ParameterList","parameters":[],"src":"123703:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18147,"nodeType":"FunctionDefinition","src":"123792:84:15","nodes":[],"documentation":{"id":18138,"nodeType":"StructuredDocumentation","src":"123710:77:15","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"123801:10:15","parameters":{"id":18145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18140,"mutability":"mutable","name":"callee","nameLocation":"123820:6:15","nodeType":"VariableDeclaration","scope":18147,"src":"123812:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18139,"name":"address","nodeType":"ElementaryTypeName","src":"123812:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18142,"mutability":"mutable","name":"msgValue","nameLocation":"123836:8:15","nodeType":"VariableDeclaration","scope":18147,"src":"123828:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18141,"name":"uint256","nodeType":"ElementaryTypeName","src":"123828:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18144,"mutability":"mutable","name":"data","nameLocation":"123861:4:15","nodeType":"VariableDeclaration","scope":18147,"src":"123846:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18143,"name":"bytes","nodeType":"ElementaryTypeName","src":"123846:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"123811:55:15"},"returnParameters":{"id":18146,"nodeType":"ParameterList","parameters":[],"src":"123875:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18159,"nodeType":"FunctionDefinition","src":"123979:98:15","nodes":[],"documentation":{"id":18148,"nodeType":"StructuredDocumentation","src":"123882:92:15","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"123988:10:15","parameters":{"id":18157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18150,"mutability":"mutable","name":"callee","nameLocation":"124007:6:15","nodeType":"VariableDeclaration","scope":18159,"src":"123999:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18149,"name":"address","nodeType":"ElementaryTypeName","src":"123999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18152,"mutability":"mutable","name":"msgValue","nameLocation":"124023:8:15","nodeType":"VariableDeclaration","scope":18159,"src":"124015:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18151,"name":"uint256","nodeType":"ElementaryTypeName","src":"124015:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18154,"mutability":"mutable","name":"data","nameLocation":"124048:4:15","nodeType":"VariableDeclaration","scope":18159,"src":"124033:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18153,"name":"bytes","nodeType":"ElementaryTypeName","src":"124033:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18156,"mutability":"mutable","name":"count","nameLocation":"124061:5:15","nodeType":"VariableDeclaration","scope":18159,"src":"124054:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18155,"name":"uint64","nodeType":"ElementaryTypeName","src":"124054:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"123998:69:15"},"returnParameters":{"id":18158,"nodeType":"ParameterList","parameters":[],"src":"124076:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18171,"nodeType":"FunctionDefinition","src":"124170:96:15","nodes":[],"documentation":{"id":18160,"nodeType":"StructuredDocumentation","src":"124083:82:15","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"124179:10:15","parameters":{"id":18169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18162,"mutability":"mutable","name":"callee","nameLocation":"124198:6:15","nodeType":"VariableDeclaration","scope":18171,"src":"124190:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18161,"name":"address","nodeType":"ElementaryTypeName","src":"124190:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18164,"mutability":"mutable","name":"msgValue","nameLocation":"124214:8:15","nodeType":"VariableDeclaration","scope":18171,"src":"124206:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18163,"name":"uint256","nodeType":"ElementaryTypeName","src":"124206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18166,"mutability":"mutable","name":"gas","nameLocation":"124231:3:15","nodeType":"VariableDeclaration","scope":18171,"src":"124224:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18165,"name":"uint64","nodeType":"ElementaryTypeName","src":"124224:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":18168,"mutability":"mutable","name":"data","nameLocation":"124251:4:15","nodeType":"VariableDeclaration","scope":18171,"src":"124236:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18167,"name":"bytes","nodeType":"ElementaryTypeName","src":"124236:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"124189:67:15"},"returnParameters":{"id":18170,"nodeType":"ParameterList","parameters":[],"src":"124265:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18185,"nodeType":"FunctionDefinition","src":"124375:110:15","nodes":[],"documentation":{"id":18172,"nodeType":"StructuredDocumentation","src":"124272:98:15","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"124384:10:15","parameters":{"id":18183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18174,"mutability":"mutable","name":"callee","nameLocation":"124403:6:15","nodeType":"VariableDeclaration","scope":18185,"src":"124395:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18173,"name":"address","nodeType":"ElementaryTypeName","src":"124395:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18176,"mutability":"mutable","name":"msgValue","nameLocation":"124419:8:15","nodeType":"VariableDeclaration","scope":18185,"src":"124411:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18175,"name":"uint256","nodeType":"ElementaryTypeName","src":"124411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18178,"mutability":"mutable","name":"gas","nameLocation":"124436:3:15","nodeType":"VariableDeclaration","scope":18185,"src":"124429:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18177,"name":"uint64","nodeType":"ElementaryTypeName","src":"124429:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":18180,"mutability":"mutable","name":"data","nameLocation":"124456:4:15","nodeType":"VariableDeclaration","scope":18185,"src":"124441:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18179,"name":"bytes","nodeType":"ElementaryTypeName","src":"124441:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18182,"mutability":"mutable","name":"count","nameLocation":"124469:5:15","nodeType":"VariableDeclaration","scope":18185,"src":"124462:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18181,"name":"uint64","nodeType":"ElementaryTypeName","src":"124462:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"124394:81:15"},"returnParameters":{"id":18184,"nodeType":"ParameterList","parameters":[],"src":"124484:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18193,"nodeType":"FunctionDefinition","src":"124597:74:15","nodes":[],"documentation":{"id":18186,"nodeType":"StructuredDocumentation","src":"124491:101:15","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE opcode"},"functionSelector":"73cdce36","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate","nameLocation":"124606:12:15","parameters":{"id":18191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18188,"mutability":"mutable","name":"bytecode","nameLocation":"124634:8:15","nodeType":"VariableDeclaration","scope":18193,"src":"124619:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18187,"name":"bytes","nodeType":"ElementaryTypeName","src":"124619:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18190,"mutability":"mutable","name":"deployer","nameLocation":"124652:8:15","nodeType":"VariableDeclaration","scope":18193,"src":"124644:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18189,"name":"address","nodeType":"ElementaryTypeName","src":"124644:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124618:43:15"},"returnParameters":{"id":18192,"nodeType":"ParameterList","parameters":[],"src":"124670:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18201,"nodeType":"FunctionDefinition","src":"124784:75:15","nodes":[],"documentation":{"id":18194,"nodeType":"StructuredDocumentation","src":"124677:102:15","text":"Expects the deployment of the specified bytecode by the specified address using the CREATE2 opcode"},"functionSelector":"ea54a472","implemented":false,"kind":"function","modifiers":[],"name":"expectCreate2","nameLocation":"124793:13:15","parameters":{"id":18199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18196,"mutability":"mutable","name":"bytecode","nameLocation":"124822:8:15","nodeType":"VariableDeclaration","scope":18201,"src":"124807:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18195,"name":"bytes","nodeType":"ElementaryTypeName","src":"124807:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18198,"mutability":"mutable","name":"deployer","nameLocation":"124840:8:15","nodeType":"VariableDeclaration","scope":18201,"src":"124832:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18197,"name":"address","nodeType":"ElementaryTypeName","src":"124832:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"124806:43:15"},"returnParameters":{"id":18200,"nodeType":"ParameterList","parameters":[],"src":"124858:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18215,"nodeType":"FunctionDefinition","src":"125218:134:15","nodes":[],"documentation":{"id":18202,"nodeType":"StructuredDocumentation","src":"124865:348:15","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"125227:19:15","parameters":{"id":18213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18204,"mutability":"mutable","name":"checkTopic0","nameLocation":"125252:11:15","nodeType":"VariableDeclaration","scope":18215,"src":"125247:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18203,"name":"bool","nodeType":"ElementaryTypeName","src":"125247:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18206,"mutability":"mutable","name":"checkTopic1","nameLocation":"125270:11:15","nodeType":"VariableDeclaration","scope":18215,"src":"125265:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18205,"name":"bool","nodeType":"ElementaryTypeName","src":"125265:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18208,"mutability":"mutable","name":"checkTopic2","nameLocation":"125288:11:15","nodeType":"VariableDeclaration","scope":18215,"src":"125283:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18207,"name":"bool","nodeType":"ElementaryTypeName","src":"125283:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18210,"mutability":"mutable","name":"checkTopic3","nameLocation":"125306:11:15","nodeType":"VariableDeclaration","scope":18215,"src":"125301:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18209,"name":"bool","nodeType":"ElementaryTypeName","src":"125301:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18212,"mutability":"mutable","name":"checkData","nameLocation":"125324:9:15","nodeType":"VariableDeclaration","scope":18215,"src":"125319:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18211,"name":"bool","nodeType":"ElementaryTypeName","src":"125319:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"125246:88:15"},"returnParameters":{"id":18214,"nodeType":"ParameterList","parameters":[],"src":"125351:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18231,"nodeType":"FunctionDefinition","src":"125455:197:15","nodes":[],"documentation":{"id":18216,"nodeType":"StructuredDocumentation","src":"125358:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"125464:19:15","parameters":{"id":18229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18218,"mutability":"mutable","name":"checkTopic0","nameLocation":"125498:11:15","nodeType":"VariableDeclaration","scope":18231,"src":"125493:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18217,"name":"bool","nodeType":"ElementaryTypeName","src":"125493:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18220,"mutability":"mutable","name":"checkTopic1","nameLocation":"125524:11:15","nodeType":"VariableDeclaration","scope":18231,"src":"125519:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18219,"name":"bool","nodeType":"ElementaryTypeName","src":"125519:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18222,"mutability":"mutable","name":"checkTopic2","nameLocation":"125550:11:15","nodeType":"VariableDeclaration","scope":18231,"src":"125545:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18221,"name":"bool","nodeType":"ElementaryTypeName","src":"125545:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18224,"mutability":"mutable","name":"checkTopic3","nameLocation":"125576:11:15","nodeType":"VariableDeclaration","scope":18231,"src":"125571:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18223,"name":"bool","nodeType":"ElementaryTypeName","src":"125571:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18226,"mutability":"mutable","name":"checkData","nameLocation":"125602:9:15","nodeType":"VariableDeclaration","scope":18231,"src":"125597:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18225,"name":"bool","nodeType":"ElementaryTypeName","src":"125597:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18228,"mutability":"mutable","name":"emitter","nameLocation":"125629:7:15","nodeType":"VariableDeclaration","scope":18231,"src":"125621:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18227,"name":"address","nodeType":"ElementaryTypeName","src":"125621:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"125483:159:15"},"returnParameters":{"id":18230,"nodeType":"ParameterList","parameters":[],"src":"125651:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18235,"nodeType":"FunctionDefinition","src":"125942:40:15","nodes":[],"documentation":{"id":18232,"nodeType":"StructuredDocumentation","src":"125658:279:15","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"125951:19:15","parameters":{"id":18233,"nodeType":"ParameterList","parameters":[],"src":"125970:2:15"},"returnParameters":{"id":18234,"nodeType":"ParameterList","parameters":[],"src":"125981:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18241,"nodeType":"FunctionDefinition","src":"126085:55:15","nodes":[],"documentation":{"id":18236,"nodeType":"StructuredDocumentation","src":"125988:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"126094:19:15","parameters":{"id":18239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18238,"mutability":"mutable","name":"emitter","nameLocation":"126122:7:15","nodeType":"VariableDeclaration","scope":18241,"src":"126114:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18237,"name":"address","nodeType":"ElementaryTypeName","src":"126114:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"126113:17:15"},"returnParameters":{"id":18240,"nodeType":"ParameterList","parameters":[],"src":"126139:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18253,"nodeType":"FunctionDefinition","src":"126479:99:15","nodes":[],"documentation":{"id":18242,"nodeType":"StructuredDocumentation","src":"126146:328:15","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"126488:10:15","parameters":{"id":18251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18244,"mutability":"mutable","name":"checkTopic1","nameLocation":"126504:11:15","nodeType":"VariableDeclaration","scope":18253,"src":"126499:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18243,"name":"bool","nodeType":"ElementaryTypeName","src":"126499:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18246,"mutability":"mutable","name":"checkTopic2","nameLocation":"126522:11:15","nodeType":"VariableDeclaration","scope":18253,"src":"126517:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18245,"name":"bool","nodeType":"ElementaryTypeName","src":"126517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18248,"mutability":"mutable","name":"checkTopic3","nameLocation":"126540:11:15","nodeType":"VariableDeclaration","scope":18253,"src":"126535:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18247,"name":"bool","nodeType":"ElementaryTypeName","src":"126535:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18250,"mutability":"mutable","name":"checkData","nameLocation":"126558:9:15","nodeType":"VariableDeclaration","scope":18253,"src":"126553:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18249,"name":"bool","nodeType":"ElementaryTypeName","src":"126553:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"126498:70:15"},"returnParameters":{"id":18252,"nodeType":"ParameterList","parameters":[],"src":"126577:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18267,"nodeType":"FunctionDefinition","src":"126681:124:15","nodes":[],"documentation":{"id":18254,"nodeType":"StructuredDocumentation","src":"126584:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"126690:10:15","parameters":{"id":18265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18256,"mutability":"mutable","name":"checkTopic1","nameLocation":"126706:11:15","nodeType":"VariableDeclaration","scope":18267,"src":"126701:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18255,"name":"bool","nodeType":"ElementaryTypeName","src":"126701:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18258,"mutability":"mutable","name":"checkTopic2","nameLocation":"126724:11:15","nodeType":"VariableDeclaration","scope":18267,"src":"126719:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18257,"name":"bool","nodeType":"ElementaryTypeName","src":"126719:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18260,"mutability":"mutable","name":"checkTopic3","nameLocation":"126742:11:15","nodeType":"VariableDeclaration","scope":18267,"src":"126737:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18259,"name":"bool","nodeType":"ElementaryTypeName","src":"126737:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18262,"mutability":"mutable","name":"checkData","nameLocation":"126760:9:15","nodeType":"VariableDeclaration","scope":18267,"src":"126755:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18261,"name":"bool","nodeType":"ElementaryTypeName","src":"126755:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18264,"mutability":"mutable","name":"emitter","nameLocation":"126779:7:15","nodeType":"VariableDeclaration","scope":18267,"src":"126771:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18263,"name":"address","nodeType":"ElementaryTypeName","src":"126771:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"126700:87:15"},"returnParameters":{"id":18266,"nodeType":"ParameterList","parameters":[],"src":"126804:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18271,"nodeType":"FunctionDefinition","src":"127075:31:15","nodes":[],"documentation":{"id":18268,"nodeType":"StructuredDocumentation","src":"126811:259:15","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"127084:10:15","parameters":{"id":18269,"nodeType":"ParameterList","parameters":[],"src":"127094:2:15"},"returnParameters":{"id":18270,"nodeType":"ParameterList","parameters":[],"src":"127105:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18277,"nodeType":"FunctionDefinition","src":"127209:46:15","nodes":[],"documentation":{"id":18272,"nodeType":"StructuredDocumentation","src":"127112:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"127218:10:15","parameters":{"id":18275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18274,"mutability":"mutable","name":"emitter","nameLocation":"127237:7:15","nodeType":"VariableDeclaration","scope":18277,"src":"127229:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18273,"name":"address","nodeType":"ElementaryTypeName","src":"127229:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"127228:17:15"},"returnParameters":{"id":18276,"nodeType":"ParameterList","parameters":[],"src":"127254:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18291,"nodeType":"FunctionDefinition","src":"127325:113:15","nodes":[],"documentation":{"id":18278,"nodeType":"StructuredDocumentation","src":"127261:59:15","text":"Expect a given number of logs with the provided topics."},"functionSelector":"5e1d1c33","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"127334:10:15","parameters":{"id":18289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18280,"mutability":"mutable","name":"checkTopic1","nameLocation":"127350:11:15","nodeType":"VariableDeclaration","scope":18291,"src":"127345:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18279,"name":"bool","nodeType":"ElementaryTypeName","src":"127345:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18282,"mutability":"mutable","name":"checkTopic2","nameLocation":"127368:11:15","nodeType":"VariableDeclaration","scope":18291,"src":"127363:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18281,"name":"bool","nodeType":"ElementaryTypeName","src":"127363:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18284,"mutability":"mutable","name":"checkTopic3","nameLocation":"127386:11:15","nodeType":"VariableDeclaration","scope":18291,"src":"127381:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18283,"name":"bool","nodeType":"ElementaryTypeName","src":"127381:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18286,"mutability":"mutable","name":"checkData","nameLocation":"127404:9:15","nodeType":"VariableDeclaration","scope":18291,"src":"127399:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18285,"name":"bool","nodeType":"ElementaryTypeName","src":"127399:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18288,"mutability":"mutable","name":"count","nameLocation":"127422:5:15","nodeType":"VariableDeclaration","scope":18291,"src":"127415:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18287,"name":"uint64","nodeType":"ElementaryTypeName","src":"127415:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127344:84:15"},"returnParameters":{"id":18290,"nodeType":"ParameterList","parameters":[],"src":"127437:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18307,"nodeType":"FunctionDefinition","src":"127532:184:15","nodes":[],"documentation":{"id":18292,"nodeType":"StructuredDocumentation","src":"127444:83:15","text":"Expect a given number of logs from a specific emitter with the provided topics."},"functionSelector":"c339d02c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"127541:10:15","parameters":{"id":18305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18294,"mutability":"mutable","name":"checkTopic1","nameLocation":"127566:11:15","nodeType":"VariableDeclaration","scope":18307,"src":"127561:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18293,"name":"bool","nodeType":"ElementaryTypeName","src":"127561:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18296,"mutability":"mutable","name":"checkTopic2","nameLocation":"127592:11:15","nodeType":"VariableDeclaration","scope":18307,"src":"127587:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18295,"name":"bool","nodeType":"ElementaryTypeName","src":"127587:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18298,"mutability":"mutable","name":"checkTopic3","nameLocation":"127618:11:15","nodeType":"VariableDeclaration","scope":18307,"src":"127613:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18297,"name":"bool","nodeType":"ElementaryTypeName","src":"127613:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18300,"mutability":"mutable","name":"checkData","nameLocation":"127644:9:15","nodeType":"VariableDeclaration","scope":18307,"src":"127639:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18299,"name":"bool","nodeType":"ElementaryTypeName","src":"127639:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18302,"mutability":"mutable","name":"emitter","nameLocation":"127671:7:15","nodeType":"VariableDeclaration","scope":18307,"src":"127663:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18301,"name":"address","nodeType":"ElementaryTypeName","src":"127663:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18304,"mutability":"mutable","name":"count","nameLocation":"127695:5:15","nodeType":"VariableDeclaration","scope":18307,"src":"127688:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18303,"name":"uint64","nodeType":"ElementaryTypeName","src":"127688:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127551:155:15"},"returnParameters":{"id":18306,"nodeType":"ParameterList","parameters":[],"src":"127715:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18313,"nodeType":"FunctionDefinition","src":"127800:43:15","nodes":[],"documentation":{"id":18308,"nodeType":"StructuredDocumentation","src":"127722:73:15","text":"Expect a given number of logs with all topic and data checks enabled."},"functionSelector":"4c74a335","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"127809:10:15","parameters":{"id":18311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18310,"mutability":"mutable","name":"count","nameLocation":"127827:5:15","nodeType":"VariableDeclaration","scope":18313,"src":"127820:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18309,"name":"uint64","nodeType":"ElementaryTypeName","src":"127820:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127819:14:15"},"returnParameters":{"id":18312,"nodeType":"ParameterList","parameters":[],"src":"127842:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18321,"nodeType":"FunctionDefinition","src":"127951:60:15","nodes":[],"documentation":{"id":18314,"nodeType":"StructuredDocumentation","src":"127849:97:15","text":"Expect a given number of logs from a specific emitter with all topic and data checks enabled."},"functionSelector":"b43aece3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"127960:10:15","parameters":{"id":18319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18316,"mutability":"mutable","name":"emitter","nameLocation":"127979:7:15","nodeType":"VariableDeclaration","scope":18321,"src":"127971:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18315,"name":"address","nodeType":"ElementaryTypeName","src":"127971:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18318,"mutability":"mutable","name":"count","nameLocation":"127995:5:15","nodeType":"VariableDeclaration","scope":18321,"src":"127988:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18317,"name":"uint64","nodeType":"ElementaryTypeName","src":"127988:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"127970:31:15"},"returnParameters":{"id":18320,"nodeType":"ParameterList","parameters":[],"src":"128010:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18327,"nodeType":"FunctionDefinition","src":"128089:57:15","nodes":[],"documentation":{"id":18322,"nodeType":"StructuredDocumentation","src":"128017:67:15","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"11fb5b9c","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"128098:19:15","parameters":{"id":18325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18324,"mutability":"mutable","name":"revertData","nameLocation":"128125:10:15","nodeType":"VariableDeclaration","scope":18327,"src":"128118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18323,"name":"bytes4","nodeType":"ElementaryTypeName","src":"128118:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"128117:19:15"},"returnParameters":{"id":18326,"nodeType":"ParameterList","parameters":[],"src":"128145:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18335,"nodeType":"FunctionDefinition","src":"128245:75:15","nodes":[],"documentation":{"id":18328,"nodeType":"StructuredDocumentation","src":"128152:88:15","text":"Expects an error on next call to reverter address, that starts with the revert data."},"functionSelector":"51aa008a","implemented":false,"kind":"function","modifiers":[],"name":"expectPartialRevert","nameLocation":"128254:19:15","parameters":{"id":18333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18330,"mutability":"mutable","name":"revertData","nameLocation":"128281:10:15","nodeType":"VariableDeclaration","scope":18335,"src":"128274:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18329,"name":"bytes4","nodeType":"ElementaryTypeName","src":"128274:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":18332,"mutability":"mutable","name":"reverter","nameLocation":"128301:8:15","nodeType":"VariableDeclaration","scope":18335,"src":"128293:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18331,"name":"address","nodeType":"ElementaryTypeName","src":"128293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"128273:37:15"},"returnParameters":{"id":18334,"nodeType":"ParameterList","parameters":[],"src":"128319:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18339,"nodeType":"FunctionDefinition","src":"128386:33:15","nodes":[],"documentation":{"id":18336,"nodeType":"StructuredDocumentation","src":"128326:55:15","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"128395:12:15","parameters":{"id":18337,"nodeType":"ParameterList","parameters":[],"src":"128407:2:15"},"returnParameters":{"id":18338,"nodeType":"ParameterList","parameters":[],"src":"128418:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18345,"nodeType":"FunctionDefinition","src":"128501:50:15","nodes":[],"documentation":{"id":18340,"nodeType":"StructuredDocumentation","src":"128425:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"128510:12:15","parameters":{"id":18343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18342,"mutability":"mutable","name":"revertData","nameLocation":"128530:10:15","nodeType":"VariableDeclaration","scope":18345,"src":"128523:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18341,"name":"bytes4","nodeType":"ElementaryTypeName","src":"128523:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"128522:19:15"},"returnParameters":{"id":18344,"nodeType":"ParameterList","parameters":[],"src":"128550:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18355,"nodeType":"FunctionDefinition","src":"128679:82:15","nodes":[],"documentation":{"id":18346,"nodeType":"StructuredDocumentation","src":"128557:117:15","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that match the revert data."},"functionSelector":"b0762d73","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"128688:12:15","parameters":{"id":18353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18348,"mutability":"mutable","name":"revertData","nameLocation":"128708:10:15","nodeType":"VariableDeclaration","scope":18355,"src":"128701:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"128701:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":18350,"mutability":"mutable","name":"reverter","nameLocation":"128728:8:15","nodeType":"VariableDeclaration","scope":18355,"src":"128720:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18349,"name":"address","nodeType":"ElementaryTypeName","src":"128720:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18352,"mutability":"mutable","name":"count","nameLocation":"128745:5:15","nodeType":"VariableDeclaration","scope":18355,"src":"128738:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18351,"name":"uint64","nodeType":"ElementaryTypeName","src":"128738:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"128700:51:15"},"returnParameters":{"id":18354,"nodeType":"ParameterList","parameters":[],"src":"128760:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18365,"nodeType":"FunctionDefinition","src":"128897:90:15","nodes":[],"documentation":{"id":18356,"nodeType":"StructuredDocumentation","src":"128767:125:15","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address that exactly match the revert data."},"functionSelector":"d345fb1f","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"128906:12:15","parameters":{"id":18363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18358,"mutability":"mutable","name":"revertData","nameLocation":"128934:10:15","nodeType":"VariableDeclaration","scope":18365,"src":"128919:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18357,"name":"bytes","nodeType":"ElementaryTypeName","src":"128919:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18360,"mutability":"mutable","name":"reverter","nameLocation":"128954:8:15","nodeType":"VariableDeclaration","scope":18365,"src":"128946:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18359,"name":"address","nodeType":"ElementaryTypeName","src":"128946:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18362,"mutability":"mutable","name":"count","nameLocation":"128971:5:15","nodeType":"VariableDeclaration","scope":18365,"src":"128964:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18361,"name":"uint64","nodeType":"ElementaryTypeName","src":"128964:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"128918:59:15"},"returnParameters":{"id":18364,"nodeType":"ParameterList","parameters":[],"src":"128986:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18371,"nodeType":"FunctionDefinition","src":"129069:58:15","nodes":[],"documentation":{"id":18366,"nodeType":"StructuredDocumentation","src":"128993:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"129078:12:15","parameters":{"id":18369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18368,"mutability":"mutable","name":"revertData","nameLocation":"129106:10:15","nodeType":"VariableDeclaration","scope":18371,"src":"129091:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18367,"name":"bytes","nodeType":"ElementaryTypeName","src":"129091:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"129090:27:15"},"returnParameters":{"id":18370,"nodeType":"ParameterList","parameters":[],"src":"129126:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18377,"nodeType":"FunctionDefinition","src":"129213:49:15","nodes":[],"documentation":{"id":18372,"nodeType":"StructuredDocumentation","src":"129133:75:15","text":"Expects an error with any revert data on next call to reverter address."},"functionSelector":"d814f38a","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"129222:12:15","parameters":{"id":18375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18374,"mutability":"mutable","name":"reverter","nameLocation":"129243:8:15","nodeType":"VariableDeclaration","scope":18377,"src":"129235:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18373,"name":"address","nodeType":"ElementaryTypeName","src":"129235:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129234:18:15"},"returnParameters":{"id":18376,"nodeType":"ParameterList","parameters":[],"src":"129261:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18385,"nodeType":"FunctionDefinition","src":"129351:68:15","nodes":[],"documentation":{"id":18378,"nodeType":"StructuredDocumentation","src":"129268:78:15","text":"Expects an error from reverter address on next call, with any revert data."},"functionSelector":"260bc5de","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"129360:12:15","parameters":{"id":18383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18380,"mutability":"mutable","name":"revertData","nameLocation":"129380:10:15","nodeType":"VariableDeclaration","scope":18385,"src":"129373:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18379,"name":"bytes4","nodeType":"ElementaryTypeName","src":"129373:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":18382,"mutability":"mutable","name":"reverter","nameLocation":"129400:8:15","nodeType":"VariableDeclaration","scope":18385,"src":"129392:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18381,"name":"address","nodeType":"ElementaryTypeName","src":"129392:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129372:37:15"},"returnParameters":{"id":18384,"nodeType":"ParameterList","parameters":[],"src":"129418:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18393,"nodeType":"FunctionDefinition","src":"129524:76:15","nodes":[],"documentation":{"id":18386,"nodeType":"StructuredDocumentation","src":"129425:94:15","text":"Expects an error from reverter address on next call, that exactly matches the revert data."},"functionSelector":"61ebcf12","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"129533:12:15","parameters":{"id":18391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18388,"mutability":"mutable","name":"revertData","nameLocation":"129561:10:15","nodeType":"VariableDeclaration","scope":18393,"src":"129546:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18387,"name":"bytes","nodeType":"ElementaryTypeName","src":"129546:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18390,"mutability":"mutable","name":"reverter","nameLocation":"129581:8:15","nodeType":"VariableDeclaration","scope":18393,"src":"129573:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18389,"name":"address","nodeType":"ElementaryTypeName","src":"129573:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129545:45:15"},"returnParameters":{"id":18392,"nodeType":"ParameterList","parameters":[],"src":"129599:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18399,"nodeType":"FunctionDefinition","src":"129708:45:15","nodes":[],"documentation":{"id":18394,"nodeType":"StructuredDocumentation","src":"129606:97:15","text":"Expects a `count` number of reverts from the upcoming calls with any revert data or reverter."},"functionSelector":"4ee38244","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"129717:12:15","parameters":{"id":18397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18396,"mutability":"mutable","name":"count","nameLocation":"129737:5:15","nodeType":"VariableDeclaration","scope":18399,"src":"129730:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18395,"name":"uint64","nodeType":"ElementaryTypeName","src":"129730:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"129729:14:15"},"returnParameters":{"id":18398,"nodeType":"ParameterList","parameters":[],"src":"129752:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18407,"nodeType":"FunctionDefinition","src":"129855:64:15","nodes":[],"documentation":{"id":18400,"nodeType":"StructuredDocumentation","src":"129759:91:15","text":"Expects a `count` number of reverts from the upcoming calls that match the revert data."},"functionSelector":"e45ca72d","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"129864:12:15","parameters":{"id":18405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18402,"mutability":"mutable","name":"revertData","nameLocation":"129884:10:15","nodeType":"VariableDeclaration","scope":18407,"src":"129877:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":18401,"name":"bytes4","nodeType":"ElementaryTypeName","src":"129877:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":18404,"mutability":"mutable","name":"count","nameLocation":"129903:5:15","nodeType":"VariableDeclaration","scope":18407,"src":"129896:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18403,"name":"uint64","nodeType":"ElementaryTypeName","src":"129896:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"129876:33:15"},"returnParameters":{"id":18406,"nodeType":"ParameterList","parameters":[],"src":"129918:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18415,"nodeType":"FunctionDefinition","src":"130029:72:15","nodes":[],"documentation":{"id":18408,"nodeType":"StructuredDocumentation","src":"129925:99:15","text":"Expects a `count` number of reverts from the upcoming calls that exactly match the revert data."},"functionSelector":"4994c273","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"130038:12:15","parameters":{"id":18413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18410,"mutability":"mutable","name":"revertData","nameLocation":"130066:10:15","nodeType":"VariableDeclaration","scope":18415,"src":"130051:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18409,"name":"bytes","nodeType":"ElementaryTypeName","src":"130051:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":18412,"mutability":"mutable","name":"count","nameLocation":"130085:5:15","nodeType":"VariableDeclaration","scope":18415,"src":"130078:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18411,"name":"uint64","nodeType":"ElementaryTypeName","src":"130078:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130050:41:15"},"returnParameters":{"id":18414,"nodeType":"ParameterList","parameters":[],"src":"130100:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18423,"nodeType":"FunctionDefinition","src":"130202:63:15","nodes":[],"documentation":{"id":18416,"nodeType":"StructuredDocumentation","src":"130107:90:15","text":"Expects a `count` number of reverts from the upcoming calls from the reverter address."},"functionSelector":"1ff5f952","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"130211:12:15","parameters":{"id":18421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18418,"mutability":"mutable","name":"reverter","nameLocation":"130232:8:15","nodeType":"VariableDeclaration","scope":18423,"src":"130224:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18417,"name":"address","nodeType":"ElementaryTypeName","src":"130224:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18420,"mutability":"mutable","name":"count","nameLocation":"130249:5:15","nodeType":"VariableDeclaration","scope":18423,"src":"130242:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18419,"name":"uint64","nodeType":"ElementaryTypeName","src":"130242:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130223:32:15"},"returnParameters":{"id":18422,"nodeType":"ParameterList","parameters":[],"src":"130264:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18431,"nodeType":"FunctionDefinition","src":"130494:59:15","nodes":[],"documentation":{"id":18424,"nodeType":"StructuredDocumentation","src":"130271:218:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"130503:16:15","parameters":{"id":18429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18426,"mutability":"mutable","name":"min","nameLocation":"130527:3:15","nodeType":"VariableDeclaration","scope":18431,"src":"130520:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18425,"name":"uint64","nodeType":"ElementaryTypeName","src":"130520:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":18428,"mutability":"mutable","name":"max","nameLocation":"130539:3:15","nodeType":"VariableDeclaration","scope":18431,"src":"130532:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18427,"name":"uint64","nodeType":"ElementaryTypeName","src":"130532:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130519:24:15"},"returnParameters":{"id":18430,"nodeType":"ParameterList","parameters":[],"src":"130552:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18439,"nodeType":"FunctionDefinition","src":"130795:63:15","nodes":[],"documentation":{"id":18432,"nodeType":"StructuredDocumentation","src":"130559:231:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"130804:20:15","parameters":{"id":18437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18434,"mutability":"mutable","name":"min","nameLocation":"130832:3:15","nodeType":"VariableDeclaration","scope":18439,"src":"130825:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18433,"name":"uint64","nodeType":"ElementaryTypeName","src":"130825:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":18436,"mutability":"mutable","name":"max","nameLocation":"130844:3:15","nodeType":"VariableDeclaration","scope":18439,"src":"130837:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":18435,"name":"uint64","nodeType":"ElementaryTypeName","src":"130837:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"130824:24:15"},"returnParameters":{"id":18438,"nodeType":"ParameterList","parameters":[],"src":"130857:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18445,"nodeType":"FunctionDefinition","src":"130940:38:15","nodes":[],"documentation":{"id":18440,"nodeType":"StructuredDocumentation","src":"130864:71:15","text":"Marks a test as skipped. Must be called at the top level of a test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"130949:4:15","parameters":{"id":18443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18442,"mutability":"mutable","name":"skipTest","nameLocation":"130959:8:15","nodeType":"VariableDeclaration","scope":18445,"src":"130954:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18441,"name":"bool","nodeType":"ElementaryTypeName","src":"130954:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"130953:15:15"},"returnParameters":{"id":18444,"nodeType":"ParameterList","parameters":[],"src":"130977:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18453,"nodeType":"FunctionDefinition","src":"131074:62:15","nodes":[],"documentation":{"id":18446,"nodeType":"StructuredDocumentation","src":"130984:85:15","text":"Marks a test as skipped with a reason. Must be called at the top level of a test."},"functionSelector":"c42a80a7","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"131083:4:15","parameters":{"id":18451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18448,"mutability":"mutable","name":"skipTest","nameLocation":"131093:8:15","nodeType":"VariableDeclaration","scope":18453,"src":"131088:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":18447,"name":"bool","nodeType":"ElementaryTypeName","src":"131088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":18450,"mutability":"mutable","name":"reason","nameLocation":"131119:6:15","nodeType":"VariableDeclaration","scope":18453,"src":"131103:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":18449,"name":"string","nodeType":"ElementaryTypeName","src":"131103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"131087:39:15"},"returnParameters":{"id":18452,"nodeType":"ParameterList","parameters":[],"src":"131135:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18457,"nodeType":"FunctionDefinition","src":"131211:41:15","nodes":[],"documentation":{"id":18454,"nodeType":"StructuredDocumentation","src":"131142:64:15","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"131220:20:15","parameters":{"id":18455,"nodeType":"ParameterList","parameters":[],"src":"131240:2:15"},"returnParameters":{"id":18456,"nodeType":"ParameterList","parameters":[],"src":"131251:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":18461,"nodeType":"FunctionDefinition","src":"131740:38:15","nodes":[],"documentation":{"id":18458,"nodeType":"StructuredDocumentation","src":"131294:441:15","text":"Causes the next contract creation (via new) to fail and return its initcode in the returndata buffer.\n This allows type-safe access to the initcode payload that would be used for contract creation.\n Example usage:\n vm.interceptInitcode();\n bytes memory initcode;\n try new MyContract(param1, param2) { assert(false); }\n catch (bytes memory interceptedInitcode) { initcode = interceptedInitcode; }"},"functionSelector":"838653c7","implemented":false,"kind":"function","modifiers":[],"name":"interceptInitcode","nameLocation":"131749:17:15","parameters":{"id":18459,"nodeType":"ParameterList","parameters":[],"src":"131766:2:15"},"returnParameters":{"id":18460,"nodeType":"ParameterList","parameters":[],"src":"131777:0:15"},"scope":18462,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":17393,"name":"VmSafe","nameLocations":["105204:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":17391,"src":"105204:6:15"},"id":17394,"nodeType":"InheritanceSpecifier","src":"105204:6:15"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":17392,"nodeType":"StructuredDocumentation","src":"105017:171:15","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[18462,17391],"name":"Vm","nameLocation":"105198:2:15","scope":18463,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":15}